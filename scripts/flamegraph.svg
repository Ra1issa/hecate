<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="741.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="741.00"> </text><svg id="frames" x="10" width="1180" total_samples="1417"><g><title>perf (5 samples, 0.35%)</title><rect x="0.0000%" y="693" width="0.3529%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.35%)</title><rect x="0.0000%" y="677" width="0.3529%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="687.50"></text></g><g><title>do_syscall_64 (5 samples, 0.35%)</title><rect x="0.0000%" y="661" width="0.3529%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="671.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.35%)</title><rect x="0.0000%" y="645" width="0.3529%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="655.50"></text></g><g><title>__do_execve_file.isra.0 (5 samples, 0.35%)</title><rect x="0.0000%" y="629" width="0.3529%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="639.50"></text></g><g><title>search_binary_handler (5 samples, 0.35%)</title><rect x="0.0000%" y="613" width="0.3529%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="623.50"></text></g><g><title>load_elf_binary (5 samples, 0.35%)</title><rect x="0.0000%" y="597" width="0.3529%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="607.50"></text></g><g><title>setup_new_exec (5 samples, 0.35%)</title><rect x="0.0000%" y="581" width="0.3529%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="5"/><text x="0.2500%" y="591.50"></text></g><g><title>perf_event_exec (5 samples, 0.35%)</title><rect x="0.0000%" y="565" width="0.3529%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="575.50"></text></g><g><title>ctx_resched (5 samples, 0.35%)</title><rect x="0.0000%" y="549" width="0.3529%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="5"/><text x="0.2500%" y="559.50"></text></g><g><title>perf_pmu_enable.part.0 (5 samples, 0.35%)</title><rect x="0.0000%" y="533" width="0.3529%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="5"/><text x="0.2500%" y="543.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.35%)</title><rect x="0.0000%" y="517" width="0.3529%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="5"/><text x="0.2500%" y="527.50"></text></g><g><title>intel_tfa_pmu_enable_all (5 samples, 0.35%)</title><rect x="0.0000%" y="501" width="0.3529%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="5"/><text x="0.2500%" y="511.50"></text></g><g><title>native_write_msr (5 samples, 0.35%)</title><rect x="0.0000%" y="485" width="0.3529%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="5"/><text x="0.2500%" y="495.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.07%)</title><rect x="0.3529%" y="677" width="0.0706%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="0.6029%" y="687.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (1 samples, 0.07%)</title><rect x="0.4234%" y="661" width="0.0706%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="0.6734%" y="671.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (1 samples, 0.07%)</title><rect x="0.4940%" y="661" width="0.0706%" height="15" fill="rgb(225,20,46)" fg:x="7" fg:w="1"/><text x="0.7440%" y="671.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (1 samples, 0.07%)</title><rect x="0.5646%" y="661" width="0.0706%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="1"/><text x="0.8146%" y="671.50"></text></g><g><title>&lt;T as subtle::ConditionallyNegatable&gt;::conditional_negate (2 samples, 0.14%)</title><rect x="0.8469%" y="645" width="0.1411%" height="15" fill="rgb(221,200,47)" fg:x="12" fg:w="2"/><text x="1.0969%" y="655.50"></text></g><g><title>[[heap]] (11 samples, 0.78%)</title><rect x="0.4234%" y="677" width="0.7763%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="11"/><text x="0.6734%" y="687.50"></text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (8 samples, 0.56%)</title><rect x="0.6351%" y="661" width="0.5646%" height="15" fill="rgb(249,33,26)" fg:x="9" fg:w="8"/><text x="0.8851%" y="671.50"></text></g><g><title>&lt;u16 as subtle::ConstantTimeEq&gt;::ct_eq (3 samples, 0.21%)</title><rect x="0.9880%" y="645" width="0.2117%" height="15" fill="rgb(235,183,28)" fg:x="14" fg:w="3"/><text x="1.2380%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.21%)</title><rect x="0.9880%" y="629" width="0.2117%" height="15" fill="rgb(221,5,38)" fg:x="14" fg:w="3"/><text x="1.2380%" y="639.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (3 samples, 0.21%)</title><rect x="0.9880%" y="613" width="0.2117%" height="15" fill="rgb(247,18,42)" fg:x="14" fg:w="3"/><text x="1.2380%" y="623.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (3 samples, 0.21%)</title><rect x="1.1997%" y="661" width="0.2117%" height="15" fill="rgb(241,131,45)" fg:x="17" fg:w="3"/><text x="1.4497%" y="671.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (2 samples, 0.14%)</title><rect x="1.4114%" y="661" width="0.1411%" height="15" fill="rgb(249,31,29)" fg:x="20" fg:w="2"/><text x="1.6614%" y="671.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (1 samples, 0.07%)</title><rect x="1.8349%" y="645" width="0.0706%" height="15" fill="rgb(225,111,53)" fg:x="26" fg:w="1"/><text x="2.0849%" y="655.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (6 samples, 0.42%)</title><rect x="1.5526%" y="661" width="0.4234%" height="15" fill="rgb(238,160,17)" fg:x="22" fg:w="6"/><text x="1.8026%" y="671.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (1 samples, 0.07%)</title><rect x="1.9054%" y="645" width="0.0706%" height="15" fill="rgb(214,148,48)" fg:x="27" fg:w="1"/><text x="2.1554%" y="655.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (1 samples, 0.07%)</title><rect x="1.9760%" y="661" width="0.0706%" height="15" fill="rgb(232,36,49)" fg:x="28" fg:w="1"/><text x="2.2260%" y="671.50"></text></g><g><title>curve25519_dalek::field::&lt;impl subtle::ConstantTimeEq for curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::ct_eq (1 samples, 0.07%)</title><rect x="1.9760%" y="645" width="0.0706%" height="15" fill="rgb(209,103,24)" fg:x="28" fg:w="1"/><text x="2.2260%" y="655.50"></text></g><g><title>hecate::receiver::check_message (1 samples, 0.07%)</title><rect x="2.0466%" y="661" width="0.0706%" height="15" fill="rgb(229,88,8)" fg:x="29" fg:w="1"/><text x="2.2966%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="2.0466%" y="645" width="0.0706%" height="15" fill="rgb(213,181,19)" fg:x="29" fg:w="1"/><text x="2.2966%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="2.0466%" y="629" width="0.0706%" height="15" fill="rgb(254,191,54)" fg:x="29" fg:w="1"/><text x="2.2966%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="2.0466%" y="613" width="0.0706%" height="15" fill="rgb(241,83,37)" fg:x="29" fg:w="1"/><text x="2.2966%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="2.0466%" y="597" width="0.0706%" height="15" fill="rgb(233,36,39)" fg:x="29" fg:w="1"/><text x="2.2966%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="2.0466%" y="581" width="0.0706%" height="15" fill="rgb(226,3,54)" fg:x="29" fg:w="1"/><text x="2.2966%" y="591.50"></text></g><g><title>[[stack]] (15 samples, 1.06%)</title><rect x="1.1997%" y="677" width="1.0586%" height="15" fill="rgb(245,192,40)" fg:x="17" fg:w="15"/><text x="1.4497%" y="687.50"></text></g><g><title>sha2::sha256::soft::compress (2 samples, 0.14%)</title><rect x="2.1171%" y="661" width="0.1411%" height="15" fill="rgb(238,167,29)" fg:x="30" fg:w="2"/><text x="2.3671%" y="671.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.07%)</title><rect x="2.1877%" y="645" width="0.0706%" height="15" fill="rgb(232,182,51)" fg:x="31" fg:w="1"/><text x="2.4377%" y="655.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (8 samples, 0.56%)</title><rect x="2.2583%" y="661" width="0.5646%" height="15" fill="rgb(231,60,39)" fg:x="32" fg:w="8"/><text x="2.5083%" y="671.50"></text></g><g><title>[receiver] (16 samples, 1.13%)</title><rect x="2.2583%" y="677" width="1.1291%" height="15" fill="rgb(208,69,12)" fg:x="32" fg:w="16"/><text x="2.5083%" y="687.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (8 samples, 0.56%)</title><rect x="2.8229%" y="661" width="0.5646%" height="15" fill="rgb(235,93,37)" fg:x="40" fg:w="8"/><text x="3.0729%" y="671.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (27 samples, 1.91%)</title><rect x="3.3874%" y="661" width="1.9054%" height="15" fill="rgb(213,116,39)" fg:x="48" fg:w="27"/><text x="3.6374%" y="671.50">&lt;..</text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (2 samples, 0.14%)</title><rect x="5.2929%" y="661" width="0.1411%" height="15" fill="rgb(222,207,29)" fg:x="75" fg:w="2"/><text x="5.5429%" y="671.50"></text></g><g><title>&lt;curve25519_dalek::scalar::Scalar as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="5.4340%" y="661" width="0.0706%" height="15" fill="rgb(206,96,30)" fg:x="77" fg:w="1"/><text x="5.6840%" y="671.50"></text></g><g><title>&lt;curve25519_dalek::scalar::Scalar as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.07%)</title><rect x="5.4340%" y="645" width="0.0706%" height="15" fill="rgb(218,138,4)" fg:x="77" fg:w="1"/><text x="5.6840%" y="655.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.07%)</title><rect x="5.4340%" y="629" width="0.0706%" height="15" fill="rgb(250,191,14)" fg:x="77" fg:w="1"/><text x="5.6840%" y="639.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.07%)</title><rect x="5.4340%" y="613" width="0.0706%" height="15" fill="rgb(239,60,40)" fg:x="77" fg:w="1"/><text x="5.6840%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.07%)</title><rect x="5.4340%" y="597" width="0.0706%" height="15" fill="rgb(206,27,48)" fg:x="77" fg:w="1"/><text x="5.6840%" y="607.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (1 samples, 0.07%)</title><rect x="5.4340%" y="581" width="0.0706%" height="15" fill="rgb(225,35,8)" fg:x="77" fg:w="1"/><text x="5.6840%" y="591.50"></text></g><g><title>[receiver] (2 samples, 0.14%)</title><rect x="5.5046%" y="661" width="0.1411%" height="15" fill="rgb(250,213,24)" fg:x="78" fg:w="2"/><text x="5.7546%" y="671.50"></text></g><g><title>sha2::sha256::soft::compress (2 samples, 0.14%)</title><rect x="5.5046%" y="645" width="0.1411%" height="15" fill="rgb(247,123,22)" fg:x="78" fg:w="2"/><text x="5.7546%" y="655.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 0.14%)</title><rect x="5.5046%" y="629" width="0.1411%" height="15" fill="rgb(231,138,38)" fg:x="78" fg:w="2"/><text x="5.7546%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="5.6457%" y="661" width="0.0706%" height="15" fill="rgb(231,145,46)" fg:x="80" fg:w="1"/><text x="5.8957%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.14%)</title><rect x="5.7163%" y="661" width="0.1411%" height="15" fill="rgb(251,118,11)" fg:x="81" fg:w="2"/><text x="5.9663%" y="671.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (6 samples, 0.42%)</title><rect x="5.8574%" y="661" width="0.4234%" height="15" fill="rgb(217,147,25)" fg:x="83" fg:w="6"/><text x="6.1074%" y="671.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (3 samples, 0.21%)</title><rect x="6.2809%" y="661" width="0.2117%" height="15" fill="rgb(247,81,37)" fg:x="89" fg:w="3"/><text x="6.5309%" y="671.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (6 samples, 0.42%)</title><rect x="6.4926%" y="661" width="0.4234%" height="15" fill="rgb(209,12,38)" fg:x="92" fg:w="6"/><text x="6.7426%" y="671.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (1 samples, 0.07%)</title><rect x="6.8454%" y="645" width="0.0706%" height="15" fill="rgb(227,1,9)" fg:x="97" fg:w="1"/><text x="7.0954%" y="655.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (9 samples, 0.64%)</title><rect x="6.9160%" y="661" width="0.6351%" height="15" fill="rgb(248,47,43)" fg:x="98" fg:w="9"/><text x="7.1660%" y="671.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (1 samples, 0.07%)</title><rect x="7.5512%" y="661" width="0.0706%" height="15" fill="rgb(221,10,30)" fg:x="107" fg:w="1"/><text x="7.8012%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.07%)</title><rect x="7.6217%" y="661" width="0.0706%" height="15" fill="rgb(210,229,1)" fg:x="108" fg:w="1"/><text x="7.8717%" y="671.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (12 samples, 0.85%)</title><rect x="7.6923%" y="261" width="0.8469%" height="15" fill="rgb(222,148,37)" fg:x="109" fg:w="12"/><text x="7.9423%" y="271.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (6 samples, 0.42%)</title><rect x="8.1157%" y="245" width="0.4234%" height="15" fill="rgb(234,67,33)" fg:x="115" fg:w="6"/><text x="8.3657%" y="255.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (13 samples, 0.92%)</title><rect x="7.6923%" y="277" width="0.9174%" height="15" fill="rgb(247,98,35)" fg:x="109" fg:w="13"/><text x="7.9423%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (1 samples, 0.07%)</title><rect x="8.5392%" y="261" width="0.0706%" height="15" fill="rgb(247,138,52)" fg:x="121" fg:w="1"/><text x="8.7892%" y="271.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (7 samples, 0.49%)</title><rect x="8.6097%" y="277" width="0.4940%" height="15" fill="rgb(213,79,30)" fg:x="122" fg:w="7"/><text x="8.8597%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (7 samples, 0.49%)</title><rect x="8.6097%" y="261" width="0.4940%" height="15" fill="rgb(246,177,23)" fg:x="122" fg:w="7"/><text x="8.8597%" y="271.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (5 samples, 0.35%)</title><rect x="8.7509%" y="245" width="0.3529%" height="15" fill="rgb(230,62,27)" fg:x="124" fg:w="5"/><text x="9.0009%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 1.48%)</title><rect x="7.6923%" y="405" width="1.4820%" height="15" fill="rgb(216,154,8)" fg:x="109" fg:w="21"/><text x="7.9423%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (21 samples, 1.48%)</title><rect x="7.6923%" y="389" width="1.4820%" height="15" fill="rgb(244,35,45)" fg:x="109" fg:w="21"/><text x="7.9423%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (21 samples, 1.48%)</title><rect x="7.6923%" y="373" width="1.4820%" height="15" fill="rgb(251,115,12)" fg:x="109" fg:w="21"/><text x="7.9423%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (21 samples, 1.48%)</title><rect x="7.6923%" y="357" width="1.4820%" height="15" fill="rgb(240,54,50)" fg:x="109" fg:w="21"/><text x="7.9423%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (21 samples, 1.48%)</title><rect x="7.6923%" y="341" width="1.4820%" height="15" fill="rgb(233,84,52)" fg:x="109" fg:w="21"/><text x="7.9423%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (21 samples, 1.48%)</title><rect x="7.6923%" y="325" width="1.4820%" height="15" fill="rgb(207,117,47)" fg:x="109" fg:w="21"/><text x="7.9423%" y="335.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul::{{closure}} (21 samples, 1.48%)</title><rect x="7.6923%" y="309" width="1.4820%" height="15" fill="rgb(249,43,39)" fg:x="109" fg:w="21"/><text x="7.9423%" y="319.50"></text></g><g><title>&lt;curve25519_dalek::window::LookupTable&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (21 samples, 1.48%)</title><rect x="7.6923%" y="293" width="1.4820%" height="15" fill="rgb(209,38,44)" fg:x="109" fg:w="21"/><text x="7.9423%" y="303.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::to_projective_niels (1 samples, 0.07%)</title><rect x="9.1037%" y="277" width="0.0706%" height="15" fill="rgb(236,212,23)" fg:x="129" fg:w="1"/><text x="9.3537%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.07%)</title><rect x="9.1037%" y="261" width="0.0706%" height="15" fill="rgb(242,79,21)" fg:x="129" fg:w="1"/><text x="9.3537%" y="271.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (6 samples, 0.42%)</title><rect x="9.1743%" y="325" width="0.4234%" height="15" fill="rgb(211,96,35)" fg:x="130" fg:w="6"/><text x="9.4243%" y="335.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (6 samples, 0.42%)</title><rect x="9.1743%" y="309" width="0.4234%" height="15" fill="rgb(253,215,40)" fg:x="130" fg:w="6"/><text x="9.4243%" y="319.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (4 samples, 0.28%)</title><rect x="9.3155%" y="293" width="0.2823%" height="15" fill="rgb(211,81,21)" fg:x="132" fg:w="4"/><text x="9.5655%" y="303.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (8 samples, 0.56%)</title><rect x="9.5977%" y="325" width="0.5646%" height="15" fill="rgb(208,190,38)" fg:x="136" fg:w="8"/><text x="9.8477%" y="335.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (8 samples, 0.56%)</title><rect x="9.5977%" y="309" width="0.5646%" height="15" fill="rgb(235,213,38)" fg:x="136" fg:w="8"/><text x="9.8477%" y="319.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (4 samples, 0.28%)</title><rect x="9.8800%" y="293" width="0.2823%" height="15" fill="rgb(237,122,38)" fg:x="140" fg:w="4"/><text x="10.1300%" y="303.50"></text></g><g><title>hecate::receiver::check_message (37 samples, 2.61%)</title><rect x="7.6923%" y="661" width="2.6112%" height="15" fill="rgb(244,218,35)" fg:x="109" fg:w="37"/><text x="7.9423%" y="671.50">he..</text></g><g><title>poksho::sign::verify_signature (37 samples, 2.61%)</title><rect x="7.6923%" y="645" width="2.6112%" height="15" fill="rgb(240,68,47)" fg:x="109" fg:w="37"/><text x="7.9423%" y="655.50">po..</text></g><g><title>poksho::statement::Statement::verify_proof (37 samples, 2.61%)</title><rect x="7.6923%" y="629" width="2.6112%" height="15" fill="rgb(210,16,53)" fg:x="109" fg:w="37"/><text x="7.9423%" y="639.50">po..</text></g><g><title>poksho::statement::Statement::homomorphism_with_subtraction (37 samples, 2.61%)</title><rect x="7.6923%" y="613" width="2.6112%" height="15" fill="rgb(235,124,12)" fg:x="109" fg:w="37"/><text x="7.9423%" y="623.50">po..</text></g><g><title>&lt;curve25519_dalek::ristretto::RistrettoPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (37 samples, 2.61%)</title><rect x="7.6923%" y="597" width="2.6112%" height="15" fill="rgb(224,169,11)" fg:x="109" fg:w="37"/><text x="7.9423%" y="607.50">&lt;c..</text></g><g><title>&lt;curve25519_dalek::edwards::EdwardsPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (37 samples, 2.61%)</title><rect x="7.6923%" y="581" width="2.6112%" height="15" fill="rgb(250,166,2)" fg:x="109" fg:w="37"/><text x="7.9423%" y="591.50">&lt;c..</text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (37 samples, 2.61%)</title><rect x="7.6923%" y="565" width="2.6112%" height="15" fill="rgb(242,216,29)" fg:x="109" fg:w="37"/><text x="7.9423%" y="575.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (37 samples, 2.61%)</title><rect x="7.6923%" y="549" width="2.6112%" height="15" fill="rgb(230,116,27)" fg:x="109" fg:w="37"/><text x="7.9423%" y="559.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (37 samples, 2.61%)</title><rect x="7.6923%" y="533" width="2.6112%" height="15" fill="rgb(228,99,48)" fg:x="109" fg:w="37"/><text x="7.9423%" y="543.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (37 samples, 2.61%)</title><rect x="7.6923%" y="517" width="2.6112%" height="15" fill="rgb(253,11,6)" fg:x="109" fg:w="37"/><text x="7.9423%" y="527.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (37 samples, 2.61%)</title><rect x="7.6923%" y="501" width="2.6112%" height="15" fill="rgb(247,143,39)" fg:x="109" fg:w="37"/><text x="7.9423%" y="511.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (37 samples, 2.61%)</title><rect x="7.6923%" y="485" width="2.6112%" height="15" fill="rgb(236,97,10)" fg:x="109" fg:w="37"/><text x="7.9423%" y="495.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (37 samples, 2.61%)</title><rect x="7.6923%" y="469" width="2.6112%" height="15" fill="rgb(233,208,19)" fg:x="109" fg:w="37"/><text x="7.9423%" y="479.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 2.61%)</title><rect x="7.6923%" y="453" width="2.6112%" height="15" fill="rgb(216,164,2)" fg:x="109" fg:w="37"/><text x="7.9423%" y="463.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 2.61%)</title><rect x="7.6923%" y="437" width="2.6112%" height="15" fill="rgb(220,129,5)" fg:x="109" fg:w="37"/><text x="7.9423%" y="447.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 2.61%)</title><rect x="7.6923%" y="421" width="2.6112%" height="15" fill="rgb(242,17,10)" fg:x="109" fg:w="37"/><text x="7.9423%" y="431.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 1.13%)</title><rect x="9.1743%" y="405" width="1.1291%" height="15" fill="rgb(242,107,0)" fg:x="130" fg:w="16"/><text x="9.4243%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (16 samples, 1.13%)</title><rect x="9.1743%" y="389" width="1.1291%" height="15" fill="rgb(251,28,31)" fg:x="130" fg:w="16"/><text x="9.4243%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (16 samples, 1.13%)</title><rect x="9.1743%" y="373" width="1.1291%" height="15" fill="rgb(233,223,10)" fg:x="130" fg:w="16"/><text x="9.4243%" y="383.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul::{{closure}} (16 samples, 1.13%)</title><rect x="9.1743%" y="357" width="1.1291%" height="15" fill="rgb(215,21,27)" fg:x="130" fg:w="16"/><text x="9.4243%" y="367.50"></text></g><g><title>&lt;curve25519_dalek::window::LookupTable&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (16 samples, 1.13%)</title><rect x="9.1743%" y="341" width="1.1291%" height="15" fill="rgb(232,23,21)" fg:x="130" fg:w="16"/><text x="9.4243%" y="351.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::to_projective_niels (2 samples, 0.14%)</title><rect x="10.1623%" y="325" width="0.1411%" height="15" fill="rgb(244,5,23)" fg:x="144" fg:w="2"/><text x="10.4123%" y="335.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.14%)</title><rect x="10.1623%" y="309" width="0.1411%" height="15" fill="rgb(226,81,46)" fg:x="144" fg:w="2"/><text x="10.4123%" y="319.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (1 samples, 0.07%)</title><rect x="10.2329%" y="293" width="0.0706%" height="15" fill="rgb(247,70,30)" fg:x="145" fg:w="1"/><text x="10.4829%" y="303.50"></text></g><g><title>poksho::statement::Statement::homomorphism_with_subtraction (1 samples, 0.07%)</title><rect x="10.3035%" y="661" width="0.0706%" height="15" fill="rgb(212,68,19)" fg:x="146" fg:w="1"/><text x="10.5535%" y="671.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (2 samples, 0.14%)</title><rect x="10.4446%" y="245" width="0.1411%" height="15" fill="rgb(240,187,13)" fg:x="148" fg:w="2"/><text x="10.6946%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.28%)</title><rect x="10.3740%" y="373" width="0.2823%" height="15" fill="rgb(223,113,26)" fg:x="147" fg:w="4"/><text x="10.6240%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.28%)</title><rect x="10.3740%" y="357" width="0.2823%" height="15" fill="rgb(206,192,2)" fg:x="147" fg:w="4"/><text x="10.6240%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.28%)</title><rect x="10.3740%" y="341" width="0.2823%" height="15" fill="rgb(241,108,4)" fg:x="147" fg:w="4"/><text x="10.6240%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.28%)</title><rect x="10.3740%" y="325" width="0.2823%" height="15" fill="rgb(247,173,49)" fg:x="147" fg:w="4"/><text x="10.6240%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.28%)</title><rect x="10.3740%" y="309" width="0.2823%" height="15" fill="rgb(224,114,35)" fg:x="147" fg:w="4"/><text x="10.6240%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.28%)</title><rect x="10.3740%" y="293" width="0.2823%" height="15" fill="rgb(245,159,27)" fg:x="147" fg:w="4"/><text x="10.6240%" y="303.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul::{{closure}} (4 samples, 0.28%)</title><rect x="10.3740%" y="277" width="0.2823%" height="15" fill="rgb(245,172,44)" fg:x="147" fg:w="4"/><text x="10.6240%" y="287.50"></text></g><g><title>&lt;curve25519_dalek::window::LookupTable&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (4 samples, 0.28%)</title><rect x="10.3740%" y="261" width="0.2823%" height="15" fill="rgb(236,23,11)" fg:x="147" fg:w="4"/><text x="10.6240%" y="271.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::to_projective_niels (1 samples, 0.07%)</title><rect x="10.5857%" y="245" width="0.0706%" height="15" fill="rgb(205,117,38)" fg:x="150" fg:w="1"/><text x="10.8357%" y="255.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.14%)</title><rect x="10.6563%" y="293" width="0.1411%" height="15" fill="rgb(237,72,25)" fg:x="151" fg:w="2"/><text x="10.9063%" y="303.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (1 samples, 0.07%)</title><rect x="10.7975%" y="293" width="0.0706%" height="15" fill="rgb(244,70,9)" fg:x="153" fg:w="1"/><text x="11.0475%" y="303.50"></text></g><g><title>receiver::main (9 samples, 0.64%)</title><rect x="10.3740%" y="661" width="0.6351%" height="15" fill="rgb(217,125,39)" fg:x="147" fg:w="9"/><text x="10.6240%" y="671.50"></text></g><g><title>receiver::verify_message (9 samples, 0.64%)</title><rect x="10.3740%" y="645" width="0.6351%" height="15" fill="rgb(235,36,10)" fg:x="147" fg:w="9"/><text x="10.6240%" y="655.50"></text></g><g><title>hecate::receiver::check_message (9 samples, 0.64%)</title><rect x="10.3740%" y="629" width="0.6351%" height="15" fill="rgb(251,123,47)" fg:x="147" fg:w="9"/><text x="10.6240%" y="639.50"></text></g><g><title>poksho::sign::verify_signature (9 samples, 0.64%)</title><rect x="10.3740%" y="613" width="0.6351%" height="15" fill="rgb(221,13,13)" fg:x="147" fg:w="9"/><text x="10.6240%" y="623.50"></text></g><g><title>poksho::statement::Statement::verify_proof (9 samples, 0.64%)</title><rect x="10.3740%" y="597" width="0.6351%" height="15" fill="rgb(238,131,9)" fg:x="147" fg:w="9"/><text x="10.6240%" y="607.50"></text></g><g><title>poksho::statement::Statement::homomorphism_with_subtraction (9 samples, 0.64%)</title><rect x="10.3740%" y="581" width="0.6351%" height="15" fill="rgb(211,50,8)" fg:x="147" fg:w="9"/><text x="10.6240%" y="591.50"></text></g><g><title>&lt;curve25519_dalek::ristretto::RistrettoPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (9 samples, 0.64%)</title><rect x="10.3740%" y="565" width="0.6351%" height="15" fill="rgb(245,182,24)" fg:x="147" fg:w="9"/><text x="10.6240%" y="575.50"></text></g><g><title>&lt;curve25519_dalek::edwards::EdwardsPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (9 samples, 0.64%)</title><rect x="10.3740%" y="549" width="0.6351%" height="15" fill="rgb(242,14,37)" fg:x="147" fg:w="9"/><text x="10.6240%" y="559.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (9 samples, 0.64%)</title><rect x="10.3740%" y="533" width="0.6351%" height="15" fill="rgb(246,228,12)" fg:x="147" fg:w="9"/><text x="10.6240%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.64%)</title><rect x="10.3740%" y="517" width="0.6351%" height="15" fill="rgb(213,55,15)" fg:x="147" fg:w="9"/><text x="10.6240%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.64%)</title><rect x="10.3740%" y="501" width="0.6351%" height="15" fill="rgb(209,9,3)" fg:x="147" fg:w="9"/><text x="10.6240%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.64%)</title><rect x="10.3740%" y="485" width="0.6351%" height="15" fill="rgb(230,59,30)" fg:x="147" fg:w="9"/><text x="10.6240%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.64%)</title><rect x="10.3740%" y="469" width="0.6351%" height="15" fill="rgb(209,121,21)" fg:x="147" fg:w="9"/><text x="10.6240%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.64%)</title><rect x="10.3740%" y="453" width="0.6351%" height="15" fill="rgb(220,109,13)" fg:x="147" fg:w="9"/><text x="10.6240%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.64%)</title><rect x="10.3740%" y="437" width="0.6351%" height="15" fill="rgb(232,18,1)" fg:x="147" fg:w="9"/><text x="10.6240%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.64%)</title><rect x="10.3740%" y="421" width="0.6351%" height="15" fill="rgb(215,41,42)" fg:x="147" fg:w="9"/><text x="10.6240%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.64%)</title><rect x="10.3740%" y="405" width="0.6351%" height="15" fill="rgb(224,123,36)" fg:x="147" fg:w="9"/><text x="10.6240%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.64%)</title><rect x="10.3740%" y="389" width="0.6351%" height="15" fill="rgb(240,125,3)" fg:x="147" fg:w="9"/><text x="10.6240%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.35%)</title><rect x="10.6563%" y="373" width="0.3529%" height="15" fill="rgb(205,98,50)" fg:x="151" fg:w="5"/><text x="10.9063%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.35%)</title><rect x="10.6563%" y="357" width="0.3529%" height="15" fill="rgb(205,185,37)" fg:x="151" fg:w="5"/><text x="10.9063%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.35%)</title><rect x="10.6563%" y="341" width="0.3529%" height="15" fill="rgb(238,207,15)" fg:x="151" fg:w="5"/><text x="10.9063%" y="351.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul::{{closure}} (5 samples, 0.35%)</title><rect x="10.6563%" y="325" width="0.3529%" height="15" fill="rgb(213,199,42)" fg:x="151" fg:w="5"/><text x="10.9063%" y="335.50"></text></g><g><title>&lt;curve25519_dalek::window::LookupTable&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (5 samples, 0.35%)</title><rect x="10.6563%" y="309" width="0.3529%" height="15" fill="rgb(235,201,11)" fg:x="151" fg:w="5"/><text x="10.9063%" y="319.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::to_projective_niels (2 samples, 0.14%)</title><rect x="10.8680%" y="293" width="0.1411%" height="15" fill="rgb(207,46,11)" fg:x="154" fg:w="2"/><text x="11.1180%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.07%)</title><rect x="11.0092%" y="661" width="0.0706%" height="15" fill="rgb(241,35,35)" fg:x="156" fg:w="1"/><text x="11.2592%" y="671.50"></text></g><g><title>sha2::sha256::soft::schedule (16 samples, 1.13%)</title><rect x="11.0797%" y="661" width="1.1291%" height="15" fill="rgb(243,32,47)" fg:x="157" fg:w="16"/><text x="11.3297%" y="671.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.07%)</title><rect x="12.2089%" y="661" width="0.0706%" height="15" fill="rgb(247,202,23)" fg:x="173" fg:w="1"/><text x="12.4589%" y="671.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="12.2089%" y="645" width="0.0706%" height="15" fill="rgb(219,102,11)" fg:x="173" fg:w="1"/><text x="12.4589%" y="655.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="12.2089%" y="629" width="0.0706%" height="15" fill="rgb(243,110,44)" fg:x="173" fg:w="1"/><text x="12.4589%" y="639.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="12.2089%" y="613" width="0.0706%" height="15" fill="rgb(222,74,54)" fg:x="173" fg:w="1"/><text x="12.4589%" y="623.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.07%)</title><rect x="12.2089%" y="597" width="0.0706%" height="15" fill="rgb(216,99,12)" fg:x="173" fg:w="1"/><text x="12.4589%" y="607.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="12.2089%" y="581" width="0.0706%" height="15" fill="rgb(226,22,26)" fg:x="173" fg:w="1"/><text x="12.4589%" y="591.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="12.2089%" y="565" width="0.0706%" height="15" fill="rgb(217,163,10)" fg:x="173" fg:w="1"/><text x="12.4589%" y="575.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="12.2089%" y="549" width="0.0706%" height="15" fill="rgb(213,25,53)" fg:x="173" fg:w="1"/><text x="12.4589%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.07%)</title><rect x="12.2089%" y="533" width="0.0706%" height="15" fill="rgb(252,105,26)" fg:x="173" fg:w="1"/><text x="12.4589%" y="543.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 0.07%)</title><rect x="12.2089%" y="517" width="0.0706%" height="15" fill="rgb(220,39,43)" fg:x="173" fg:w="1"/><text x="12.4589%" y="527.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.07%)</title><rect x="12.2089%" y="501" width="0.0706%" height="15" fill="rgb(229,68,48)" fg:x="173" fg:w="1"/><text x="12.4589%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.07%)</title><rect x="12.2089%" y="485" width="0.0706%" height="15" fill="rgb(252,8,32)" fg:x="173" fg:w="1"/><text x="12.4589%" y="495.50"></text></g><g><title>receiver::main (1 samples, 0.07%)</title><rect x="12.2089%" y="469" width="0.0706%" height="15" fill="rgb(223,20,43)" fg:x="173" fg:w="1"/><text x="12.4589%" y="479.50"></text></g><g><title>receiver::verify_message (1 samples, 0.07%)</title><rect x="12.2089%" y="453" width="0.0706%" height="15" fill="rgb(229,81,49)" fg:x="173" fg:w="1"/><text x="12.4589%" y="463.50"></text></g><g><title>hecate::receiver::check_message (1 samples, 0.07%)</title><rect x="12.2089%" y="437" width="0.0706%" height="15" fill="rgb(236,28,36)" fg:x="173" fg:w="1"/><text x="12.4589%" y="447.50"></text></g><g><title>poksho::sign::verify_signature (1 samples, 0.07%)</title><rect x="12.2089%" y="421" width="0.0706%" height="15" fill="rgb(249,185,26)" fg:x="173" fg:w="1"/><text x="12.4589%" y="431.50"></text></g><g><title>poksho::statement::Statement::verify_proof (1 samples, 0.07%)</title><rect x="12.2089%" y="405" width="0.0706%" height="15" fill="rgb(249,174,33)" fg:x="173" fg:w="1"/><text x="12.4589%" y="415.50"></text></g><g><title>poksho::statement::Statement::homomorphism_with_subtraction (1 samples, 0.07%)</title><rect x="12.2089%" y="389" width="0.0706%" height="15" fill="rgb(233,201,37)" fg:x="173" fg:w="1"/><text x="12.4589%" y="399.50"></text></g><g><title>&lt;curve25519_dalek::ristretto::RistrettoPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (1 samples, 0.07%)</title><rect x="12.2089%" y="373" width="0.0706%" height="15" fill="rgb(221,78,26)" fg:x="173" fg:w="1"/><text x="12.4589%" y="383.50"></text></g><g><title>&lt;curve25519_dalek::edwards::EdwardsPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (1 samples, 0.07%)</title><rect x="12.2089%" y="357" width="0.0706%" height="15" fill="rgb(250,127,30)" fg:x="173" fg:w="1"/><text x="12.4589%" y="367.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (1 samples, 0.07%)</title><rect x="12.2089%" y="341" width="0.0706%" height="15" fill="rgb(230,49,44)" fg:x="173" fg:w="1"/><text x="12.4589%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="12.2089%" y="325" width="0.0706%" height="15" fill="rgb(229,67,23)" fg:x="173" fg:w="1"/><text x="12.4589%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="12.2089%" y="309" width="0.0706%" height="15" fill="rgb(249,83,47)" fg:x="173" fg:w="1"/><text x="12.4589%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="12.2089%" y="293" width="0.0706%" height="15" fill="rgb(215,43,3)" fg:x="173" fg:w="1"/><text x="12.4589%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="12.2089%" y="277" width="0.0706%" height="15" fill="rgb(238,154,13)" fg:x="173" fg:w="1"/><text x="12.4589%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="12.2089%" y="261" width="0.0706%" height="15" fill="rgb(219,56,2)" fg:x="173" fg:w="1"/><text x="12.4589%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="12.2089%" y="245" width="0.0706%" height="15" fill="rgb(233,0,4)" fg:x="173" fg:w="1"/><text x="12.4589%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="12.2089%" y="229" width="0.0706%" height="15" fill="rgb(235,30,7)" fg:x="173" fg:w="1"/><text x="12.4589%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="12.2089%" y="213" width="0.0706%" height="15" fill="rgb(250,79,13)" fg:x="173" fg:w="1"/><text x="12.4589%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="12.2089%" y="197" width="0.0706%" height="15" fill="rgb(211,146,34)" fg:x="173" fg:w="1"/><text x="12.4589%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="12.2089%" y="181" width="0.0706%" height="15" fill="rgb(228,22,38)" fg:x="173" fg:w="1"/><text x="12.4589%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="12.2089%" y="165" width="0.0706%" height="15" fill="rgb(235,168,5)" fg:x="173" fg:w="1"/><text x="12.4589%" y="175.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="12.2089%" y="149" width="0.0706%" height="15" fill="rgb(221,155,16)" fg:x="173" fg:w="1"/><text x="12.4589%" y="159.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="12.2089%" y="133" width="0.0706%" height="15" fill="rgb(215,215,53)" fg:x="173" fg:w="1"/><text x="12.4589%" y="143.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="12.2089%" y="117" width="0.0706%" height="15" fill="rgb(223,4,10)" fg:x="173" fg:w="1"/><text x="12.4589%" y="127.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="12.2089%" y="101" width="0.0706%" height="15" fill="rgb(234,103,6)" fg:x="173" fg:w="1"/><text x="12.4589%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="12.2089%" y="85" width="0.0706%" height="15" fill="rgb(227,97,0)" fg:x="173" fg:w="1"/><text x="12.4589%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.07%)</title><rect x="12.2089%" y="69" width="0.0706%" height="15" fill="rgb(234,150,53)" fg:x="173" fg:w="1"/><text x="12.4589%" y="79.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="12.2089%" y="53" width="0.0706%" height="15" fill="rgb(228,201,54)" fg:x="173" fg:w="1"/><text x="12.4589%" y="63.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="12.2089%" y="37" width="0.0706%" height="15" fill="rgb(222,22,37)" fg:x="173" fg:w="1"/><text x="12.4589%" y="47.50"></text></g><g><title>[unknown] (132 samples, 9.32%)</title><rect x="3.3874%" y="677" width="9.3155%" height="15" fill="rgb(237,53,32)" fg:x="48" fg:w="132"/><text x="3.6374%" y="687.50">[unknown]</text></g><g><title>subtle::black_box (6 samples, 0.42%)</title><rect x="12.2795%" y="661" width="0.4234%" height="15" fill="rgb(233,25,53)" fg:x="174" fg:w="6"/><text x="12.5295%" y="671.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.07%)</title><rect x="12.7029%" y="197" width="0.0706%" height="15" fill="rgb(210,40,34)" fg:x="180" fg:w="1"/><text x="12.9529%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.07%)</title><rect x="12.7029%" y="181" width="0.0706%" height="15" fill="rgb(241,220,44)" fg:x="180" fg:w="1"/><text x="12.9529%" y="191.50"></text></g><g><title>sha2::sha256::soft::shl (1 samples, 0.07%)</title><rect x="12.7029%" y="165" width="0.0706%" height="15" fill="rgb(235,28,35)" fg:x="180" fg:w="1"/><text x="12.9529%" y="175.50"></text></g><g><title>sha2::sha256::soft::schedule (2 samples, 0.14%)</title><rect x="12.7029%" y="213" width="0.1411%" height="15" fill="rgb(210,56,17)" fg:x="180" fg:w="2"/><text x="12.9529%" y="223.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (1 samples, 0.07%)</title><rect x="12.7735%" y="197" width="0.0706%" height="15" fill="rgb(224,130,29)" fg:x="181" fg:w="1"/><text x="13.0235%" y="207.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (4 samples, 0.28%)</title><rect x="12.7029%" y="389" width="0.2823%" height="15" fill="rgb(235,212,8)" fg:x="180" fg:w="4"/><text x="12.9529%" y="399.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (4 samples, 0.28%)</title><rect x="12.7029%" y="373" width="0.2823%" height="15" fill="rgb(223,33,50)" fg:x="180" fg:w="4"/><text x="12.9529%" y="383.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (4 samples, 0.28%)</title><rect x="12.7029%" y="357" width="0.2823%" height="15" fill="rgb(219,149,13)" fg:x="180" fg:w="4"/><text x="12.9529%" y="367.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (4 samples, 0.28%)</title><rect x="12.7029%" y="341" width="0.2823%" height="15" fill="rgb(250,156,29)" fg:x="180" fg:w="4"/><text x="12.9529%" y="351.50"></text></g><g><title>sha2::sha256::Engine256::finish (4 samples, 0.28%)</title><rect x="12.7029%" y="325" width="0.2823%" height="15" fill="rgb(216,193,19)" fg:x="180" fg:w="4"/><text x="12.9529%" y="335.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (4 samples, 0.28%)</title><rect x="12.7029%" y="309" width="0.2823%" height="15" fill="rgb(216,135,14)" fg:x="180" fg:w="4"/><text x="12.9529%" y="319.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (4 samples, 0.28%)</title><rect x="12.7029%" y="293" width="0.2823%" height="15" fill="rgb(241,47,5)" fg:x="180" fg:w="4"/><text x="12.9529%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4 samples, 0.28%)</title><rect x="12.7029%" y="277" width="0.2823%" height="15" fill="rgb(233,42,35)" fg:x="180" fg:w="4"/><text x="12.9529%" y="287.50"></text></g><g><title>sha2::sha256::x86::compress (4 samples, 0.28%)</title><rect x="12.7029%" y="261" width="0.2823%" height="15" fill="rgb(231,13,6)" fg:x="180" fg:w="4"/><text x="12.9529%" y="271.50"></text></g><g><title>sha2::sha256::soft::compress (4 samples, 0.28%)</title><rect x="12.7029%" y="245" width="0.2823%" height="15" fill="rgb(207,181,40)" fg:x="180" fg:w="4"/><text x="12.9529%" y="255.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (4 samples, 0.28%)</title><rect x="12.7029%" y="229" width="0.2823%" height="15" fill="rgb(254,173,49)" fg:x="180" fg:w="4"/><text x="12.9529%" y="239.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (2 samples, 0.14%)</title><rect x="12.8440%" y="213" width="0.1411%" height="15" fill="rgb(221,1,38)" fg:x="182" fg:w="2"/><text x="13.0940%" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (2 samples, 0.14%)</title><rect x="12.8440%" y="197" width="0.1411%" height="15" fill="rgb(206,124,46)" fg:x="182" fg:w="2"/><text x="13.0940%" y="207.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="12.9852%" y="229" width="0.1411%" height="15" fill="rgb(249,21,11)" fg:x="184" fg:w="2"/><text x="13.2352%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.21%)</title><rect x="12.9852%" y="389" width="0.2117%" height="15" fill="rgb(222,201,40)" fg:x="184" fg:w="3"/><text x="13.2352%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.21%)</title><rect x="12.9852%" y="373" width="0.2117%" height="15" fill="rgb(235,61,29)" fg:x="184" fg:w="3"/><text x="13.2352%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.21%)</title><rect x="12.9852%" y="357" width="0.2117%" height="15" fill="rgb(219,207,3)" fg:x="184" fg:w="3"/><text x="13.2352%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.21%)</title><rect x="12.9852%" y="341" width="0.2117%" height="15" fill="rgb(222,56,46)" fg:x="184" fg:w="3"/><text x="13.2352%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.21%)</title><rect x="12.9852%" y="325" width="0.2117%" height="15" fill="rgb(239,76,54)" fg:x="184" fg:w="3"/><text x="13.2352%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.21%)</title><rect x="12.9852%" y="309" width="0.2117%" height="15" fill="rgb(231,124,27)" fg:x="184" fg:w="3"/><text x="13.2352%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.21%)</title><rect x="12.9852%" y="293" width="0.2117%" height="15" fill="rgb(249,195,6)" fg:x="184" fg:w="3"/><text x="13.2352%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.21%)</title><rect x="12.9852%" y="277" width="0.2117%" height="15" fill="rgb(237,174,47)" fg:x="184" fg:w="3"/><text x="13.2352%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.21%)</title><rect x="12.9852%" y="261" width="0.2117%" height="15" fill="rgb(206,201,31)" fg:x="184" fg:w="3"/><text x="13.2352%" y="271.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.21%)</title><rect x="12.9852%" y="245" width="0.2117%" height="15" fill="rgb(231,57,52)" fg:x="184" fg:w="3"/><text x="13.2352%" y="255.50"></text></g><g><title>__rust_alloc (1 samples, 0.07%)</title><rect x="13.1263%" y="229" width="0.0706%" height="15" fill="rgb(248,177,22)" fg:x="186" fg:w="1"/><text x="13.3763%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="13.1969%" y="309" width="0.0706%" height="15" fill="rgb(215,211,37)" fg:x="187" fg:w="1"/><text x="13.4469%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="13.1969%" y="293" width="0.0706%" height="15" fill="rgb(241,128,51)" fg:x="187" fg:w="1"/><text x="13.4469%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="13.1969%" y="277" width="0.0706%" height="15" fill="rgb(227,165,31)" fg:x="187" fg:w="1"/><text x="13.4469%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="13.1969%" y="261" width="0.0706%" height="15" fill="rgb(228,167,24)" fg:x="187" fg:w="1"/><text x="13.4469%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="13.1969%" y="245" width="0.0706%" height="15" fill="rgb(228,143,12)" fg:x="187" fg:w="1"/><text x="13.4469%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="13.1969%" y="229" width="0.0706%" height="15" fill="rgb(249,149,8)" fg:x="187" fg:w="1"/><text x="13.4469%" y="239.50"></text></g><g><title>__rust_alloc (1 samples, 0.07%)</title><rect x="13.1969%" y="213" width="0.0706%" height="15" fill="rgb(243,35,44)" fg:x="187" fg:w="1"/><text x="13.4469%" y="223.50"></text></g><g><title>&lt;hecate::types::Mfrank as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="13.1969%" y="389" width="0.1411%" height="15" fill="rgb(246,89,9)" fg:x="187" fg:w="2"/><text x="13.4469%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="13.1969%" y="373" width="0.1411%" height="15" fill="rgb(233,213,13)" fg:x="187" fg:w="2"/><text x="13.4469%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.14%)</title><rect x="13.1969%" y="357" width="0.1411%" height="15" fill="rgb(233,141,41)" fg:x="187" fg:w="2"/><text x="13.4469%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="13.1969%" y="341" width="0.1411%" height="15" fill="rgb(239,167,4)" fg:x="187" fg:w="2"/><text x="13.4469%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.14%)</title><rect x="13.1969%" y="325" width="0.1411%" height="15" fill="rgb(209,217,16)" fg:x="187" fg:w="2"/><text x="13.4469%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="13.2675%" y="309" width="0.0706%" height="15" fill="rgb(219,88,35)" fg:x="188" fg:w="1"/><text x="13.5175%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="13.2675%" y="293" width="0.0706%" height="15" fill="rgb(220,193,23)" fg:x="188" fg:w="1"/><text x="13.5175%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="13.2675%" y="277" width="0.0706%" height="15" fill="rgb(230,90,52)" fg:x="188" fg:w="1"/><text x="13.5175%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;: 2]&gt; (1 samples, 0.07%)</title><rect x="13.3380%" y="389" width="0.0706%" height="15" fill="rgb(252,106,19)" fg:x="189" fg:w="1"/><text x="13.5880%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="13.3380%" y="373" width="0.0706%" height="15" fill="rgb(206,74,20)" fg:x="189" fg:w="1"/><text x="13.5880%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="13.3380%" y="357" width="0.0706%" height="15" fill="rgb(230,138,44)" fg:x="189" fg:w="1"/><text x="13.5880%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="13.3380%" y="341" width="0.0706%" height="15" fill="rgb(235,182,43)" fg:x="189" fg:w="1"/><text x="13.5880%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="13.3380%" y="325" width="0.0706%" height="15" fill="rgb(242,16,51)" fg:x="189" fg:w="1"/><text x="13.5880%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="13.3380%" y="309" width="0.0706%" height="15" fill="rgb(248,9,4)" fg:x="189" fg:w="1"/><text x="13.5880%" y="319.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="13.3380%" y="293" width="0.0706%" height="15" fill="rgb(210,31,22)" fg:x="189" fg:w="1"/><text x="13.5880%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="13.4086%" y="389" width="0.0706%" height="15" fill="rgb(239,54,39)" fg:x="190" fg:w="1"/><text x="13.6586%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="13.4086%" y="373" width="0.0706%" height="15" fill="rgb(230,99,41)" fg:x="190" fg:w="1"/><text x="13.6586%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="13.4086%" y="357" width="0.0706%" height="15" fill="rgb(253,106,12)" fg:x="190" fg:w="1"/><text x="13.6586%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="13.4086%" y="341" width="0.0706%" height="15" fill="rgb(213,46,41)" fg:x="190" fg:w="1"/><text x="13.6586%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="13.4086%" y="325" width="0.0706%" height="15" fill="rgb(215,133,35)" fg:x="190" fg:w="1"/><text x="13.6586%" y="335.50"></text></g><g><title>__rust_dealloc (1 samples, 0.07%)</title><rect x="13.4086%" y="309" width="0.0706%" height="15" fill="rgb(213,28,5)" fg:x="190" fg:w="1"/><text x="13.6586%" y="319.50"></text></g><g><title>&lt;T as subtle::ConditionallyNegatable&gt;::conditional_negate (1 samples, 0.07%)</title><rect x="13.4792%" y="373" width="0.0706%" height="15" fill="rgb(215,77,49)" fg:x="191" fg:w="1"/><text x="13.7292%" y="383.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Neg&gt;::neg (1 samples, 0.07%)</title><rect x="13.4792%" y="357" width="0.0706%" height="15" fill="rgb(248,100,22)" fg:x="191" fg:w="1"/><text x="13.7292%" y="367.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::negate (1 samples, 0.07%)</title><rect x="13.4792%" y="341" width="0.0706%" height="15" fill="rgb(208,67,9)" fg:x="191" fg:w="1"/><text x="13.7292%" y="351.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Neg&gt;::neg (1 samples, 0.07%)</title><rect x="13.5498%" y="341" width="0.0706%" height="15" fill="rgb(219,133,21)" fg:x="192" fg:w="1"/><text x="13.7998%" y="351.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::negate (1 samples, 0.07%)</title><rect x="13.5498%" y="325" width="0.0706%" height="15" fill="rgb(246,46,29)" fg:x="192" fg:w="1"/><text x="13.7998%" y="335.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.07%)</title><rect x="13.6909%" y="325" width="0.0706%" height="15" fill="rgb(246,185,52)" fg:x="194" fg:w="1"/><text x="13.9409%" y="335.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (1 samples, 0.07%)</title><rect x="13.6909%" y="309" width="0.0706%" height="15" fill="rgb(252,136,11)" fg:x="194" fg:w="1"/><text x="13.9409%" y="319.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (13 samples, 0.92%)</title><rect x="13.7615%" y="309" width="0.9174%" height="15" fill="rgb(219,138,53)" fg:x="195" fg:w="13"/><text x="14.0115%" y="319.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (5 samples, 0.35%)</title><rect x="14.3260%" y="293" width="0.3529%" height="15" fill="rgb(211,51,23)" fg:x="203" fg:w="5"/><text x="14.5760%" y="303.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow_p58 (16 samples, 1.13%)</title><rect x="13.6203%" y="341" width="1.1291%" height="15" fill="rgb(247,221,28)" fg:x="193" fg:w="16"/><text x="13.8703%" y="351.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (14 samples, 0.99%)</title><rect x="13.7615%" y="325" width="0.9880%" height="15" fill="rgb(251,222,45)" fg:x="195" fg:w="14"/><text x="14.0115%" y="335.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (1 samples, 0.07%)</title><rect x="14.6789%" y="309" width="0.0706%" height="15" fill="rgb(217,162,53)" fg:x="208" fg:w="1"/><text x="14.9289%" y="319.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.07%)</title><rect x="14.6789%" y="293" width="0.0706%" height="15" fill="rgb(229,93,14)" fg:x="208" fg:w="1"/><text x="14.9289%" y="303.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (1 samples, 0.07%)</title><rect x="14.6789%" y="277" width="0.0706%" height="15" fill="rgb(209,67,49)" fg:x="208" fg:w="1"/><text x="14.9289%" y="287.50"></text></g><g><title>curve25519_dalek::ristretto::CompressedRistretto::decompress (20 samples, 1.41%)</title><rect x="13.4792%" y="389" width="1.4114%" height="15" fill="rgb(213,87,29)" fg:x="191" fg:w="20"/><text x="13.7292%" y="399.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invsqrt (19 samples, 1.34%)</title><rect x="13.5498%" y="373" width="1.3409%" height="15" fill="rgb(205,151,52)" fg:x="192" fg:w="19"/><text x="13.7998%" y="383.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (19 samples, 1.34%)</title><rect x="13.5498%" y="357" width="1.3409%" height="15" fill="rgb(253,215,39)" fg:x="192" fg:w="19"/><text x="13.7998%" y="367.50"></text></g><g><title>curve25519_dalek::field::&lt;impl subtle::ConstantTimeEq for curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::ct_eq (2 samples, 0.14%)</title><rect x="14.7495%" y="341" width="0.1411%" height="15" fill="rgb(221,220,41)" fg:x="209" fg:w="2"/><text x="14.9995%" y="351.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (2 samples, 0.14%)</title><rect x="14.7495%" y="325" width="0.1411%" height="15" fill="rgb(218,133,21)" fg:x="209" fg:w="2"/><text x="14.9995%" y="335.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (2 samples, 0.14%)</title><rect x="14.7495%" y="309" width="0.1411%" height="15" fill="rgb(221,193,43)" fg:x="209" fg:w="2"/><text x="14.9995%" y="319.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (1 samples, 0.07%)</title><rect x="14.8906%" y="373" width="0.0706%" height="15" fill="rgb(240,128,52)" fg:x="211" fg:w="1"/><text x="15.1406%" y="383.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (1 samples, 0.07%)</title><rect x="14.8906%" y="357" width="0.0706%" height="15" fill="rgb(253,114,12)" fg:x="211" fg:w="1"/><text x="15.1406%" y="367.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (1 samples, 0.07%)</title><rect x="14.8906%" y="341" width="0.0706%" height="15" fill="rgb(215,223,47)" fg:x="211" fg:w="1"/><text x="15.1406%" y="351.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (1 samples, 0.07%)</title><rect x="14.8906%" y="325" width="0.0706%" height="15" fill="rgb(248,225,23)" fg:x="211" fg:w="1"/><text x="15.1406%" y="335.50"></text></g><g><title>sha2::sha256::Engine256::finish (1 samples, 0.07%)</title><rect x="14.8906%" y="309" width="0.0706%" height="15" fill="rgb(250,108,0)" fg:x="211" fg:w="1"/><text x="15.1406%" y="319.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (1 samples, 0.07%)</title><rect x="14.8906%" y="293" width="0.0706%" height="15" fill="rgb(228,208,7)" fg:x="211" fg:w="1"/><text x="15.1406%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (1 samples, 0.07%)</title><rect x="14.8906%" y="277" width="0.0706%" height="15" fill="rgb(244,45,10)" fg:x="211" fg:w="1"/><text x="15.1406%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (1 samples, 0.07%)</title><rect x="14.8906%" y="261" width="0.0706%" height="15" fill="rgb(207,125,25)" fg:x="211" fg:w="1"/><text x="15.1406%" y="271.50"></text></g><g><title>sha2::sha256::x86::compress (1 samples, 0.07%)</title><rect x="14.8906%" y="245" width="0.0706%" height="15" fill="rgb(210,195,18)" fg:x="211" fg:w="1"/><text x="15.1406%" y="255.50"></text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.07%)</title><rect x="14.8906%" y="229" width="0.0706%" height="15" fill="rgb(249,80,12)" fg:x="211" fg:w="1"/><text x="15.1406%" y="239.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.07%)</title><rect x="14.8906%" y="213" width="0.0706%" height="15" fill="rgb(221,65,9)" fg:x="211" fg:w="1"/><text x="15.1406%" y="223.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.07%)</title><rect x="14.8906%" y="197" width="0.0706%" height="15" fill="rgb(235,49,36)" fg:x="211" fg:w="1"/><text x="15.1406%" y="207.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::update (2 samples, 0.14%)</title><rect x="14.9612%" y="373" width="0.1411%" height="15" fill="rgb(225,32,20)" fg:x="212" fg:w="2"/><text x="15.2112%" y="383.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (2 samples, 0.14%)</title><rect x="14.9612%" y="357" width="0.1411%" height="15" fill="rgb(215,141,46)" fg:x="212" fg:w="2"/><text x="15.2112%" y="367.50"></text></g><g><title>sha2::sha256::Engine256::update (2 samples, 0.14%)</title><rect x="14.9612%" y="341" width="0.1411%" height="15" fill="rgb(250,160,47)" fg:x="212" fg:w="2"/><text x="15.2112%" y="351.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (2 samples, 0.14%)</title><rect x="14.9612%" y="325" width="0.1411%" height="15" fill="rgb(216,222,40)" fg:x="212" fg:w="2"/><text x="15.2112%" y="335.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (2 samples, 0.14%)</title><rect x="14.9612%" y="309" width="0.1411%" height="15" fill="rgb(234,217,39)" fg:x="212" fg:w="2"/><text x="15.2112%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (2 samples, 0.14%)</title><rect x="14.9612%" y="293" width="0.1411%" height="15" fill="rgb(207,178,40)" fg:x="212" fg:w="2"/><text x="15.2112%" y="303.50"></text></g><g><title>sha2::sha256::x86::compress (2 samples, 0.14%)</title><rect x="14.9612%" y="277" width="0.1411%" height="15" fill="rgb(221,136,13)" fg:x="212" fg:w="2"/><text x="15.2112%" y="287.50"></text></g><g><title>sha2::sha256::soft::compress (2 samples, 0.14%)</title><rect x="14.9612%" y="261" width="0.1411%" height="15" fill="rgb(249,199,10)" fg:x="212" fg:w="2"/><text x="15.2112%" y="271.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.07%)</title><rect x="15.0318%" y="245" width="0.0706%" height="15" fill="rgb(249,222,13)" fg:x="213" fg:w="1"/><text x="15.2818%" y="255.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.07%)</title><rect x="15.0318%" y="229" width="0.0706%" height="15" fill="rgb(244,185,38)" fg:x="213" fg:w="1"/><text x="15.2818%" y="239.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.07%)</title><rect x="15.1023%" y="229" width="0.0706%" height="15" fill="rgb(236,202,9)" fg:x="214" fg:w="1"/><text x="15.3523%" y="239.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.07%)</title><rect x="15.1023%" y="213" width="0.0706%" height="15" fill="rgb(250,229,37)" fg:x="214" fg:w="1"/><text x="15.3523%" y="223.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.07%)</title><rect x="15.1023%" y="197" width="0.0706%" height="15" fill="rgb(206,174,23)" fg:x="214" fg:w="1"/><text x="15.3523%" y="207.50"></text></g><g><title>libsignal_protocol::crypto::hmac_sha256 (6 samples, 0.42%)</title><rect x="14.8906%" y="389" width="0.4234%" height="15" fill="rgb(211,33,43)" fg:x="211" fg:w="6"/><text x="15.1406%" y="399.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (3 samples, 0.21%)</title><rect x="15.1023%" y="373" width="0.2117%" height="15" fill="rgb(245,58,50)" fg:x="214" fg:w="3"/><text x="15.3523%" y="383.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (3 samples, 0.21%)</title><rect x="15.1023%" y="357" width="0.2117%" height="15" fill="rgb(244,68,36)" fg:x="214" fg:w="3"/><text x="15.3523%" y="367.50"></text></g><g><title>sha2::sha256::Engine256::update (3 samples, 0.21%)</title><rect x="15.1023%" y="341" width="0.2117%" height="15" fill="rgb(232,229,15)" fg:x="214" fg:w="3"/><text x="15.3523%" y="351.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (3 samples, 0.21%)</title><rect x="15.1023%" y="325" width="0.2117%" height="15" fill="rgb(254,30,23)" fg:x="214" fg:w="3"/><text x="15.3523%" y="335.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (3 samples, 0.21%)</title><rect x="15.1023%" y="309" width="0.2117%" height="15" fill="rgb(235,160,14)" fg:x="214" fg:w="3"/><text x="15.3523%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (3 samples, 0.21%)</title><rect x="15.1023%" y="293" width="0.2117%" height="15" fill="rgb(212,155,44)" fg:x="214" fg:w="3"/><text x="15.3523%" y="303.50"></text></g><g><title>sha2::sha256::x86::compress (3 samples, 0.21%)</title><rect x="15.1023%" y="277" width="0.2117%" height="15" fill="rgb(226,2,50)" fg:x="214" fg:w="3"/><text x="15.3523%" y="287.50"></text></g><g><title>sha2::sha256::soft::compress (3 samples, 0.21%)</title><rect x="15.1023%" y="261" width="0.2117%" height="15" fill="rgb(234,177,6)" fg:x="214" fg:w="3"/><text x="15.3523%" y="271.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (3 samples, 0.21%)</title><rect x="15.1023%" y="245" width="0.2117%" height="15" fill="rgb(217,24,9)" fg:x="214" fg:w="3"/><text x="15.3523%" y="255.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (2 samples, 0.14%)</title><rect x="15.1729%" y="229" width="0.1411%" height="15" fill="rgb(220,13,46)" fg:x="215" fg:w="2"/><text x="15.4229%" y="239.50"></text></g><g><title>poksho::args::PointArgs::add (1 samples, 0.07%)</title><rect x="15.3140%" y="373" width="0.0706%" height="15" fill="rgb(239,221,27)" fg:x="217" fg:w="1"/><text x="15.5640%" y="383.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.07%)</title><rect x="15.3140%" y="357" width="0.0706%" height="15" fill="rgb(222,198,25)" fg:x="217" fg:w="1"/><text x="15.5640%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.07%)</title><rect x="15.3140%" y="341" width="0.0706%" height="15" fill="rgb(211,99,13)" fg:x="217" fg:w="1"/><text x="15.5640%" y="351.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.07%)</title><rect x="15.3140%" y="325" width="0.0706%" height="15" fill="rgb(232,111,31)" fg:x="217" fg:w="1"/><text x="15.5640%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.07%)</title><rect x="15.3140%" y="309" width="0.0706%" height="15" fill="rgb(245,82,37)" fg:x="217" fg:w="1"/><text x="15.5640%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.07%)</title><rect x="15.3140%" y="293" width="0.0706%" height="15" fill="rgb(227,149,46)" fg:x="217" fg:w="1"/><text x="15.5640%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="15.3140%" y="277" width="0.0706%" height="15" fill="rgb(218,36,50)" fg:x="217" fg:w="1"/><text x="15.5640%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="15.3140%" y="261" width="0.0706%" height="15" fill="rgb(226,80,48)" fg:x="217" fg:w="1"/><text x="15.5640%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="15.3140%" y="245" width="0.0706%" height="15" fill="rgb(238,224,15)" fg:x="217" fg:w="1"/><text x="15.5640%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="15.3140%" y="229" width="0.0706%" height="15" fill="rgb(241,136,10)" fg:x="217" fg:w="1"/><text x="15.5640%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="15.3140%" y="213" width="0.0706%" height="15" fill="rgb(208,32,45)" fg:x="217" fg:w="1"/><text x="15.5640%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="15.3140%" y="197" width="0.0706%" height="15" fill="rgb(207,135,9)" fg:x="217" fg:w="1"/><text x="15.5640%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="15.3140%" y="181" width="0.0706%" height="15" fill="rgb(206,86,44)" fg:x="217" fg:w="1"/><text x="15.5640%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="15.3140%" y="165" width="0.0706%" height="15" fill="rgb(245,177,15)" fg:x="217" fg:w="1"/><text x="15.5640%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="15.3140%" y="149" width="0.0706%" height="15" fill="rgb(206,64,50)" fg:x="217" fg:w="1"/><text x="15.5640%" y="159.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="15.3140%" y="133" width="0.0706%" height="15" fill="rgb(234,36,40)" fg:x="217" fg:w="1"/><text x="15.5640%" y="143.50"></text></g><g><title>poksho::statement::Statement::add (1 samples, 0.07%)</title><rect x="15.3846%" y="373" width="0.0706%" height="15" fill="rgb(213,64,8)" fg:x="218" fg:w="1"/><text x="15.6346%" y="383.50"></text></g><g><title>poksho::statement::Statement::add_scalar (1 samples, 0.07%)</title><rect x="15.3846%" y="357" width="0.0706%" height="15" fill="rgb(210,75,36)" fg:x="218" fg:w="1"/><text x="15.6346%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.07%)</title><rect x="15.3846%" y="341" width="0.0706%" height="15" fill="rgb(229,88,21)" fg:x="218" fg:w="1"/><text x="15.6346%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="15.3846%" y="325" width="0.0706%" height="15" fill="rgb(252,204,47)" fg:x="218" fg:w="1"/><text x="15.6346%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.07%)</title><rect x="15.3846%" y="309" width="0.0706%" height="15" fill="rgb(208,77,27)" fg:x="218" fg:w="1"/><text x="15.6346%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (1 samples, 0.07%)</title><rect x="15.3846%" y="293" width="0.0706%" height="15" fill="rgb(221,76,26)" fg:x="218" fg:w="1"/><text x="15.6346%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.07%)</title><rect x="15.3846%" y="277" width="0.0706%" height="15" fill="rgb(225,139,18)" fg:x="218" fg:w="1"/><text x="15.6346%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.07%)</title><rect x="15.3846%" y="261" width="0.0706%" height="15" fill="rgb(230,137,11)" fg:x="218" fg:w="1"/><text x="15.6346%" y="271.50"></text></g><g><title>&lt;curve25519_dalek::scalar::Scalar as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="15.5258%" y="357" width="0.1411%" height="15" fill="rgb(212,28,1)" fg:x="220" fg:w="2"/><text x="15.7758%" y="367.50"></text></g><g><title>&lt;curve25519_dalek::scalar::Scalar as subtle::ConstantTimeEq&gt;::ct_eq (2 samples, 0.14%)</title><rect x="15.5258%" y="341" width="0.1411%" height="15" fill="rgb(248,164,17)" fg:x="220" fg:w="2"/><text x="15.7758%" y="351.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (2 samples, 0.14%)</title><rect x="15.5258%" y="325" width="0.1411%" height="15" fill="rgb(222,171,42)" fg:x="220" fg:w="2"/><text x="15.7758%" y="335.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.07%)</title><rect x="15.5963%" y="309" width="0.0706%" height="15" fill="rgb(243,84,45)" fg:x="221" fg:w="1"/><text x="15.8463%" y="319.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.07%)</title><rect x="15.5963%" y="293" width="0.0706%" height="15" fill="rgb(252,49,23)" fg:x="221" fg:w="1"/><text x="15.8463%" y="303.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (1 samples, 0.07%)</title><rect x="15.5963%" y="277" width="0.0706%" height="15" fill="rgb(215,19,7)" fg:x="221" fg:w="1"/><text x="15.8463%" y="287.50"></text></g><g><title>subtle::black_box (1 samples, 0.07%)</title><rect x="15.5963%" y="261" width="0.0706%" height="15" fill="rgb(238,81,41)" fg:x="221" fg:w="1"/><text x="15.8463%" y="271.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.07%)</title><rect x="15.5963%" y="245" width="0.0706%" height="15" fill="rgb(210,199,37)" fg:x="221" fg:w="1"/><text x="15.8463%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (4 samples, 0.28%)</title><rect x="15.6669%" y="277" width="0.2823%" height="15" fill="rgb(244,192,49)" fg:x="222" fg:w="4"/><text x="15.9169%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.28%)</title><rect x="15.6669%" y="261" width="0.2823%" height="15" fill="rgb(226,211,11)" fg:x="222" fg:w="4"/><text x="15.9169%" y="271.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.28%)</title><rect x="15.6669%" y="245" width="0.2823%" height="15" fill="rgb(236,162,54)" fg:x="222" fg:w="4"/><text x="15.9169%" y="255.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.07%)</title><rect x="15.9492%" y="197" width="0.0706%" height="15" fill="rgb(220,229,9)" fg:x="226" fg:w="1"/><text x="16.1992%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.07%)</title><rect x="15.9492%" y="181" width="0.0706%" height="15" fill="rgb(250,87,22)" fg:x="226" fg:w="1"/><text x="16.1992%" y="191.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::update (9 samples, 0.64%)</title><rect x="15.6669%" y="341" width="0.6351%" height="15" fill="rgb(239,43,17)" fg:x="222" fg:w="9"/><text x="15.9169%" y="351.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (9 samples, 0.64%)</title><rect x="15.6669%" y="325" width="0.6351%" height="15" fill="rgb(231,177,25)" fg:x="222" fg:w="9"/><text x="15.9169%" y="335.50"></text></g><g><title>sha2::sha256::Engine256::update (9 samples, 0.64%)</title><rect x="15.6669%" y="309" width="0.6351%" height="15" fill="rgb(219,179,1)" fg:x="222" fg:w="9"/><text x="15.9169%" y="319.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (9 samples, 0.64%)</title><rect x="15.6669%" y="293" width="0.6351%" height="15" fill="rgb(238,219,53)" fg:x="222" fg:w="9"/><text x="15.9169%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (5 samples, 0.35%)</title><rect x="15.9492%" y="277" width="0.3529%" height="15" fill="rgb(232,167,36)" fg:x="226" fg:w="5"/><text x="16.1992%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (5 samples, 0.35%)</title><rect x="15.9492%" y="261" width="0.3529%" height="15" fill="rgb(244,19,51)" fg:x="226" fg:w="5"/><text x="16.1992%" y="271.50"></text></g><g><title>sha2::sha256::x86::compress (5 samples, 0.35%)</title><rect x="15.9492%" y="245" width="0.3529%" height="15" fill="rgb(224,6,22)" fg:x="226" fg:w="5"/><text x="16.1992%" y="255.50"></text></g><g><title>sha2::sha256::soft::compress (5 samples, 0.35%)</title><rect x="15.9492%" y="229" width="0.3529%" height="15" fill="rgb(224,145,5)" fg:x="226" fg:w="5"/><text x="16.1992%" y="239.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (5 samples, 0.35%)</title><rect x="15.9492%" y="213" width="0.3529%" height="15" fill="rgb(234,130,49)" fg:x="226" fg:w="5"/><text x="16.1992%" y="223.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (4 samples, 0.28%)</title><rect x="16.0198%" y="197" width="0.2823%" height="15" fill="rgb(254,6,2)" fg:x="227" fg:w="4"/><text x="16.2698%" y="207.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.14%)</title><rect x="16.1609%" y="181" width="0.1411%" height="15" fill="rgb(208,96,46)" fg:x="229" fg:w="2"/><text x="16.4109%" y="191.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.07%)</title><rect x="16.3726%" y="197" width="0.0706%" height="15" fill="rgb(239,3,39)" fg:x="232" fg:w="1"/><text x="16.6226%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.07%)</title><rect x="16.3726%" y="181" width="0.0706%" height="15" fill="rgb(233,210,1)" fg:x="232" fg:w="1"/><text x="16.6226%" y="191.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.07%)</title><rect x="16.3726%" y="165" width="0.0706%" height="15" fill="rgb(244,137,37)" fg:x="232" fg:w="1"/><text x="16.6226%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="16.3726%" y="149" width="0.0706%" height="15" fill="rgb(240,136,2)" fg:x="232" fg:w="1"/><text x="16.6226%" y="159.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (2 samples, 0.14%)</title><rect x="17.0078%" y="181" width="0.1411%" height="15" fill="rgb(239,18,37)" fg:x="241" fg:w="2"/><text x="17.2578%" y="191.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (13 samples, 0.92%)</title><rect x="16.3020%" y="325" width="0.9174%" height="15" fill="rgb(218,185,22)" fg:x="231" fg:w="13"/><text x="16.5520%" y="335.50"></text></g><g><title>sha2::sha256::Engine256::update (13 samples, 0.92%)</title><rect x="16.3020%" y="309" width="0.9174%" height="15" fill="rgb(225,218,4)" fg:x="231" fg:w="13"/><text x="16.5520%" y="319.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (13 samples, 0.92%)</title><rect x="16.3020%" y="293" width="0.9174%" height="15" fill="rgb(230,182,32)" fg:x="231" fg:w="13"/><text x="16.5520%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (13 samples, 0.92%)</title><rect x="16.3020%" y="277" width="0.9174%" height="15" fill="rgb(242,56,43)" fg:x="231" fg:w="13"/><text x="16.5520%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (13 samples, 0.92%)</title><rect x="16.3020%" y="261" width="0.9174%" height="15" fill="rgb(233,99,24)" fg:x="231" fg:w="13"/><text x="16.5520%" y="271.50"></text></g><g><title>sha2::sha256::x86::compress (13 samples, 0.92%)</title><rect x="16.3020%" y="245" width="0.9174%" height="15" fill="rgb(234,209,42)" fg:x="231" fg:w="13"/><text x="16.5520%" y="255.50"></text></g><g><title>sha2::sha256::soft::compress (13 samples, 0.92%)</title><rect x="16.3020%" y="229" width="0.9174%" height="15" fill="rgb(227,7,12)" fg:x="231" fg:w="13"/><text x="16.5520%" y="239.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (13 samples, 0.92%)</title><rect x="16.3020%" y="213" width="0.9174%" height="15" fill="rgb(245,203,43)" fg:x="231" fg:w="13"/><text x="16.5520%" y="223.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (11 samples, 0.78%)</title><rect x="16.4432%" y="197" width="0.7763%" height="15" fill="rgb(238,205,33)" fg:x="233" fg:w="11"/><text x="16.6932%" y="207.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="17.1489%" y="181" width="0.0706%" height="15" fill="rgb(231,56,7)" fg:x="243" fg:w="1"/><text x="17.3989%" y="191.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::absorb (23 samples, 1.62%)</title><rect x="15.6669%" y="357" width="1.6231%" height="15" fill="rgb(244,186,29)" fg:x="222" fg:w="23"/><text x="15.9169%" y="367.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (14 samples, 0.99%)</title><rect x="16.3020%" y="341" width="0.9880%" height="15" fill="rgb(234,111,31)" fg:x="231" fg:w="14"/><text x="16.5520%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="17.2195%" y="325" width="0.0706%" height="15" fill="rgb(241,149,10)" fg:x="244" fg:w="1"/><text x="17.4695%" y="335.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.07%)</title><rect x="17.2900%" y="165" width="0.0706%" height="15" fill="rgb(249,206,44)" fg:x="245" fg:w="1"/><text x="17.5400%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="17.2900%" y="149" width="0.0706%" height="15" fill="rgb(251,153,30)" fg:x="245" fg:w="1"/><text x="17.5400%" y="159.50"></text></g><g><title>sha2::sha256::soft::schedule (2 samples, 0.14%)</title><rect x="17.2900%" y="197" width="0.1411%" height="15" fill="rgb(239,152,38)" fg:x="245" fg:w="2"/><text x="17.5400%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (2 samples, 0.14%)</title><rect x="17.2900%" y="181" width="0.1411%" height="15" fill="rgb(249,139,47)" fg:x="245" fg:w="2"/><text x="17.5400%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.07%)</title><rect x="17.3606%" y="165" width="0.0706%" height="15" fill="rgb(244,64,35)" fg:x="246" fg:w="1"/><text x="17.6106%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (2 samples, 0.14%)</title><rect x="17.6429%" y="181" width="0.1411%" height="15" fill="rgb(216,46,15)" fg:x="250" fg:w="2"/><text x="17.8929%" y="191.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (8 samples, 0.56%)</title><rect x="17.2900%" y="341" width="0.5646%" height="15" fill="rgb(250,74,19)" fg:x="245" fg:w="8"/><text x="17.5400%" y="351.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (8 samples, 0.56%)</title><rect x="17.2900%" y="325" width="0.5646%" height="15" fill="rgb(249,42,33)" fg:x="245" fg:w="8"/><text x="17.5400%" y="335.50"></text></g><g><title>sha2::sha256::Engine256::update (8 samples, 0.56%)</title><rect x="17.2900%" y="309" width="0.5646%" height="15" fill="rgb(242,149,17)" fg:x="245" fg:w="8"/><text x="17.5400%" y="319.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (8 samples, 0.56%)</title><rect x="17.2900%" y="293" width="0.5646%" height="15" fill="rgb(244,29,21)" fg:x="245" fg:w="8"/><text x="17.5400%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (8 samples, 0.56%)</title><rect x="17.2900%" y="277" width="0.5646%" height="15" fill="rgb(220,130,37)" fg:x="245" fg:w="8"/><text x="17.5400%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (8 samples, 0.56%)</title><rect x="17.2900%" y="261" width="0.5646%" height="15" fill="rgb(211,67,2)" fg:x="245" fg:w="8"/><text x="17.5400%" y="271.50"></text></g><g><title>sha2::sha256::x86::compress (8 samples, 0.56%)</title><rect x="17.2900%" y="245" width="0.5646%" height="15" fill="rgb(235,68,52)" fg:x="245" fg:w="8"/><text x="17.5400%" y="255.50"></text></g><g><title>sha2::sha256::soft::compress (8 samples, 0.56%)</title><rect x="17.2900%" y="229" width="0.5646%" height="15" fill="rgb(246,142,3)" fg:x="245" fg:w="8"/><text x="17.5400%" y="239.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (8 samples, 0.56%)</title><rect x="17.2900%" y="213" width="0.5646%" height="15" fill="rgb(241,25,7)" fg:x="245" fg:w="8"/><text x="17.5400%" y="223.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (6 samples, 0.42%)</title><rect x="17.4312%" y="197" width="0.4234%" height="15" fill="rgb(242,119,39)" fg:x="247" fg:w="6"/><text x="17.6812%" y="207.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="17.7841%" y="181" width="0.0706%" height="15" fill="rgb(241,98,45)" fg:x="252" fg:w="1"/><text x="18.0341%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.07%)</title><rect x="17.8546%" y="149" width="0.0706%" height="15" fill="rgb(254,28,30)" fg:x="253" fg:w="1"/><text x="18.1046%" y="159.50"></text></g><g><title>sha2::sha256::soft::schedule (3 samples, 0.21%)</title><rect x="17.8546%" y="165" width="0.2117%" height="15" fill="rgb(241,142,54)" fg:x="253" fg:w="3"/><text x="18.1046%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (2 samples, 0.14%)</title><rect x="17.9252%" y="149" width="0.1411%" height="15" fill="rgb(222,85,15)" fg:x="254" fg:w="2"/><text x="18.1752%" y="159.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::absorb (9 samples, 0.64%)</title><rect x="17.8546%" y="325" width="0.6351%" height="15" fill="rgb(210,85,47)" fg:x="253" fg:w="9"/><text x="18.1046%" y="335.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (9 samples, 0.64%)</title><rect x="17.8546%" y="309" width="0.6351%" height="15" fill="rgb(224,206,25)" fg:x="253" fg:w="9"/><text x="18.1046%" y="319.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (9 samples, 0.64%)</title><rect x="17.8546%" y="293" width="0.6351%" height="15" fill="rgb(243,201,19)" fg:x="253" fg:w="9"/><text x="18.1046%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update (9 samples, 0.64%)</title><rect x="17.8546%" y="277" width="0.6351%" height="15" fill="rgb(236,59,4)" fg:x="253" fg:w="9"/><text x="18.1046%" y="287.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (9 samples, 0.64%)</title><rect x="17.8546%" y="261" width="0.6351%" height="15" fill="rgb(254,179,45)" fg:x="253" fg:w="9"/><text x="18.1046%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (9 samples, 0.64%)</title><rect x="17.8546%" y="245" width="0.6351%" height="15" fill="rgb(226,14,10)" fg:x="253" fg:w="9"/><text x="18.1046%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (9 samples, 0.64%)</title><rect x="17.8546%" y="229" width="0.6351%" height="15" fill="rgb(244,27,41)" fg:x="253" fg:w="9"/><text x="18.1046%" y="239.50"></text></g><g><title>sha2::sha256::x86::compress (9 samples, 0.64%)</title><rect x="17.8546%" y="213" width="0.6351%" height="15" fill="rgb(235,35,32)" fg:x="253" fg:w="9"/><text x="18.1046%" y="223.50"></text></g><g><title>sha2::sha256::soft::compress (9 samples, 0.64%)</title><rect x="17.8546%" y="197" width="0.6351%" height="15" fill="rgb(218,68,31)" fg:x="253" fg:w="9"/><text x="18.1046%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (9 samples, 0.64%)</title><rect x="17.8546%" y="181" width="0.6351%" height="15" fill="rgb(207,120,37)" fg:x="253" fg:w="9"/><text x="18.1046%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (6 samples, 0.42%)</title><rect x="18.0663%" y="165" width="0.4234%" height="15" fill="rgb(227,98,0)" fg:x="256" fg:w="6"/><text x="18.3163%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (2 samples, 0.14%)</title><rect x="18.3486%" y="149" width="0.1411%" height="15" fill="rgb(207,7,3)" fg:x="260" fg:w="2"/><text x="18.5986%" y="159.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (1 samples, 0.07%)</title><rect x="18.4898%" y="245" width="0.0706%" height="15" fill="rgb(206,98,19)" fg:x="262" fg:w="1"/><text x="18.7398%" y="255.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (1 samples, 0.07%)</title><rect x="18.4898%" y="229" width="0.0706%" height="15" fill="rgb(217,5,26)" fg:x="262" fg:w="1"/><text x="18.7398%" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (1 samples, 0.07%)</title><rect x="18.4898%" y="213" width="0.0706%" height="15" fill="rgb(235,190,38)" fg:x="262" fg:w="1"/><text x="18.7398%" y="223.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.07%)</title><rect x="18.5603%" y="133" width="0.0706%" height="15" fill="rgb(247,86,24)" fg:x="263" fg:w="1"/><text x="18.8103%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.07%)</title><rect x="18.5603%" y="117" width="0.0706%" height="15" fill="rgb(205,101,16)" fg:x="263" fg:w="1"/><text x="18.8103%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.07%)</title><rect x="18.5603%" y="101" width="0.0706%" height="15" fill="rgb(246,168,33)" fg:x="263" fg:w="1"/><text x="18.8103%" y="111.50"></text></g><g><title>sha2::sha256::soft::shl (1 samples, 0.07%)</title><rect x="18.5603%" y="85" width="0.0706%" height="15" fill="rgb(231,114,1)" fg:x="263" fg:w="1"/><text x="18.8103%" y="95.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.07%)</title><rect x="18.7015%" y="117" width="0.0706%" height="15" fill="rgb(207,184,53)" fg:x="265" fg:w="1"/><text x="18.9515%" y="127.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (5 samples, 0.35%)</title><rect x="18.4898%" y="309" width="0.3529%" height="15" fill="rgb(224,95,51)" fg:x="262" fg:w="5"/><text x="18.7398%" y="319.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (5 samples, 0.35%)</title><rect x="18.4898%" y="293" width="0.3529%" height="15" fill="rgb(212,188,45)" fg:x="262" fg:w="5"/><text x="18.7398%" y="303.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (5 samples, 0.35%)</title><rect x="18.4898%" y="277" width="0.3529%" height="15" fill="rgb(223,154,38)" fg:x="262" fg:w="5"/><text x="18.7398%" y="287.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (5 samples, 0.35%)</title><rect x="18.4898%" y="261" width="0.3529%" height="15" fill="rgb(251,22,52)" fg:x="262" fg:w="5"/><text x="18.7398%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::finish (4 samples, 0.28%)</title><rect x="18.5603%" y="245" width="0.2823%" height="15" fill="rgb(229,209,22)" fg:x="263" fg:w="4"/><text x="18.8103%" y="255.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (4 samples, 0.28%)</title><rect x="18.5603%" y="229" width="0.2823%" height="15" fill="rgb(234,138,34)" fg:x="263" fg:w="4"/><text x="18.8103%" y="239.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (4 samples, 0.28%)</title><rect x="18.5603%" y="213" width="0.2823%" height="15" fill="rgb(212,95,11)" fg:x="263" fg:w="4"/><text x="18.8103%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4 samples, 0.28%)</title><rect x="18.5603%" y="197" width="0.2823%" height="15" fill="rgb(240,179,47)" fg:x="263" fg:w="4"/><text x="18.8103%" y="207.50"></text></g><g><title>sha2::sha256::x86::compress (4 samples, 0.28%)</title><rect x="18.5603%" y="181" width="0.2823%" height="15" fill="rgb(240,163,11)" fg:x="263" fg:w="4"/><text x="18.8103%" y="191.50"></text></g><g><title>sha2::sha256::soft::compress (4 samples, 0.28%)</title><rect x="18.5603%" y="165" width="0.2823%" height="15" fill="rgb(236,37,12)" fg:x="263" fg:w="4"/><text x="18.8103%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (4 samples, 0.28%)</title><rect x="18.5603%" y="149" width="0.2823%" height="15" fill="rgb(232,164,16)" fg:x="263" fg:w="4"/><text x="18.8103%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (3 samples, 0.21%)</title><rect x="18.6309%" y="133" width="0.2117%" height="15" fill="rgb(244,205,15)" fg:x="264" fg:w="3"/><text x="18.8809%" y="143.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="18.7721%" y="117" width="0.0706%" height="15" fill="rgb(223,117,47)" fg:x="266" fg:w="1"/><text x="19.0221%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.07%)</title><rect x="18.8426%" y="149" width="0.0706%" height="15" fill="rgb(244,107,35)" fg:x="267" fg:w="1"/><text x="19.0926%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.07%)</title><rect x="18.8426%" y="133" width="0.0706%" height="15" fill="rgb(205,140,8)" fg:x="267" fg:w="1"/><text x="19.0926%" y="143.50"></text></g><g><title>sha2::sha256::soft::shr (1 samples, 0.07%)</title><rect x="18.8426%" y="117" width="0.0706%" height="15" fill="rgb(228,84,46)" fg:x="267" fg:w="1"/><text x="19.0926%" y="127.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::new (24 samples, 1.69%)</title><rect x="17.2900%" y="357" width="1.6937%" height="15" fill="rgb(254,188,9)" fg:x="245" fg:w="24"/><text x="17.5400%" y="367.50"></text></g><g><title>poksho::shoapi::ShoApi::absorb_and_ratchet (16 samples, 1.13%)</title><rect x="17.8546%" y="341" width="1.1291%" height="15" fill="rgb(206,112,54)" fg:x="253" fg:w="16"/><text x="18.1046%" y="351.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::ratchet (7 samples, 0.49%)</title><rect x="18.4898%" y="325" width="0.4940%" height="15" fill="rgb(216,84,49)" fg:x="262" fg:w="7"/><text x="18.7398%" y="335.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::reset (2 samples, 0.14%)</title><rect x="18.8426%" y="309" width="0.1411%" height="15" fill="rgb(214,194,35)" fg:x="267" fg:w="2"/><text x="19.0926%" y="319.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (2 samples, 0.14%)</title><rect x="18.8426%" y="293" width="0.1411%" height="15" fill="rgb(249,28,3)" fg:x="267" fg:w="2"/><text x="19.0926%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update (2 samples, 0.14%)</title><rect x="18.8426%" y="277" width="0.1411%" height="15" fill="rgb(222,56,52)" fg:x="267" fg:w="2"/><text x="19.0926%" y="287.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (2 samples, 0.14%)</title><rect x="18.8426%" y="261" width="0.1411%" height="15" fill="rgb(245,217,50)" fg:x="267" fg:w="2"/><text x="19.0926%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (2 samples, 0.14%)</title><rect x="18.8426%" y="245" width="0.1411%" height="15" fill="rgb(213,201,24)" fg:x="267" fg:w="2"/><text x="19.0926%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (2 samples, 0.14%)</title><rect x="18.8426%" y="229" width="0.1411%" height="15" fill="rgb(248,116,28)" fg:x="267" fg:w="2"/><text x="19.0926%" y="239.50"></text></g><g><title>sha2::sha256::x86::compress (2 samples, 0.14%)</title><rect x="18.8426%" y="213" width="0.1411%" height="15" fill="rgb(219,72,43)" fg:x="267" fg:w="2"/><text x="19.0926%" y="223.50"></text></g><g><title>sha2::sha256::soft::compress (2 samples, 0.14%)</title><rect x="18.8426%" y="197" width="0.1411%" height="15" fill="rgb(209,138,14)" fg:x="267" fg:w="2"/><text x="19.0926%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 0.14%)</title><rect x="18.8426%" y="181" width="0.1411%" height="15" fill="rgb(222,18,33)" fg:x="267" fg:w="2"/><text x="19.0926%" y="191.50"></text></g><g><title>sha2::sha256::soft::schedule (2 samples, 0.14%)</title><rect x="18.8426%" y="165" width="0.1411%" height="15" fill="rgb(213,199,7)" fg:x="267" fg:w="2"/><text x="19.0926%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (1 samples, 0.07%)</title><rect x="18.9132%" y="149" width="0.0706%" height="15" fill="rgb(250,110,10)" fg:x="268" fg:w="1"/><text x="19.1632%" y="159.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="18.9132%" y="133" width="0.0706%" height="15" fill="rgb(248,123,6)" fg:x="268" fg:w="1"/><text x="19.1632%" y="143.50"></text></g><g><title>sha2::sha256::soft::add (2 samples, 0.14%)</title><rect x="18.9838%" y="149" width="0.1411%" height="15" fill="rgb(206,91,31)" fg:x="269" fg:w="2"/><text x="19.2338%" y="159.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.14%)</title><rect x="18.9838%" y="133" width="0.1411%" height="15" fill="rgb(211,154,13)" fg:x="269" fg:w="2"/><text x="19.2338%" y="143.50"></text></g><g><title>sha2::sha256::soft::schedule (3 samples, 0.21%)</title><rect x="18.9838%" y="165" width="0.2117%" height="15" fill="rgb(225,148,7)" fg:x="269" fg:w="3"/><text x="19.2338%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (1 samples, 0.07%)</title><rect x="19.1249%" y="149" width="0.0706%" height="15" fill="rgb(220,160,43)" fg:x="271" fg:w="1"/><text x="19.3749%" y="159.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (2 samples, 0.14%)</title><rect x="19.4778%" y="149" width="0.1411%" height="15" fill="rgb(213,52,39)" fg:x="276" fg:w="2"/><text x="19.7278%" y="159.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (12 samples, 0.85%)</title><rect x="18.9838%" y="341" width="0.8469%" height="15" fill="rgb(243,137,7)" fg:x="269" fg:w="12"/><text x="19.2338%" y="351.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (12 samples, 0.85%)</title><rect x="18.9838%" y="325" width="0.8469%" height="15" fill="rgb(230,79,13)" fg:x="269" fg:w="12"/><text x="19.2338%" y="335.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (12 samples, 0.85%)</title><rect x="18.9838%" y="309" width="0.8469%" height="15" fill="rgb(247,105,23)" fg:x="269" fg:w="12"/><text x="19.2338%" y="319.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (12 samples, 0.85%)</title><rect x="18.9838%" y="293" width="0.8469%" height="15" fill="rgb(223,179,41)" fg:x="269" fg:w="12"/><text x="19.2338%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::finish (12 samples, 0.85%)</title><rect x="18.9838%" y="277" width="0.8469%" height="15" fill="rgb(218,9,34)" fg:x="269" fg:w="12"/><text x="19.2338%" y="287.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (12 samples, 0.85%)</title><rect x="18.9838%" y="261" width="0.8469%" height="15" fill="rgb(222,106,8)" fg:x="269" fg:w="12"/><text x="19.2338%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (12 samples, 0.85%)</title><rect x="18.9838%" y="245" width="0.8469%" height="15" fill="rgb(211,220,0)" fg:x="269" fg:w="12"/><text x="19.2338%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (12 samples, 0.85%)</title><rect x="18.9838%" y="229" width="0.8469%" height="15" fill="rgb(229,52,16)" fg:x="269" fg:w="12"/><text x="19.2338%" y="239.50"></text></g><g><title>sha2::sha256::x86::compress (12 samples, 0.85%)</title><rect x="18.9838%" y="213" width="0.8469%" height="15" fill="rgb(212,155,18)" fg:x="269" fg:w="12"/><text x="19.2338%" y="223.50"></text></g><g><title>sha2::sha256::soft::compress (12 samples, 0.85%)</title><rect x="18.9838%" y="197" width="0.8469%" height="15" fill="rgb(242,21,14)" fg:x="269" fg:w="12"/><text x="19.2338%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (12 samples, 0.85%)</title><rect x="18.9838%" y="181" width="0.8469%" height="15" fill="rgb(222,19,48)" fg:x="269" fg:w="12"/><text x="19.2338%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (9 samples, 0.64%)</title><rect x="19.1955%" y="165" width="0.6351%" height="15" fill="rgb(232,45,27)" fg:x="272" fg:w="9"/><text x="19.4455%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (3 samples, 0.21%)</title><rect x="19.6189%" y="149" width="0.2117%" height="15" fill="rgb(249,103,42)" fg:x="278" fg:w="3"/><text x="19.8689%" y="159.50"></text></g><g><title>sha2::sha256::soft::schedule (2 samples, 0.14%)</title><rect x="19.8306%" y="197" width="0.1411%" height="15" fill="rgb(246,81,33)" fg:x="281" fg:w="2"/><text x="20.0806%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (2 samples, 0.14%)</title><rect x="19.8306%" y="181" width="0.1411%" height="15" fill="rgb(252,33,42)" fg:x="281" fg:w="2"/><text x="20.0806%" y="191.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (2 samples, 0.14%)</title><rect x="20.2541%" y="181" width="0.1411%" height="15" fill="rgb(209,212,41)" fg:x="287" fg:w="2"/><text x="20.5041%" y="191.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::ratchet (21 samples, 1.48%)</title><rect x="18.9838%" y="357" width="1.4820%" height="15" fill="rgb(207,154,6)" fg:x="269" fg:w="21"/><text x="19.2338%" y="367.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::reset (9 samples, 0.64%)</title><rect x="19.8306%" y="341" width="0.6351%" height="15" fill="rgb(223,64,47)" fg:x="281" fg:w="9"/><text x="20.0806%" y="351.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (9 samples, 0.64%)</title><rect x="19.8306%" y="325" width="0.6351%" height="15" fill="rgb(211,161,38)" fg:x="281" fg:w="9"/><text x="20.0806%" y="335.50"></text></g><g><title>sha2::sha256::Engine256::update (9 samples, 0.64%)</title><rect x="19.8306%" y="309" width="0.6351%" height="15" fill="rgb(219,138,40)" fg:x="281" fg:w="9"/><text x="20.0806%" y="319.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (9 samples, 0.64%)</title><rect x="19.8306%" y="293" width="0.6351%" height="15" fill="rgb(241,228,46)" fg:x="281" fg:w="9"/><text x="20.0806%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (9 samples, 0.64%)</title><rect x="19.8306%" y="277" width="0.6351%" height="15" fill="rgb(223,209,38)" fg:x="281" fg:w="9"/><text x="20.0806%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (9 samples, 0.64%)</title><rect x="19.8306%" y="261" width="0.6351%" height="15" fill="rgb(236,164,45)" fg:x="281" fg:w="9"/><text x="20.0806%" y="271.50"></text></g><g><title>sha2::sha256::x86::compress (9 samples, 0.64%)</title><rect x="19.8306%" y="245" width="0.6351%" height="15" fill="rgb(231,15,5)" fg:x="281" fg:w="9"/><text x="20.0806%" y="255.50"></text></g><g><title>sha2::sha256::soft::compress (9 samples, 0.64%)</title><rect x="19.8306%" y="229" width="0.6351%" height="15" fill="rgb(252,35,15)" fg:x="281" fg:w="9"/><text x="20.0806%" y="239.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (9 samples, 0.64%)</title><rect x="19.8306%" y="213" width="0.6351%" height="15" fill="rgb(248,181,18)" fg:x="281" fg:w="9"/><text x="20.0806%" y="223.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (7 samples, 0.49%)</title><rect x="19.9718%" y="197" width="0.4940%" height="15" fill="rgb(233,39,42)" fg:x="283" fg:w="7"/><text x="20.2218%" y="207.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="20.3952%" y="181" width="0.0706%" height="15" fill="rgb(238,110,33)" fg:x="289" fg:w="1"/><text x="20.6452%" y="191.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.07%)</title><rect x="20.4658%" y="325" width="0.0706%" height="15" fill="rgb(233,195,10)" fg:x="290" fg:w="1"/><text x="20.7158%" y="335.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.07%)</title><rect x="20.4658%" y="309" width="0.0706%" height="15" fill="rgb(254,105,3)" fg:x="290" fg:w="1"/><text x="20.7158%" y="319.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.07%)</title><rect x="20.4658%" y="293" width="0.0706%" height="15" fill="rgb(221,225,9)" fg:x="290" fg:w="1"/><text x="20.7158%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.07%)</title><rect x="20.4658%" y="277" width="0.0706%" height="15" fill="rgb(224,227,45)" fg:x="290" fg:w="1"/><text x="20.7158%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="20.4658%" y="261" width="0.0706%" height="15" fill="rgb(229,198,43)" fg:x="290" fg:w="1"/><text x="20.7158%" y="271.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="20.4658%" y="245" width="0.0706%" height="15" fill="rgb(206,209,35)" fg:x="290" fg:w="1"/><text x="20.7158%" y="255.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (2 samples, 0.14%)</title><rect x="20.5363%" y="277" width="0.1411%" height="15" fill="rgb(245,195,53)" fg:x="291" fg:w="2"/><text x="20.7863%" y="287.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (2 samples, 0.14%)</title><rect x="20.5363%" y="261" width="0.1411%" height="15" fill="rgb(240,92,26)" fg:x="291" fg:w="2"/><text x="20.7863%" y="271.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (2 samples, 0.14%)</title><rect x="20.5363%" y="245" width="0.1411%" height="15" fill="rgb(207,40,23)" fg:x="291" fg:w="2"/><text x="20.7863%" y="255.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="20.6775%" y="165" width="0.0706%" height="15" fill="rgb(223,111,35)" fg:x="293" fg:w="1"/><text x="20.9275%" y="175.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.07%)</title><rect x="20.8186%" y="149" width="0.0706%" height="15" fill="rgb(229,147,28)" fg:x="295" fg:w="1"/><text x="21.0686%" y="159.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="20.8186%" y="133" width="0.0706%" height="15" fill="rgb(211,29,28)" fg:x="295" fg:w="1"/><text x="21.0686%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.07%)</title><rect x="20.8892%" y="149" width="0.0706%" height="15" fill="rgb(228,72,33)" fg:x="296" fg:w="1"/><text x="21.1392%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.07%)</title><rect x="20.9598%" y="149" width="0.0706%" height="15" fill="rgb(205,214,31)" fg:x="297" fg:w="1"/><text x="21.2098%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.07%)</title><rect x="20.9598%" y="133" width="0.0706%" height="15" fill="rgb(224,111,15)" fg:x="297" fg:w="1"/><text x="21.2098%" y="143.50"></text></g><g><title>sha2::sha256::soft::schedule (6 samples, 0.42%)</title><rect x="20.7481%" y="165" width="0.4234%" height="15" fill="rgb(253,21,26)" fg:x="294" fg:w="6"/><text x="20.9981%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (2 samples, 0.14%)</title><rect x="21.0303%" y="149" width="0.1411%" height="15" fill="rgb(245,139,43)" fg:x="298" fg:w="2"/><text x="21.2803%" y="159.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="21.1009%" y="133" width="0.0706%" height="15" fill="rgb(252,170,7)" fg:x="299" fg:w="1"/><text x="21.3509%" y="143.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (3 samples, 0.21%)</title><rect x="21.3832%" y="149" width="0.2117%" height="15" fill="rgb(231,118,14)" fg:x="303" fg:w="3"/><text x="21.6332%" y="159.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (19 samples, 1.34%)</title><rect x="20.4658%" y="341" width="1.3409%" height="15" fill="rgb(238,83,0)" fg:x="290" fg:w="19"/><text x="20.7158%" y="351.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (18 samples, 1.27%)</title><rect x="20.5363%" y="325" width="1.2703%" height="15" fill="rgb(221,39,39)" fg:x="291" fg:w="18"/><text x="20.7863%" y="335.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (18 samples, 1.27%)</title><rect x="20.5363%" y="309" width="1.2703%" height="15" fill="rgb(222,119,46)" fg:x="291" fg:w="18"/><text x="20.7863%" y="319.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (18 samples, 1.27%)</title><rect x="20.5363%" y="293" width="1.2703%" height="15" fill="rgb(222,165,49)" fg:x="291" fg:w="18"/><text x="20.7863%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::finish (16 samples, 1.13%)</title><rect x="20.6775%" y="277" width="1.1291%" height="15" fill="rgb(219,113,52)" fg:x="293" fg:w="16"/><text x="20.9275%" y="287.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (16 samples, 1.13%)</title><rect x="20.6775%" y="261" width="1.1291%" height="15" fill="rgb(214,7,15)" fg:x="293" fg:w="16"/><text x="20.9275%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (16 samples, 1.13%)</title><rect x="20.6775%" y="245" width="1.1291%" height="15" fill="rgb(235,32,4)" fg:x="293" fg:w="16"/><text x="20.9275%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (16 samples, 1.13%)</title><rect x="20.6775%" y="229" width="1.1291%" height="15" fill="rgb(238,90,54)" fg:x="293" fg:w="16"/><text x="20.9275%" y="239.50"></text></g><g><title>sha2::sha256::x86::compress (16 samples, 1.13%)</title><rect x="20.6775%" y="213" width="1.1291%" height="15" fill="rgb(213,208,19)" fg:x="293" fg:w="16"/><text x="20.9275%" y="223.50"></text></g><g><title>sha2::sha256::soft::compress (16 samples, 1.13%)</title><rect x="20.6775%" y="197" width="1.1291%" height="15" fill="rgb(233,156,4)" fg:x="293" fg:w="16"/><text x="20.9275%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (16 samples, 1.13%)</title><rect x="20.6775%" y="181" width="1.1291%" height="15" fill="rgb(207,194,5)" fg:x="293" fg:w="16"/><text x="20.9275%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (9 samples, 0.64%)</title><rect x="21.1715%" y="165" width="0.6351%" height="15" fill="rgb(206,111,30)" fg:x="300" fg:w="9"/><text x="21.4215%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (3 samples, 0.21%)</title><rect x="21.5949%" y="149" width="0.2117%" height="15" fill="rgb(243,70,54)" fg:x="306" fg:w="3"/><text x="21.8449%" y="159.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as core::default::Default&gt;::default (1 samples, 0.07%)</title><rect x="21.8066%" y="325" width="0.0706%" height="15" fill="rgb(242,28,8)" fg:x="309" fg:w="1"/><text x="22.0566%" y="335.50"></text></g><g><title>sha2::sha256::Engine256::new (1 samples, 0.07%)</title><rect x="21.8066%" y="309" width="0.0706%" height="15" fill="rgb(219,106,18)" fg:x="309" fg:w="1"/><text x="22.0566%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (3 samples, 0.21%)</title><rect x="22.0183%" y="181" width="0.2117%" height="15" fill="rgb(244,222,10)" fg:x="312" fg:w="3"/><text x="22.2683%" y="191.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (8 samples, 0.56%)</title><rect x="21.8066%" y="341" width="0.5646%" height="15" fill="rgb(236,179,52)" fg:x="309" fg:w="8"/><text x="22.0566%" y="351.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (7 samples, 0.49%)</title><rect x="21.8772%" y="325" width="0.4940%" height="15" fill="rgb(213,23,39)" fg:x="310" fg:w="7"/><text x="22.1272%" y="335.50"></text></g><g><title>sha2::sha256::Engine256::update (7 samples, 0.49%)</title><rect x="21.8772%" y="309" width="0.4940%" height="15" fill="rgb(238,48,10)" fg:x="310" fg:w="7"/><text x="22.1272%" y="319.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (7 samples, 0.49%)</title><rect x="21.8772%" y="293" width="0.4940%" height="15" fill="rgb(251,196,23)" fg:x="310" fg:w="7"/><text x="22.1272%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (7 samples, 0.49%)</title><rect x="21.8772%" y="277" width="0.4940%" height="15" fill="rgb(250,152,24)" fg:x="310" fg:w="7"/><text x="22.1272%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (7 samples, 0.49%)</title><rect x="21.8772%" y="261" width="0.4940%" height="15" fill="rgb(209,150,17)" fg:x="310" fg:w="7"/><text x="22.1272%" y="271.50"></text></g><g><title>sha2::sha256::x86::compress (7 samples, 0.49%)</title><rect x="21.8772%" y="245" width="0.4940%" height="15" fill="rgb(234,202,34)" fg:x="310" fg:w="7"/><text x="22.1272%" y="255.50"></text></g><g><title>sha2::sha256::soft::compress (7 samples, 0.49%)</title><rect x="21.8772%" y="229" width="0.4940%" height="15" fill="rgb(253,148,53)" fg:x="310" fg:w="7"/><text x="22.1272%" y="239.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (7 samples, 0.49%)</title><rect x="21.8772%" y="213" width="0.4940%" height="15" fill="rgb(218,129,16)" fg:x="310" fg:w="7"/><text x="22.1272%" y="223.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (7 samples, 0.49%)</title><rect x="21.8772%" y="197" width="0.4940%" height="15" fill="rgb(216,85,19)" fg:x="310" fg:w="7"/><text x="22.1272%" y="207.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.14%)</title><rect x="22.2301%" y="181" width="0.1411%" height="15" fill="rgb(235,228,7)" fg:x="315" fg:w="2"/><text x="22.4801%" y="191.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::squeeze_and_ratchet (29 samples, 2.05%)</title><rect x="20.4658%" y="357" width="2.0466%" height="15" fill="rgb(245,175,0)" fg:x="290" fg:w="29"/><text x="20.7158%" y="367.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.14%)</title><rect x="22.3712%" y="341" width="0.1411%" height="15" fill="rgb(208,168,36)" fg:x="317" fg:w="2"/><text x="22.6212%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="22.3712%" y="325" width="0.1411%" height="15" fill="rgb(246,171,24)" fg:x="317" fg:w="2"/><text x="22.6212%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.14%)</title><rect x="22.3712%" y="309" width="0.1411%" height="15" fill="rgb(215,142,24)" fg:x="317" fg:w="2"/><text x="22.6212%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="22.3712%" y="293" width="0.1411%" height="15" fill="rgb(250,187,7)" fg:x="317" fg:w="2"/><text x="22.6212%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="22.3712%" y="277" width="0.1411%" height="15" fill="rgb(228,66,33)" fg:x="317" fg:w="2"/><text x="22.6212%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.14%)</title><rect x="22.3712%" y="261" width="0.1411%" height="15" fill="rgb(234,215,21)" fg:x="317" fg:w="2"/><text x="22.6212%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.14%)</title><rect x="22.3712%" y="245" width="0.1411%" height="15" fill="rgb(222,191,20)" fg:x="317" fg:w="2"/><text x="22.6212%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.14%)</title><rect x="22.3712%" y="229" width="0.1411%" height="15" fill="rgb(245,79,54)" fg:x="317" fg:w="2"/><text x="22.6212%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.14%)</title><rect x="22.3712%" y="213" width="0.1411%" height="15" fill="rgb(240,10,37)" fg:x="317" fg:w="2"/><text x="22.6212%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.14%)</title><rect x="22.3712%" y="197" width="0.1411%" height="15" fill="rgb(214,192,32)" fg:x="317" fg:w="2"/><text x="22.6212%" y="207.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.14%)</title><rect x="22.3712%" y="181" width="0.1411%" height="15" fill="rgb(209,36,54)" fg:x="317" fg:w="2"/><text x="22.6212%" y="191.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.14%)</title><rect x="22.3712%" y="165" width="0.1411%" height="15" fill="rgb(220,10,11)" fg:x="317" fg:w="2"/><text x="22.6212%" y="175.50"></text></g><g><title>_int_realloc (2 samples, 0.14%)</title><rect x="22.3712%" y="149" width="0.1411%" height="15" fill="rgb(221,106,17)" fg:x="317" fg:w="2"/><text x="22.6212%" y="159.50"></text></g><g><title>_int_malloc (2 samples, 0.14%)</title><rect x="22.3712%" y="133" width="0.1411%" height="15" fill="rgb(251,142,44)" fg:x="317" fg:w="2"/><text x="22.6212%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;curve25519_dalek::ristretto::RistrettoPoint&gt;&gt; (1 samples, 0.07%)</title><rect x="22.5124%" y="357" width="0.0706%" height="15" fill="rgb(238,13,15)" fg:x="319" fg:w="1"/><text x="22.7624%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;curve25519_dalek::ristretto::RistrettoPoint&gt;&gt; (1 samples, 0.07%)</title><rect x="22.5124%" y="341" width="0.0706%" height="15" fill="rgb(208,107,27)" fg:x="319" fg:w="1"/><text x="22.7624%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="22.5124%" y="325" width="0.0706%" height="15" fill="rgb(205,136,37)" fg:x="319" fg:w="1"/><text x="22.7624%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="22.5124%" y="309" width="0.0706%" height="15" fill="rgb(250,205,27)" fg:x="319" fg:w="1"/><text x="22.7624%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="22.5124%" y="293" width="0.0706%" height="15" fill="rgb(210,80,43)" fg:x="319" fg:w="1"/><text x="22.7624%" y="303.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="22.5124%" y="277" width="0.0706%" height="15" fill="rgb(247,160,36)" fg:x="319" fg:w="1"/><text x="22.7624%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (5 samples, 0.35%)</title><rect x="22.6535%" y="341" width="0.3529%" height="15" fill="rgb(234,13,49)" fg:x="321" fg:w="5"/><text x="22.9035%" y="351.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (1 samples, 0.07%)</title><rect x="22.9358%" y="325" width="0.0706%" height="15" fill="rgb(234,122,0)" fg:x="325" fg:w="1"/><text x="23.1858%" y="335.50"></text></g><g><title>&lt;T as subtle::ConditionallyNegatable&gt;::conditional_negate (1 samples, 0.07%)</title><rect x="23.0064%" y="341" width="0.0706%" height="15" fill="rgb(207,146,38)" fg:x="326" fg:w="1"/><text x="23.2564%" y="351.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (1 samples, 0.07%)</title><rect x="23.0064%" y="325" width="0.0706%" height="15" fill="rgb(207,177,25)" fg:x="326" fg:w="1"/><text x="23.2564%" y="335.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (1 samples, 0.07%)</title><rect x="23.0064%" y="309" width="0.0706%" height="15" fill="rgb(211,178,42)" fg:x="326" fg:w="1"/><text x="23.2564%" y="319.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (1 samples, 0.07%)</title><rect x="23.0769%" y="341" width="0.0706%" height="15" fill="rgb(230,69,54)" fg:x="327" fg:w="1"/><text x="23.3269%" y="351.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (1 samples, 0.07%)</title><rect x="23.0769%" y="325" width="0.0706%" height="15" fill="rgb(214,135,41)" fg:x="327" fg:w="1"/><text x="23.3269%" y="335.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::to_bytes (2 samples, 0.14%)</title><rect x="23.1475%" y="341" width="0.1411%" height="15" fill="rgb(237,67,25)" fg:x="328" fg:w="2"/><text x="23.3975%" y="351.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (1 samples, 0.07%)</title><rect x="23.2181%" y="325" width="0.0706%" height="15" fill="rgb(222,189,50)" fg:x="329" fg:w="1"/><text x="23.4681%" y="335.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (8 samples, 0.56%)</title><rect x="23.3592%" y="309" width="0.5646%" height="15" fill="rgb(245,148,34)" fg:x="331" fg:w="8"/><text x="23.6092%" y="319.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (3 samples, 0.21%)</title><rect x="23.7121%" y="293" width="0.2117%" height="15" fill="rgb(222,29,6)" fg:x="336" fg:w="3"/><text x="23.9621%" y="303.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (2 samples, 0.14%)</title><rect x="23.9238%" y="309" width="0.1411%" height="15" fill="rgb(221,189,43)" fg:x="339" fg:w="2"/><text x="24.1738%" y="319.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (2 samples, 0.14%)</title><rect x="23.9238%" y="293" width="0.1411%" height="15" fill="rgb(207,36,27)" fg:x="339" fg:w="2"/><text x="24.1738%" y="303.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (1 samples, 0.07%)</title><rect x="23.9944%" y="277" width="0.0706%" height="15" fill="rgb(217,90,24)" fg:x="340" fg:w="1"/><text x="24.2444%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.07%)</title><rect x="24.1355%" y="293" width="0.0706%" height="15" fill="rgb(224,66,35)" fg:x="342" fg:w="1"/><text x="24.3855%" y="303.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (11 samples, 0.78%)</title><rect x="24.2061%" y="277" width="0.7763%" height="15" fill="rgb(221,13,50)" fg:x="343" fg:w="11"/><text x="24.4561%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (4 samples, 0.28%)</title><rect x="24.7001%" y="261" width="0.2823%" height="15" fill="rgb(236,68,49)" fg:x="350" fg:w="4"/><text x="24.9501%" y="271.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (153 samples, 10.80%)</title><rect x="24.9824%" y="277" width="10.7975%" height="15" fill="rgb(229,146,28)" fg:x="354" fg:w="153"/><text x="25.2324%" y="287.50">curve25519_dalek..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (63 samples, 4.45%)</title><rect x="31.3338%" y="261" width="4.4460%" height="15" fill="rgb(225,31,38)" fg:x="444" fg:w="63"/><text x="31.5838%" y="271.50">curve..</text></g><g><title>[receiver] (1 samples, 0.07%)</title><rect x="35.7798%" y="261" width="0.0706%" height="15" fill="rgb(250,208,3)" fg:x="507" fg:w="1"/><text x="36.0298%" y="271.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.07%)</title><rect x="35.7798%" y="245" width="0.0706%" height="15" fill="rgb(246,54,23)" fg:x="507" fg:w="1"/><text x="36.0298%" y="255.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow_p58 (168 samples, 11.86%)</title><rect x="24.0649%" y="309" width="11.8560%" height="15" fill="rgb(243,76,11)" fg:x="341" fg:w="168"/><text x="24.3149%" y="319.50">curve25519_dalek::..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (166 samples, 11.71%)</title><rect x="24.2061%" y="293" width="11.7149%" height="15" fill="rgb(245,21,50)" fg:x="343" fg:w="166"/><text x="24.4561%" y="303.50">curve25519_dalek:..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (2 samples, 0.14%)</title><rect x="35.7798%" y="277" width="0.1411%" height="15" fill="rgb(228,9,43)" fg:x="507" fg:w="2"/><text x="36.0298%" y="287.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.07%)</title><rect x="35.8504%" y="261" width="0.0706%" height="15" fill="rgb(208,100,47)" fg:x="508" fg:w="1"/><text x="36.1004%" y="271.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (5 samples, 0.35%)</title><rect x="35.9210%" y="293" width="0.3529%" height="15" fill="rgb(232,26,8)" fg:x="509" fg:w="5"/><text x="36.1710%" y="303.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (2 samples, 0.14%)</title><rect x="36.1327%" y="277" width="0.1411%" height="15" fill="rgb(216,166,38)" fg:x="512" fg:w="2"/><text x="36.3827%" y="287.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.14%)</title><rect x="36.1327%" y="261" width="0.1411%" height="15" fill="rgb(251,202,51)" fg:x="512" fg:w="2"/><text x="36.3827%" y="271.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (2 samples, 0.14%)</title><rect x="36.1327%" y="245" width="0.1411%" height="15" fill="rgb(254,216,34)" fg:x="512" fg:w="2"/><text x="36.3827%" y="255.50"></text></g><g><title>subtle::black_box (2 samples, 0.14%)</title><rect x="36.1327%" y="229" width="0.1411%" height="15" fill="rgb(251,32,27)" fg:x="512" fg:w="2"/><text x="36.3827%" y="239.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.07%)</title><rect x="36.2032%" y="213" width="0.0706%" height="15" fill="rgb(208,127,28)" fg:x="513" fg:w="1"/><text x="36.4532%" y="223.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invsqrt (186 samples, 13.13%)</title><rect x="23.2886%" y="341" width="13.1263%" height="15" fill="rgb(224,137,22)" fg:x="330" fg:w="186"/><text x="23.5386%" y="351.50">curve25519_dalek::fi..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (186 samples, 13.13%)</title><rect x="23.2886%" y="325" width="13.1263%" height="15" fill="rgb(254,70,32)" fg:x="330" fg:w="186"/><text x="23.5386%" y="335.50">curve25519_dalek::fi..</text></g><g><title>curve25519_dalek::field::&lt;impl subtle::ConstantTimeEq for curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::ct_eq (7 samples, 0.49%)</title><rect x="35.9210%" y="309" width="0.4940%" height="15" fill="rgb(229,75,37)" fg:x="509" fg:w="7"/><text x="36.1710%" y="319.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::to_bytes (2 samples, 0.14%)</title><rect x="36.2738%" y="293" width="0.1411%" height="15" fill="rgb(252,64,23)" fg:x="514" fg:w="2"/><text x="36.5238%" y="303.50"></text></g><g><title>curve25519_dalek::ristretto::RistrettoPoint::compress (197 samples, 13.90%)</title><rect x="22.5829%" y="357" width="13.9026%" height="15" fill="rgb(232,162,48)" fg:x="320" fg:w="197"/><text x="22.8329%" y="367.50">curve25519_dalek::ris..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::is_negative (1 samples, 0.07%)</title><rect x="36.4150%" y="341" width="0.0706%" height="15" fill="rgb(246,160,12)" fg:x="516" fg:w="1"/><text x="36.6650%" y="351.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.07%)</title><rect x="36.4150%" y="325" width="0.0706%" height="15" fill="rgb(247,166,0)" fg:x="516" fg:w="1"/><text x="36.6650%" y="335.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (1 samples, 0.07%)</title><rect x="36.4150%" y="309" width="0.0706%" height="15" fill="rgb(249,219,21)" fg:x="516" fg:w="1"/><text x="36.6650%" y="319.50"></text></g><g><title>subtle::black_box (1 samples, 0.07%)</title><rect x="36.4150%" y="293" width="0.0706%" height="15" fill="rgb(205,209,3)" fg:x="516" fg:w="1"/><text x="36.6650%" y="303.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.07%)</title><rect x="36.4150%" y="277" width="0.0706%" height="15" fill="rgb(243,44,1)" fg:x="516" fg:w="1"/><text x="36.6650%" y="287.50"></text></g><g><title>poksho::proof::Proof::from_slice (1 samples, 0.07%)</title><rect x="36.4855%" y="357" width="0.0706%" height="15" fill="rgb(206,159,16)" fg:x="517" fg:w="1"/><text x="36.7355%" y="367.50"></text></g><g><title>poksho::scalar::scalar_from_slice_canonical (1 samples, 0.07%)</title><rect x="36.4855%" y="341" width="0.0706%" height="15" fill="rgb(244,77,30)" fg:x="517" fg:w="1"/><text x="36.7355%" y="351.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::from_canonical_bytes (1 samples, 0.07%)</title><rect x="36.4855%" y="325" width="0.0706%" height="15" fill="rgb(218,69,12)" fg:x="517" fg:w="1"/><text x="36.7355%" y="335.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::is_canonical (1 samples, 0.07%)</title><rect x="36.4855%" y="309" width="0.0706%" height="15" fill="rgb(212,87,7)" fg:x="517" fg:w="1"/><text x="36.7355%" y="319.50"></text></g><g><title>&lt;curve25519_dalek::scalar::Scalar as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="36.4855%" y="293" width="0.0706%" height="15" fill="rgb(245,114,25)" fg:x="517" fg:w="1"/><text x="36.7355%" y="303.50"></text></g><g><title>&lt;curve25519_dalek::scalar::Scalar as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.07%)</title><rect x="36.4855%" y="277" width="0.0706%" height="15" fill="rgb(210,61,42)" fg:x="517" fg:w="1"/><text x="36.7355%" y="287.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.07%)</title><rect x="36.4855%" y="261" width="0.0706%" height="15" fill="rgb(211,52,33)" fg:x="517" fg:w="1"/><text x="36.7355%" y="271.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.07%)</title><rect x="36.4855%" y="245" width="0.0706%" height="15" fill="rgb(234,58,33)" fg:x="517" fg:w="1"/><text x="36.7355%" y="255.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.07%)</title><rect x="36.4855%" y="229" width="0.0706%" height="15" fill="rgb(220,115,36)" fg:x="517" fg:w="1"/><text x="36.7355%" y="239.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (1 samples, 0.07%)</title><rect x="36.4855%" y="213" width="0.0706%" height="15" fill="rgb(243,153,54)" fg:x="517" fg:w="1"/><text x="36.7355%" y="223.50"></text></g><g><title>subtle::black_box (1 samples, 0.07%)</title><rect x="36.4855%" y="197" width="0.0706%" height="15" fill="rgb(251,47,18)" fg:x="517" fg:w="1"/><text x="36.7355%" y="207.50"></text></g><g><title>poksho::scalar::scalar_from_slice_wide (2 samples, 0.14%)</title><rect x="36.5561%" y="357" width="0.1411%" height="15" fill="rgb(242,102,42)" fg:x="518" fg:w="2"/><text x="36.8061%" y="367.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::from_bytes_mod_order_wide (2 samples, 0.14%)</title><rect x="36.5561%" y="341" width="0.1411%" height="15" fill="rgb(234,31,38)" fg:x="518" fg:w="2"/><text x="36.8061%" y="351.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::from_bytes_wide (2 samples, 0.14%)</title><rect x="36.5561%" y="325" width="0.1411%" height="15" fill="rgb(221,117,51)" fg:x="518" fg:w="2"/><text x="36.8061%" y="335.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_mul (2 samples, 0.14%)</title><rect x="36.5561%" y="309" width="0.1411%" height="15" fill="rgb(212,20,18)" fg:x="518" fg:w="2"/><text x="36.8061%" y="319.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_reduce (2 samples, 0.14%)</title><rect x="36.5561%" y="293" width="0.1411%" height="15" fill="rgb(245,133,36)" fg:x="518" fg:w="2"/><text x="36.8061%" y="303.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_reduce::part1 (1 samples, 0.07%)</title><rect x="36.6267%" y="277" width="0.0706%" height="15" fill="rgb(212,6,19)" fg:x="519" fg:w="1"/><text x="36.8767%" y="287.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.07%)</title><rect x="36.6972%" y="165" width="0.0706%" height="15" fill="rgb(218,1,36)" fg:x="520" fg:w="1"/><text x="36.9472%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="36.6972%" y="149" width="0.0706%" height="15" fill="rgb(246,84,54)" fg:x="520" fg:w="1"/><text x="36.9472%" y="159.50"></text></g><g><title>sha2::sha256::soft::schedule (2 samples, 0.14%)</title><rect x="36.6972%" y="181" width="0.1411%" height="15" fill="rgb(242,110,6)" fg:x="520" fg:w="2"/><text x="36.9472%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.07%)</title><rect x="36.7678%" y="165" width="0.0706%" height="15" fill="rgb(214,47,5)" fg:x="521" fg:w="1"/><text x="37.0178%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.07%)</title><rect x="36.7678%" y="149" width="0.0706%" height="15" fill="rgb(218,159,25)" fg:x="521" fg:w="1"/><text x="37.0178%" y="159.50"></text></g><g><title>sha2::sha256::soft::shr (1 samples, 0.07%)</title><rect x="36.7678%" y="133" width="0.0706%" height="15" fill="rgb(215,211,28)" fg:x="521" fg:w="1"/><text x="37.0178%" y="143.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::absorb (3 samples, 0.21%)</title><rect x="36.6972%" y="341" width="0.2117%" height="15" fill="rgb(238,59,32)" fg:x="520" fg:w="3"/><text x="36.9472%" y="351.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::update (3 samples, 0.21%)</title><rect x="36.6972%" y="325" width="0.2117%" height="15" fill="rgb(226,82,3)" fg:x="520" fg:w="3"/><text x="36.9472%" y="335.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (3 samples, 0.21%)</title><rect x="36.6972%" y="309" width="0.2117%" height="15" fill="rgb(240,164,32)" fg:x="520" fg:w="3"/><text x="36.9472%" y="319.50"></text></g><g><title>sha2::sha256::Engine256::update (3 samples, 0.21%)</title><rect x="36.6972%" y="293" width="0.2117%" height="15" fill="rgb(232,46,7)" fg:x="520" fg:w="3"/><text x="36.9472%" y="303.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (3 samples, 0.21%)</title><rect x="36.6972%" y="277" width="0.2117%" height="15" fill="rgb(229,129,53)" fg:x="520" fg:w="3"/><text x="36.9472%" y="287.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (3 samples, 0.21%)</title><rect x="36.6972%" y="261" width="0.2117%" height="15" fill="rgb(234,188,29)" fg:x="520" fg:w="3"/><text x="36.9472%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (3 samples, 0.21%)</title><rect x="36.6972%" y="245" width="0.2117%" height="15" fill="rgb(246,141,4)" fg:x="520" fg:w="3"/><text x="36.9472%" y="255.50"></text></g><g><title>sha2::sha256::x86::compress (3 samples, 0.21%)</title><rect x="36.6972%" y="229" width="0.2117%" height="15" fill="rgb(229,23,39)" fg:x="520" fg:w="3"/><text x="36.9472%" y="239.50"></text></g><g><title>sha2::sha256::soft::compress (3 samples, 0.21%)</title><rect x="36.6972%" y="213" width="0.2117%" height="15" fill="rgb(206,12,3)" fg:x="520" fg:w="3"/><text x="36.9472%" y="223.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (3 samples, 0.21%)</title><rect x="36.6972%" y="197" width="0.2117%" height="15" fill="rgb(252,226,20)" fg:x="520" fg:w="3"/><text x="36.9472%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.07%)</title><rect x="36.8384%" y="181" width="0.0706%" height="15" fill="rgb(216,123,35)" fg:x="522" fg:w="1"/><text x="37.0884%" y="191.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.07%)</title><rect x="36.8384%" y="165" width="0.0706%" height="15" fill="rgb(212,68,40)" fg:x="522" fg:w="1"/><text x="37.0884%" y="175.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.07%)</title><rect x="36.9090%" y="309" width="0.0706%" height="15" fill="rgb(254,125,32)" fg:x="523" fg:w="1"/><text x="37.1590%" y="319.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.07%)</title><rect x="36.9090%" y="293" width="0.0706%" height="15" fill="rgb(253,97,22)" fg:x="523" fg:w="1"/><text x="37.1590%" y="303.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.07%)</title><rect x="36.9090%" y="277" width="0.0706%" height="15" fill="rgb(241,101,14)" fg:x="523" fg:w="1"/><text x="37.1590%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.07%)</title><rect x="36.9090%" y="261" width="0.0706%" height="15" fill="rgb(238,103,29)" fg:x="523" fg:w="1"/><text x="37.1590%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="36.9090%" y="245" width="0.0706%" height="15" fill="rgb(233,195,47)" fg:x="523" fg:w="1"/><text x="37.1590%" y="255.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="36.9090%" y="229" width="0.0706%" height="15" fill="rgb(246,218,30)" fg:x="523" fg:w="1"/><text x="37.1590%" y="239.50"></text></g><g><title>sha2::sha256::soft::schedule (5 samples, 0.35%)</title><rect x="36.9795%" y="149" width="0.3529%" height="15" fill="rgb(219,145,47)" fg:x="524" fg:w="5"/><text x="37.2295%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (4 samples, 0.28%)</title><rect x="37.0501%" y="133" width="0.2823%" height="15" fill="rgb(243,12,26)" fg:x="525" fg:w="4"/><text x="37.3001%" y="143.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (3 samples, 0.21%)</title><rect x="37.1207%" y="117" width="0.2117%" height="15" fill="rgb(214,87,16)" fg:x="526" fg:w="3"/><text x="37.3707%" y="127.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (12 samples, 0.85%)</title><rect x="36.9090%" y="325" width="0.8469%" height="15" fill="rgb(208,99,42)" fg:x="523" fg:w="12"/><text x="37.1590%" y="335.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (11 samples, 0.78%)</title><rect x="36.9795%" y="309" width="0.7763%" height="15" fill="rgb(253,99,2)" fg:x="524" fg:w="11"/><text x="37.2295%" y="319.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (11 samples, 0.78%)</title><rect x="36.9795%" y="293" width="0.7763%" height="15" fill="rgb(220,168,23)" fg:x="524" fg:w="11"/><text x="37.2295%" y="303.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (11 samples, 0.78%)</title><rect x="36.9795%" y="277" width="0.7763%" height="15" fill="rgb(242,38,24)" fg:x="524" fg:w="11"/><text x="37.2295%" y="287.50"></text></g><g><title>sha2::sha256::Engine256::finish (11 samples, 0.78%)</title><rect x="36.9795%" y="261" width="0.7763%" height="15" fill="rgb(225,182,9)" fg:x="524" fg:w="11"/><text x="37.2295%" y="271.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (11 samples, 0.78%)</title><rect x="36.9795%" y="245" width="0.7763%" height="15" fill="rgb(243,178,37)" fg:x="524" fg:w="11"/><text x="37.2295%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (11 samples, 0.78%)</title><rect x="36.9795%" y="229" width="0.7763%" height="15" fill="rgb(232,139,19)" fg:x="524" fg:w="11"/><text x="37.2295%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (11 samples, 0.78%)</title><rect x="36.9795%" y="213" width="0.7763%" height="15" fill="rgb(225,201,24)" fg:x="524" fg:w="11"/><text x="37.2295%" y="223.50"></text></g><g><title>sha2::sha256::x86::compress (11 samples, 0.78%)</title><rect x="36.9795%" y="197" width="0.7763%" height="15" fill="rgb(221,47,46)" fg:x="524" fg:w="11"/><text x="37.2295%" y="207.50"></text></g><g><title>sha2::sha256::soft::compress (11 samples, 0.78%)</title><rect x="36.9795%" y="181" width="0.7763%" height="15" fill="rgb(249,23,13)" fg:x="524" fg:w="11"/><text x="37.2295%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (11 samples, 0.78%)</title><rect x="36.9795%" y="165" width="0.7763%" height="15" fill="rgb(219,9,5)" fg:x="524" fg:w="11"/><text x="37.2295%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (6 samples, 0.42%)</title><rect x="37.3324%" y="149" width="0.4234%" height="15" fill="rgb(254,171,16)" fg:x="529" fg:w="6"/><text x="37.5824%" y="159.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.14%)</title><rect x="37.6147%" y="133" width="0.1411%" height="15" fill="rgb(230,171,20)" fg:x="533" fg:w="2"/><text x="37.8647%" y="143.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.07%)</title><rect x="37.7558%" y="181" width="0.0706%" height="15" fill="rgb(210,71,41)" fg:x="535" fg:w="1"/><text x="38.0058%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (1 samples, 0.07%)</title><rect x="37.7558%" y="165" width="0.0706%" height="15" fill="rgb(206,173,20)" fg:x="535" fg:w="1"/><text x="38.0058%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.07%)</title><rect x="37.7558%" y="149" width="0.0706%" height="15" fill="rgb(233,88,34)" fg:x="535" fg:w="1"/><text x="38.0058%" y="159.50"></text></g><g><title>poksho::shoapi::ShoApi::absorb_and_ratchet (17 samples, 1.20%)</title><rect x="36.6972%" y="357" width="1.1997%" height="15" fill="rgb(223,209,46)" fg:x="520" fg:w="17"/><text x="36.9472%" y="367.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::ratchet (14 samples, 0.99%)</title><rect x="36.9090%" y="341" width="0.9880%" height="15" fill="rgb(250,43,18)" fg:x="523" fg:w="14"/><text x="37.1590%" y="351.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::reset (2 samples, 0.14%)</title><rect x="37.7558%" y="325" width="0.1411%" height="15" fill="rgb(208,13,10)" fg:x="535" fg:w="2"/><text x="38.0058%" y="335.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (2 samples, 0.14%)</title><rect x="37.7558%" y="309" width="0.1411%" height="15" fill="rgb(212,200,36)" fg:x="535" fg:w="2"/><text x="38.0058%" y="319.50"></text></g><g><title>sha2::sha256::Engine256::update (2 samples, 0.14%)</title><rect x="37.7558%" y="293" width="0.1411%" height="15" fill="rgb(225,90,30)" fg:x="535" fg:w="2"/><text x="38.0058%" y="303.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (2 samples, 0.14%)</title><rect x="37.7558%" y="277" width="0.1411%" height="15" fill="rgb(236,182,39)" fg:x="535" fg:w="2"/><text x="38.0058%" y="287.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (2 samples, 0.14%)</title><rect x="37.7558%" y="261" width="0.1411%" height="15" fill="rgb(212,144,35)" fg:x="535" fg:w="2"/><text x="38.0058%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (2 samples, 0.14%)</title><rect x="37.7558%" y="245" width="0.1411%" height="15" fill="rgb(228,63,44)" fg:x="535" fg:w="2"/><text x="38.0058%" y="255.50"></text></g><g><title>sha2::sha256::x86::compress (2 samples, 0.14%)</title><rect x="37.7558%" y="229" width="0.1411%" height="15" fill="rgb(228,109,6)" fg:x="535" fg:w="2"/><text x="38.0058%" y="239.50"></text></g><g><title>sha2::sha256::soft::compress (2 samples, 0.14%)</title><rect x="37.7558%" y="213" width="0.1411%" height="15" fill="rgb(238,117,24)" fg:x="535" fg:w="2"/><text x="38.0058%" y="223.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 0.14%)</title><rect x="37.7558%" y="197" width="0.1411%" height="15" fill="rgb(242,26,26)" fg:x="535" fg:w="2"/><text x="38.0058%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.07%)</title><rect x="37.8264%" y="181" width="0.0706%" height="15" fill="rgb(221,92,48)" fg:x="536" fg:w="1"/><text x="38.0764%" y="191.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.64%)</title><rect x="38.0381%" y="293" width="0.6351%" height="15" fill="rgb(209,209,32)" fg:x="539" fg:w="9"/><text x="38.2881%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="38.8144%" y="165" width="0.0706%" height="15" fill="rgb(221,70,22)" fg:x="550" fg:w="1"/><text x="39.0644%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="38.8144%" y="149" width="0.0706%" height="15" fill="rgb(248,145,5)" fg:x="550" fg:w="1"/><text x="39.0644%" y="159.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="38.8144%" y="133" width="0.0706%" height="15" fill="rgb(226,116,26)" fg:x="550" fg:w="1"/><text x="39.0644%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="38.8144%" y="117" width="0.0706%" height="15" fill="rgb(244,5,17)" fg:x="550" fg:w="1"/><text x="39.0644%" y="127.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="38.8144%" y="101" width="0.0706%" height="15" fill="rgb(252,159,33)" fg:x="550" fg:w="1"/><text x="39.0644%" y="111.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul::{{closure}} (1 samples, 0.07%)</title><rect x="38.8144%" y="85" width="0.0706%" height="15" fill="rgb(206,71,0)" fg:x="550" fg:w="1"/><text x="39.0644%" y="95.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::to_radix_16 (1 samples, 0.07%)</title><rect x="38.8144%" y="69" width="0.0706%" height="15" fill="rgb(233,118,54)" fg:x="550" fg:w="1"/><text x="39.0644%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.21%)</title><rect x="38.7438%" y="229" width="0.2117%" height="15" fill="rgb(234,83,48)" fg:x="549" fg:w="3"/><text x="38.9938%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.21%)</title><rect x="38.7438%" y="213" width="0.2117%" height="15" fill="rgb(228,3,54)" fg:x="549" fg:w="3"/><text x="38.9938%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.21%)</title><rect x="38.7438%" y="197" width="0.2117%" height="15" fill="rgb(226,155,13)" fg:x="549" fg:w="3"/><text x="38.9938%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.21%)</title><rect x="38.7438%" y="181" width="0.2117%" height="15" fill="rgb(241,28,37)" fg:x="549" fg:w="3"/><text x="38.9938%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="38.8850%" y="165" width="0.0706%" height="15" fill="rgb(233,93,10)" fg:x="551" fg:w="1"/><text x="39.1350%" y="175.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="38.8850%" y="149" width="0.0706%" height="15" fill="rgb(225,113,19)" fg:x="551" fg:w="1"/><text x="39.1350%" y="159.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul::{{closure}} (1 samples, 0.07%)</title><rect x="38.8850%" y="133" width="0.0706%" height="15" fill="rgb(241,2,18)" fg:x="551" fg:w="1"/><text x="39.1350%" y="143.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::to_radix_16 (1 samples, 0.07%)</title><rect x="38.8850%" y="117" width="0.0706%" height="15" fill="rgb(228,207,21)" fg:x="551" fg:w="1"/><text x="39.1350%" y="127.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::to_radix_16::bot_half (1 samples, 0.07%)</title><rect x="38.8850%" y="101" width="0.0706%" height="15" fill="rgb(213,211,35)" fg:x="551" fg:w="1"/><text x="39.1350%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.35%)</title><rect x="38.6733%" y="293" width="0.3529%" height="15" fill="rgb(209,83,10)" fg:x="548" fg:w="5"/><text x="38.9233%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.35%)</title><rect x="38.6733%" y="277" width="0.3529%" height="15" fill="rgb(209,164,1)" fg:x="548" fg:w="5"/><text x="38.9233%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.28%)</title><rect x="38.7438%" y="261" width="0.2823%" height="15" fill="rgb(213,184,43)" fg:x="549" fg:w="4"/><text x="38.9938%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.28%)</title><rect x="38.7438%" y="245" width="0.2823%" height="15" fill="rgb(231,61,34)" fg:x="549" fg:w="4"/><text x="38.9938%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.07%)</title><rect x="38.9555%" y="229" width="0.0706%" height="15" fill="rgb(235,75,3)" fg:x="552" fg:w="1"/><text x="39.2055%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.07%)</title><rect x="38.9555%" y="213" width="0.0706%" height="15" fill="rgb(220,106,47)" fg:x="552" fg:w="1"/><text x="39.2055%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.07%)</title><rect x="38.9555%" y="197" width="0.0706%" height="15" fill="rgb(210,196,33)" fg:x="552" fg:w="1"/><text x="39.2055%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.07%)</title><rect x="39.0261%" y="293" width="0.0706%" height="15" fill="rgb(229,154,42)" fg:x="553" fg:w="1"/><text x="39.2761%" y="303.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.07%)</title><rect x="39.0261%" y="277" width="0.0706%" height="15" fill="rgb(228,114,26)" fg:x="553" fg:w="1"/><text x="39.2761%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.07%)</title><rect x="39.0261%" y="261" width="0.0706%" height="15" fill="rgb(208,144,1)" fg:x="553" fg:w="1"/><text x="39.2761%" y="271.50"></text></g><g><title>core::cmp::min (1 samples, 0.07%)</title><rect x="39.0261%" y="245" width="0.0706%" height="15" fill="rgb(239,112,37)" fg:x="553" fg:w="1"/><text x="39.2761%" y="255.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.07%)</title><rect x="39.0261%" y="229" width="0.0706%" height="15" fill="rgb(210,96,50)" fg:x="553" fg:w="1"/><text x="39.2761%" y="239.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.07%)</title><rect x="39.0261%" y="213" width="0.0706%" height="15" fill="rgb(222,178,2)" fg:x="553" fg:w="1"/><text x="39.2761%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;curve25519_dalek::window::LookupTable&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="39.0967%" y="293" width="0.0706%" height="15" fill="rgb(226,74,18)" fg:x="554" fg:w="1"/><text x="39.3467%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;curve25519_dalek::window::LookupTable&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="39.0967%" y="277" width="0.0706%" height="15" fill="rgb(225,67,54)" fg:x="554" fg:w="1"/><text x="39.3467%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="39.0967%" y="261" width="0.0706%" height="15" fill="rgb(251,92,32)" fg:x="554" fg:w="1"/><text x="39.3467%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="39.0967%" y="245" width="0.0706%" height="15" fill="rgb(228,149,22)" fg:x="554" fg:w="1"/><text x="39.3467%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="39.0967%" y="229" width="0.0706%" height="15" fill="rgb(243,54,13)" fg:x="554" fg:w="1"/><text x="39.3467%" y="239.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="39.0967%" y="213" width="0.0706%" height="15" fill="rgb(243,180,28)" fg:x="554" fg:w="1"/><text x="39.3467%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;zeroize::Zeroizing&lt;alloc::vec::Vec&lt;[i8: 64]&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="39.1673%" y="293" width="0.0706%" height="15" fill="rgb(208,167,24)" fg:x="555" fg:w="1"/><text x="39.4173%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;[i8: 64]&gt;&gt; (1 samples, 0.07%)</title><rect x="39.1673%" y="277" width="0.0706%" height="15" fill="rgb(245,73,45)" fg:x="555" fg:w="1"/><text x="39.4173%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;[i8: 64]&gt;&gt; (1 samples, 0.07%)</title><rect x="39.1673%" y="261" width="0.0706%" height="15" fill="rgb(237,203,48)" fg:x="555" fg:w="1"/><text x="39.4173%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="39.1673%" y="245" width="0.0706%" height="15" fill="rgb(211,197,16)" fg:x="555" fg:w="1"/><text x="39.4173%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="39.1673%" y="229" width="0.0706%" height="15" fill="rgb(243,99,51)" fg:x="555" fg:w="1"/><text x="39.4173%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="39.1673%" y="213" width="0.0706%" height="15" fill="rgb(215,123,29)" fg:x="555" fg:w="1"/><text x="39.4173%" y="223.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="39.1673%" y="197" width="0.0706%" height="15" fill="rgb(239,186,37)" fg:x="555" fg:w="1"/><text x="39.4173%" y="207.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (5 samples, 0.35%)</title><rect x="39.6613%" y="277" width="0.3529%" height="15" fill="rgb(252,136,39)" fg:x="562" fg:w="5"/><text x="39.9113%" y="287.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (4 samples, 0.28%)</title><rect x="39.7318%" y="261" width="0.2823%" height="15" fill="rgb(223,213,32)" fg:x="563" fg:w="4"/><text x="39.9818%" y="271.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (64 samples, 4.52%)</title><rect x="43.4721%" y="261" width="4.5166%" height="15" fill="rgb(233,115,5)" fg:x="616" fg:w="64"/><text x="43.7221%" y="271.50">&lt;&amp;cur..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (114 samples, 8.05%)</title><rect x="40.0141%" y="277" width="8.0452%" height="15" fill="rgb(207,226,44)" fg:x="567" fg:w="114"/><text x="40.2641%" y="287.50">&lt;&amp;curve2551..</text></g><g><title>ret_from_intr (1 samples, 0.07%)</title><rect x="47.9887%" y="261" width="0.0706%" height="15" fill="rgb(208,126,0)" fg:x="680" fg:w="1"/><text x="48.2387%" y="271.50"></text></g><g><title>do_IRQ (1 samples, 0.07%)</title><rect x="47.9887%" y="245" width="0.0706%" height="15" fill="rgb(244,66,21)" fg:x="680" fg:w="1"/><text x="48.2387%" y="255.50"></text></g><g><title>handle_edge_irq (1 samples, 0.07%)</title><rect x="47.9887%" y="229" width="0.0706%" height="15" fill="rgb(222,97,12)" fg:x="680" fg:w="1"/><text x="48.2387%" y="239.50"></text></g><g><title>handle_irq_event (1 samples, 0.07%)</title><rect x="47.9887%" y="213" width="0.0706%" height="15" fill="rgb(219,213,19)" fg:x="680" fg:w="1"/><text x="48.2387%" y="223.50"></text></g><g><title>handle_irq_event_percpu (1 samples, 0.07%)</title><rect x="47.9887%" y="197" width="0.0706%" height="15" fill="rgb(252,169,30)" fg:x="680" fg:w="1"/><text x="48.2387%" y="207.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.07%)</title><rect x="47.9887%" y="181" width="0.0706%" height="15" fill="rgb(206,32,51)" fg:x="680" fg:w="1"/><text x="48.2387%" y="191.50"></text></g><g><title>gen8_irq_handler (1 samples, 0.07%)</title><rect x="47.9887%" y="165" width="0.0706%" height="15" fill="rgb(250,172,42)" fg:x="680" fg:w="1"/><text x="48.2387%" y="175.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (141 samples, 9.95%)</title><rect x="39.2378%" y="293" width="9.9506%" height="15" fill="rgb(209,34,43)" fg:x="556" fg:w="141"/><text x="39.4878%" y="303.50">curve25519_dal..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (16 samples, 1.13%)</title><rect x="48.0593%" y="277" width="1.1291%" height="15" fill="rgb(223,11,35)" fg:x="681" fg:w="16"/><text x="48.3093%" y="287.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (12 samples, 0.85%)</title><rect x="48.3416%" y="261" width="0.8469%" height="15" fill="rgb(251,219,26)" fg:x="685" fg:w="12"/><text x="48.5916%" y="271.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (126 samples, 8.89%)</title><rect x="50.1059%" y="277" width="8.8920%" height="15" fill="rgb(231,119,3)" fg:x="710" fg:w="126"/><text x="50.3559%" y="287.50">&lt;&amp;curve25519_..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (65 samples, 4.59%)</title><rect x="54.4107%" y="261" width="4.5872%" height="15" fill="rgb(216,97,11)" fg:x="771" fg:w="65"/><text x="54.6607%" y="271.50">&lt;&amp;cur..</text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (141 samples, 9.95%)</title><rect x="49.1884%" y="293" width="9.9506%" height="15" fill="rgb(223,59,9)" fg:x="697" fg:w="141"/><text x="49.4384%" y="303.50">curve25519_dal..</text></g><g><title>[receiver] (2 samples, 0.14%)</title><rect x="58.9979%" y="277" width="0.1411%" height="15" fill="rgb(233,93,31)" fg:x="836" fg:w="2"/><text x="59.2479%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.14%)</title><rect x="58.9979%" y="261" width="0.1411%" height="15" fill="rgb(239,81,33)" fg:x="836" fg:w="2"/><text x="59.2479%" y="271.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.99%)</title><rect x="60.0565%" y="277" width="0.9880%" height="15" fill="rgb(213,120,34)" fg:x="851" fg:w="14"/><text x="60.3065%" y="287.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (52 samples, 3.67%)</title><rect x="61.0445%" y="277" width="3.6697%" height="15" fill="rgb(243,49,53)" fg:x="865" fg:w="52"/><text x="61.2945%" y="287.50">curv..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (50 samples, 3.53%)</title><rect x="61.1856%" y="261" width="3.5286%" height="15" fill="rgb(247,216,33)" fg:x="867" fg:w="50"/><text x="61.4356%" y="271.50">&lt;&amp;c..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (26 samples, 1.83%)</title><rect x="62.8793%" y="245" width="1.8349%" height="15" fill="rgb(226,26,14)" fg:x="891" fg:w="26"/><text x="63.1293%" y="255.50">&lt;..</text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (133 samples, 9.39%)</title><rect x="64.7142%" y="277" width="9.3860%" height="15" fill="rgb(215,49,53)" fg:x="917" fg:w="133"/><text x="64.9642%" y="287.50">curve25519_da..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (133 samples, 9.39%)</title><rect x="64.7142%" y="261" width="9.3860%" height="15" fill="rgb(245,162,40)" fg:x="917" fg:w="133"/><text x="64.9642%" y="271.50">&lt;&amp;curve25519_..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (78 samples, 5.50%)</title><rect x="68.5956%" y="245" width="5.5046%" height="15" fill="rgb(229,68,17)" fg:x="972" fg:w="78"/><text x="68.8456%" y="255.50">&lt;&amp;curve..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (18 samples, 1.27%)</title><rect x="74.7354%" y="261" width="1.2703%" height="15" fill="rgb(213,182,10)" fg:x="1059" fg:w="18"/><text x="74.9854%" y="271.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (14 samples, 0.99%)</title><rect x="75.0176%" y="245" width="0.9880%" height="15" fill="rgb(245,125,30)" fg:x="1063" fg:w="14"/><text x="75.2676%" y="255.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (21 samples, 1.48%)</title><rect x="76.0056%" y="261" width="1.4820%" height="15" fill="rgb(232,202,2)" fg:x="1077" fg:w="21"/><text x="76.2556%" y="271.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (16 samples, 1.13%)</title><rect x="76.3585%" y="245" width="1.1291%" height="15" fill="rgb(237,140,51)" fg:x="1082" fg:w="16"/><text x="76.6085%" y="255.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (3 samples, 0.21%)</title><rect x="77.4876%" y="261" width="0.2117%" height="15" fill="rgb(236,157,25)" fg:x="1098" fg:w="3"/><text x="77.7376%" y="271.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square2 (40 samples, 2.82%)</title><rect x="77.6994%" y="261" width="2.8229%" height="15" fill="rgb(219,209,0)" fg:x="1101" fg:w="40"/><text x="77.9494%" y="271.50">cu..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (37 samples, 2.61%)</title><rect x="77.9111%" y="245" width="2.6112%" height="15" fill="rgb(240,116,54)" fg:x="1104" fg:w="37"/><text x="78.1611%" y="255.50">cu..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (18 samples, 1.27%)</title><rect x="79.2519%" y="229" width="1.2703%" height="15" fill="rgb(216,10,36)" fg:x="1123" fg:w="18"/><text x="79.5019%" y="239.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (224 samples, 15.81%)</title><rect x="74.1002%" y="277" width="15.8080%" height="15" fill="rgb(222,72,44)" fg:x="1050" fg:w="224"/><text x="74.3502%" y="287.50">curve25519_dalek::backen..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (133 samples, 9.39%)</title><rect x="80.5222%" y="261" width="9.3860%" height="15" fill="rgb(232,159,9)" fg:x="1141" fg:w="133"/><text x="80.7722%" y="271.50">curve25519_da..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (133 samples, 9.39%)</title><rect x="80.5222%" y="245" width="9.3860%" height="15" fill="rgb(210,39,32)" fg:x="1141" fg:w="133"/><text x="80.7722%" y="255.50">curve25519_da..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (65 samples, 4.59%)</title><rect x="85.3211%" y="229" width="4.5872%" height="15" fill="rgb(216,194,45)" fg:x="1209" fg:w="65"/><text x="85.5711%" y="239.50">curve..</text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (441 samples, 31.12%)</title><rect x="59.1390%" y="293" width="31.1221%" height="15" fill="rgb(218,18,35)" fg:x="838" fg:w="441"/><text x="59.3890%" y="303.50">curve25519_dalek::edwards::EdwardsPoint::mul_by_po..</text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::to_projective (5 samples, 0.35%)</title><rect x="89.9083%" y="277" width="0.3529%" height="15" fill="rgb(207,83,51)" fg:x="1274" fg:w="5"/><text x="90.1583%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint as core::ops::arith::Neg&gt;::neg (13 samples, 0.92%)</title><rect x="90.8257%" y="261" width="0.9174%" height="15" fill="rgb(225,63,43)" fg:x="1287" fg:w="13"/><text x="91.0757%" y="271.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Neg&gt;::neg (7 samples, 0.49%)</title><rect x="91.2491%" y="245" width="0.4940%" height="15" fill="rgb(207,57,36)" fg:x="1293" fg:w="7"/><text x="91.4991%" y="255.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::negate (5 samples, 0.35%)</title><rect x="91.3903%" y="229" width="0.3529%" height="15" fill="rgb(216,99,33)" fg:x="1295" fg:w="5"/><text x="91.6403%" y="239.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (3 samples, 0.21%)</title><rect x="91.5314%" y="213" width="0.2117%" height="15" fill="rgb(225,42,16)" fg:x="1297" fg:w="3"/><text x="91.7814%" y="223.50"></text></g><g><title>&lt;T as subtle::ConditionallyNegatable&gt;::conditional_negate (23 samples, 1.62%)</title><rect x="90.7551%" y="277" width="1.6231%" height="15" fill="rgb(220,201,45)" fg:x="1286" fg:w="23"/><text x="91.0051%" y="287.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (9 samples, 0.64%)</title><rect x="91.7431%" y="261" width="0.6351%" height="15" fill="rgb(225,33,4)" fg:x="1300" fg:w="9"/><text x="91.9931%" y="271.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (9 samples, 0.64%)</title><rect x="91.7431%" y="245" width="0.6351%" height="15" fill="rgb(224,33,50)" fg:x="1300" fg:w="9"/><text x="91.9931%" y="255.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (7 samples, 0.49%)</title><rect x="91.8843%" y="229" width="0.4940%" height="15" fill="rgb(246,198,51)" fg:x="1302" fg:w="7"/><text x="92.1343%" y="239.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint as core::default::Default&gt;::default (2 samples, 0.14%)</title><rect x="92.3783%" y="277" width="0.1411%" height="15" fill="rgb(205,22,4)" fg:x="1309" fg:w="2"/><text x="92.6283%" y="287.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint as curve25519_dalek::traits::Identity&gt;::identity (2 samples, 0.14%)</title><rect x="92.3783%" y="261" width="0.1411%" height="15" fill="rgb(206,3,8)" fg:x="1309" fg:w="2"/><text x="92.6283%" y="271.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::one (2 samples, 0.14%)</title><rect x="92.3783%" y="245" width="0.1411%" height="15" fill="rgb(251,23,15)" fg:x="1309" fg:w="2"/><text x="92.6283%" y="255.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (86 samples, 6.07%)</title><rect x="92.5194%" y="277" width="6.0692%" height="15" fill="rgb(252,88,28)" fg:x="1311" fg:w="86"/><text x="92.7694%" y="287.50">&lt;curve25..</text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (86 samples, 6.07%)</title><rect x="92.5194%" y="261" width="6.0692%" height="15" fill="rgb(212,127,14)" fg:x="1311" fg:w="86"/><text x="92.7694%" y="271.50">&lt;curve25..</text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (76 samples, 5.36%)</title><rect x="93.2251%" y="245" width="5.3634%" height="15" fill="rgb(247,145,37)" fg:x="1321" fg:w="76"/><text x="93.4751%" y="255.50">&lt;u64 as..</text></g><g><title>&lt;curve25519_dalek::ristretto::RistrettoPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (871 samples, 61.47%)</title><rect x="37.8970%" y="341" width="61.4679%" height="15" fill="rgb(209,117,53)" fg:x="537" fg:w="871"/><text x="38.1470%" y="351.50">&lt;curve25519_dalek::ristretto::RistrettoPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar..</text></g><g><title>&lt;curve25519_dalek::edwards::EdwardsPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (871 samples, 61.47%)</title><rect x="37.8970%" y="325" width="61.4679%" height="15" fill="rgb(212,90,42)" fg:x="537" fg:w="871"/><text x="38.1470%" y="335.50">&lt;curve25519_dalek::edwards::EdwardsPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul</text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (871 samples, 61.47%)</title><rect x="37.8970%" y="309" width="61.4679%" height="15" fill="rgb(218,164,37)" fg:x="537" fg:w="871"/><text x="38.1470%" y="319.50">&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::Multiscala..</text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (129 samples, 9.10%)</title><rect x="90.2611%" y="293" width="9.1037%" height="15" fill="rgb(246,65,34)" fg:x="1279" fg:w="129"/><text x="90.5111%" y="303.50">curve25519_da..</text></g><g><title>&lt;u16 as subtle::ConstantTimeEq&gt;::ct_eq (11 samples, 0.78%)</title><rect x="98.5886%" y="277" width="0.7763%" height="15" fill="rgb(231,100,33)" fg:x="1397" fg:w="11"/><text x="98.8386%" y="287.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.49%)</title><rect x="98.8709%" y="261" width="0.4940%" height="15" fill="rgb(228,126,14)" fg:x="1401" fg:w="7"/><text x="99.1209%" y="271.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (7 samples, 0.49%)</title><rect x="98.8709%" y="245" width="0.4940%" height="15" fill="rgb(215,173,21)" fg:x="1401" fg:w="7"/><text x="99.1209%" y="255.50"></text></g><g><title>subtle::black_box (7 samples, 0.49%)</title><rect x="98.8709%" y="229" width="0.4940%" height="15" fill="rgb(210,6,40)" fg:x="1401" fg:w="7"/><text x="99.1209%" y="239.50"></text></g><g><title>core::ptr::read_volatile (5 samples, 0.35%)</title><rect x="99.0120%" y="213" width="0.3529%" height="15" fill="rgb(212,48,18)" fg:x="1403" fg:w="5"/><text x="99.2620%" y="223.50"></text></g><g><title>poksho::statement::Statement::homomorphism_with_subtraction (872 samples, 61.54%)</title><rect x="37.8970%" y="357" width="61.5385%" height="15" fill="rgb(230,214,11)" fg:x="537" fg:w="872"/><text x="38.1470%" y="367.50">poksho::statement::Statement::homomorphism_with_subtraction</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.07%)</title><rect x="99.3649%" y="341" width="0.0706%" height="15" fill="rgb(254,105,39)" fg:x="1408" fg:w="1"/><text x="99.6149%" y="351.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="99.3649%" y="325" width="0.0706%" height="15" fill="rgb(245,158,5)" fg:x="1408" fg:w="1"/><text x="99.6149%" y="335.50"></text></g><g><title>poksho::statement::Statement::sort_points (1 samples, 0.07%)</title><rect x="99.4354%" y="357" width="0.0706%" height="15" fill="rgb(249,208,11)" fg:x="1409" fg:w="1"/><text x="99.6854%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.07%)</title><rect x="99.4354%" y="341" width="0.0706%" height="15" fill="rgb(210,39,28)" fg:x="1409" fg:w="1"/><text x="99.6854%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="99.4354%" y="325" width="0.0706%" height="15" fill="rgb(211,56,53)" fg:x="1409" fg:w="1"/><text x="99.6854%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="99.4354%" y="309" width="0.0706%" height="15" fill="rgb(226,201,30)" fg:x="1409" fg:w="1"/><text x="99.6854%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="99.4354%" y="293" width="0.0706%" height="15" fill="rgb(239,101,34)" fg:x="1409" fg:w="1"/><text x="99.6854%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="99.4354%" y="277" width="0.0706%" height="15" fill="rgb(226,209,5)" fg:x="1409" fg:w="1"/><text x="99.6854%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="99.4354%" y="261" width="0.0706%" height="15" fill="rgb(250,105,47)" fg:x="1409" fg:w="1"/><text x="99.6854%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="99.4354%" y="245" width="0.0706%" height="15" fill="rgb(230,72,3)" fg:x="1409" fg:w="1"/><text x="99.6854%" y="255.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.07%)</title><rect x="99.4354%" y="229" width="0.0706%" height="15" fill="rgb(232,218,39)" fg:x="1409" fg:w="1"/><text x="99.6854%" y="239.50"></text></g><g><title>_int_realloc (1 samples, 0.07%)</title><rect x="99.4354%" y="213" width="0.0706%" height="15" fill="rgb(248,166,6)" fg:x="1409" fg:w="1"/><text x="99.6854%" y="223.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.07%)</title><rect x="99.5060%" y="293" width="0.0706%" height="15" fill="rgb(247,89,20)" fg:x="1410" fg:w="1"/><text x="99.7560%" y="303.50"></text></g><g><title>__libc_start_main (1,233 samples, 87.01%)</title><rect x="12.7029%" y="661" width="87.0148%" height="15" fill="rgb(248,130,54)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="671.50">__libc_start_main</text></g><g><title>main (1,233 samples, 87.01%)</title><rect x="12.7029%" y="645" width="87.0148%" height="15" fill="rgb(234,196,4)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="655.50">main</text></g><g><title>std::rt::lang_start_internal (1,233 samples, 87.01%)</title><rect x="12.7029%" y="629" width="87.0148%" height="15" fill="rgb(250,143,31)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="639.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,233 samples, 87.01%)</title><rect x="12.7029%" y="613" width="87.0148%" height="15" fill="rgb(211,110,34)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="623.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,233 samples, 87.01%)</title><rect x="12.7029%" y="597" width="87.0148%" height="15" fill="rgb(215,124,48)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="607.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,233 samples, 87.01%)</title><rect x="12.7029%" y="581" width="87.0148%" height="15" fill="rgb(216,46,13)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="591.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,233 samples, 87.01%)</title><rect x="12.7029%" y="565" width="87.0148%" height="15" fill="rgb(205,184,25)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="575.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,233 samples, 87.01%)</title><rect x="12.7029%" y="549" width="87.0148%" height="15" fill="rgb(228,1,10)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="559.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,233 samples, 87.01%)</title><rect x="12.7029%" y="533" width="87.0148%" height="15" fill="rgb(213,116,27)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="543.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,233 samples, 87.01%)</title><rect x="12.7029%" y="517" width="87.0148%" height="15" fill="rgb(241,95,50)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="527.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,233 samples, 87.01%)</title><rect x="12.7029%" y="501" width="87.0148%" height="15" fill="rgb(238,48,32)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="511.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,233 samples, 87.01%)</title><rect x="12.7029%" y="485" width="87.0148%" height="15" fill="rgb(235,113,49)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="495.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,233 samples, 87.01%)</title><rect x="12.7029%" y="469" width="87.0148%" height="15" fill="rgb(205,127,43)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="479.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (1,233 samples, 87.01%)</title><rect x="12.7029%" y="453" width="87.0148%" height="15" fill="rgb(250,162,2)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="463.50">core::ops::function::FnOnce::call_once</text></g><g><title>receiver::main (1,233 samples, 87.01%)</title><rect x="12.7029%" y="437" width="87.0148%" height="15" fill="rgb(220,13,41)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="447.50">receiver::main</text></g><g><title>receiver::verify_message (1,233 samples, 87.01%)</title><rect x="12.7029%" y="421" width="87.0148%" height="15" fill="rgb(249,221,25)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="431.50">receiver::verify_message</text></g><g><title>hecate::receiver::check_message (1,233 samples, 87.01%)</title><rect x="12.7029%" y="405" width="87.0148%" height="15" fill="rgb(215,208,19)" fg:x="180" fg:w="1233"/><text x="12.9529%" y="415.50">hecate::receiver::check_message</text></g><g><title>poksho::sign::verify_signature (1,196 samples, 84.40%)</title><rect x="15.3140%" y="389" width="84.4037%" height="15" fill="rgb(236,175,2)" fg:x="217" fg:w="1196"/><text x="15.5640%" y="399.50">poksho::sign::verify_signature</text></g><g><title>poksho::statement::Statement::verify_proof (1,194 samples, 84.26%)</title><rect x="15.4552%" y="373" width="84.2625%" height="15" fill="rgb(241,52,2)" fg:x="219" fg:w="1194"/><text x="15.7052%" y="383.50">poksho::statement::Statement::verify_proof</text></g><g><title>poksho::statement::Statement::to_bytes (3 samples, 0.21%)</title><rect x="99.5060%" y="357" width="0.2117%" height="15" fill="rgb(248,140,14)" fg:x="1410" fg:w="3"/><text x="99.7560%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.21%)</title><rect x="99.5060%" y="341" width="0.2117%" height="15" fill="rgb(253,22,42)" fg:x="1410" fg:w="3"/><text x="99.7560%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.21%)</title><rect x="99.5060%" y="325" width="0.2117%" height="15" fill="rgb(234,61,47)" fg:x="1410" fg:w="3"/><text x="99.7560%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.21%)</title><rect x="99.5060%" y="309" width="0.2117%" height="15" fill="rgb(208,226,15)" fg:x="1410" fg:w="3"/><text x="99.7560%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.14%)</title><rect x="99.5766%" y="293" width="0.1411%" height="15" fill="rgb(217,221,4)" fg:x="1411" fg:w="2"/><text x="99.8266%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="99.6471%" y="277" width="0.0706%" height="15" fill="rgb(212,174,34)" fg:x="1412" fg:w="1"/><text x="99.8971%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="99.6471%" y="261" width="0.0706%" height="15" fill="rgb(253,83,4)" fg:x="1412" fg:w="1"/><text x="99.8971%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="99.6471%" y="245" width="0.0706%" height="15" fill="rgb(250,195,49)" fg:x="1412" fg:w="1"/><text x="99.8971%" y="255.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.07%)</title><rect x="99.6471%" y="229" width="0.0706%" height="15" fill="rgb(241,192,25)" fg:x="1412" fg:w="1"/><text x="99.8971%" y="239.50"></text></g><g><title>_start (1,234 samples, 87.09%)</title><rect x="12.7029%" y="677" width="87.0854%" height="15" fill="rgb(208,124,10)" fg:x="180" fg:w="1234"/><text x="12.9529%" y="687.50">_start</text></g><g><title>_dl_start (1 samples, 0.07%)</title><rect x="99.7177%" y="661" width="0.0706%" height="15" fill="rgb(222,33,0)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="671.50"></text></g><g><title>_dl_start_final (1 samples, 0.07%)</title><rect x="99.7177%" y="645" width="0.0706%" height="15" fill="rgb(234,209,28)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="655.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.07%)</title><rect x="99.7177%" y="629" width="0.0706%" height="15" fill="rgb(224,11,23)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="639.50"></text></g><g><title>dl_main (1 samples, 0.07%)</title><rect x="99.7177%" y="613" width="0.0706%" height="15" fill="rgb(232,99,1)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="623.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.07%)</title><rect x="99.7177%" y="597" width="0.0706%" height="15" fill="rgb(237,95,45)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="607.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.07%)</title><rect x="99.7177%" y="581" width="0.0706%" height="15" fill="rgb(208,109,11)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="591.50"></text></g><g><title>openaux (1 samples, 0.07%)</title><rect x="99.7177%" y="565" width="0.0706%" height="15" fill="rgb(216,190,48)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="575.50"></text></g><g><title>_dl_map_object (1 samples, 0.07%)</title><rect x="99.7177%" y="549" width="0.0706%" height="15" fill="rgb(251,171,36)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="559.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.07%)</title><rect x="99.7177%" y="533" width="0.0706%" height="15" fill="rgb(230,62,22)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="543.50"></text></g><g><title>elf_get_dynamic_info (1 samples, 0.07%)</title><rect x="99.7177%" y="517" width="0.0706%" height="15" fill="rgb(225,114,35)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="527.50"></text></g><g><title>page_fault (1 samples, 0.07%)</title><rect x="99.7177%" y="501" width="0.0706%" height="15" fill="rgb(215,118,42)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="511.50"></text></g><g><title>do_page_fault (1 samples, 0.07%)</title><rect x="99.7177%" y="485" width="0.0706%" height="15" fill="rgb(243,119,21)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="495.50"></text></g><g><title>__do_page_fault (1 samples, 0.07%)</title><rect x="99.7177%" y="469" width="0.0706%" height="15" fill="rgb(252,177,53)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="479.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.07%)</title><rect x="99.7177%" y="453" width="0.0706%" height="15" fill="rgb(237,209,29)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="463.50"></text></g><g><title>handle_mm_fault (1 samples, 0.07%)</title><rect x="99.7177%" y="437" width="0.0706%" height="15" fill="rgb(212,65,23)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="447.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.07%)</title><rect x="99.7177%" y="421" width="0.0706%" height="15" fill="rgb(230,222,46)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="431.50"></text></g><g><title>do_fault (1 samples, 0.07%)</title><rect x="99.7177%" y="405" width="0.0706%" height="15" fill="rgb(215,135,32)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="415.50"></text></g><g><title>filemap_map_pages (1 samples, 0.07%)</title><rect x="99.7177%" y="389" width="0.0706%" height="15" fill="rgb(246,101,22)" fg:x="1413" fg:w="1"/><text x="99.9677%" y="399.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (2 samples, 0.14%)</title><rect x="99.7883%" y="677" width="0.1411%" height="15" fill="rgb(206,107,13)" fg:x="1414" fg:w="2"/><text x="100.0383%" y="687.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (1 samples, 0.07%)</title><rect x="99.8589%" y="661" width="0.0706%" height="15" fill="rgb(250,100,44)" fg:x="1415" fg:w="1"/><text x="100.1089%" y="671.50"></text></g><g><title>all (1,417 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(231,147,38)" fg:x="0" fg:w="1417"/><text x="0.2500%" y="719.50"></text></g><g><title>receiver (1,412 samples, 99.65%)</title><rect x="0.3529%" y="693" width="99.6471%" height="15" fill="rgb(229,8,40)" fg:x="5" fg:w="1412"/><text x="0.6029%" y="703.50">receiver</text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="99.9294%" y="677" width="0.0706%" height="15" fill="rgb(221,135,30)" fg:x="1416" fg:w="1"/><text x="100.1794%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.07%)</title><rect x="99.9294%" y="661" width="0.0706%" height="15" fill="rgb(249,193,18)" fg:x="1416" fg:w="1"/><text x="100.1794%" y="671.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.07%)</title><rect x="99.9294%" y="645" width="0.0706%" height="15" fill="rgb(209,133,39)" fg:x="1416" fg:w="1"/><text x="100.1794%" y="655.50"></text></g><g><title>__do_execve_file.isra.0 (1 samples, 0.07%)</title><rect x="99.9294%" y="629" width="0.0706%" height="15" fill="rgb(232,100,14)" fg:x="1416" fg:w="1"/><text x="100.1794%" y="639.50"></text></g><g><title>search_binary_handler (1 samples, 0.07%)</title><rect x="99.9294%" y="613" width="0.0706%" height="15" fill="rgb(224,185,1)" fg:x="1416" fg:w="1"/><text x="100.1794%" y="623.50"></text></g><g><title>load_elf_binary (1 samples, 0.07%)</title><rect x="99.9294%" y="597" width="0.0706%" height="15" fill="rgb(223,139,8)" fg:x="1416" fg:w="1"/><text x="100.1794%" y="607.50"></text></g><g><title>setup_arg_pages (1 samples, 0.07%)</title><rect x="99.9294%" y="581" width="0.0706%" height="15" fill="rgb(232,213,38)" fg:x="1416" fg:w="1"/><text x="100.1794%" y="591.50"></text></g><g><title>shift_arg_pages (1 samples, 0.07%)</title><rect x="99.9294%" y="565" width="0.0706%" height="15" fill="rgb(207,94,22)" fg:x="1416" fg:w="1"/><text x="100.1794%" y="575.50"></text></g><g><title>__vma_adjust (1 samples, 0.07%)</title><rect x="99.9294%" y="549" width="0.0706%" height="15" fill="rgb(219,183,54)" fg:x="1416" fg:w="1"/><text x="100.1794%" y="559.50"></text></g></svg></svg>