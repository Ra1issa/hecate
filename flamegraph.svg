<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="646" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="629.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="629.00"> </text><svg id="frames" x="10" width="1180" total_samples="759"><g><title>perf (5 samples, 0.66%)</title><rect x="0.0000%" y="581" width="0.6588%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.66%)</title><rect x="0.0000%" y="565" width="0.6588%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="575.50"></text></g><g><title>do_syscall_64 (5 samples, 0.66%)</title><rect x="0.0000%" y="549" width="0.6588%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="559.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.66%)</title><rect x="0.0000%" y="533" width="0.6588%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="543.50"></text></g><g><title>__do_execve_file.isra.0 (5 samples, 0.66%)</title><rect x="0.0000%" y="517" width="0.6588%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="527.50"></text></g><g><title>search_binary_handler (5 samples, 0.66%)</title><rect x="0.0000%" y="501" width="0.6588%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="511.50"></text></g><g><title>load_elf_binary (5 samples, 0.66%)</title><rect x="0.0000%" y="485" width="0.6588%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="495.50"></text></g><g><title>setup_new_exec (5 samples, 0.66%)</title><rect x="0.0000%" y="469" width="0.6588%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="5"/><text x="0.2500%" y="479.50"></text></g><g><title>perf_event_exec (5 samples, 0.66%)</title><rect x="0.0000%" y="453" width="0.6588%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="463.50"></text></g><g><title>ctx_resched (5 samples, 0.66%)</title><rect x="0.0000%" y="437" width="0.6588%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="5"/><text x="0.2500%" y="447.50"></text></g><g><title>perf_pmu_enable.part.0 (5 samples, 0.66%)</title><rect x="0.0000%" y="421" width="0.6588%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="5"/><text x="0.2500%" y="431.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.66%)</title><rect x="0.0000%" y="405" width="0.6588%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="5"/><text x="0.2500%" y="415.50"></text></g><g><title>intel_tfa_pmu_enable_all (5 samples, 0.66%)</title><rect x="0.0000%" y="389" width="0.6588%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="5"/><text x="0.2500%" y="399.50"></text></g><g><title>native_write_msr (5 samples, 0.66%)</title><rect x="0.0000%" y="373" width="0.6588%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="5"/><text x="0.2500%" y="383.50"></text></g><g><title>[[heap]] (1 samples, 0.13%)</title><rect x="0.6588%" y="565" width="0.1318%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="0.9088%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="0.6588%" y="549" width="0.1318%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="0.9088%" y="559.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.26%)</title><rect x="0.7905%" y="549" width="0.2635%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="2"/><text x="1.0405%" y="559.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (2 samples, 0.26%)</title><rect x="1.3175%" y="533" width="0.2635%" height="15" fill="rgb(210,31,41)" fg:x="10" fg:w="2"/><text x="1.5675%" y="543.50"></text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (5 samples, 0.66%)</title><rect x="1.0540%" y="549" width="0.6588%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="5"/><text x="1.3040%" y="559.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::to_extended (1 samples, 0.13%)</title><rect x="1.5810%" y="533" width="0.1318%" height="15" fill="rgb(226,26,5)" fg:x="12" fg:w="1"/><text x="1.8310%" y="543.50"></text></g><g><title>hecate::receiver::check_message (1 samples, 0.13%)</title><rect x="1.7128%" y="549" width="0.1318%" height="15" fill="rgb(249,33,26)" fg:x="13" fg:w="1"/><text x="1.9628%" y="559.50"></text></g><g><title>[[stack]] (9 samples, 1.19%)</title><rect x="0.7905%" y="565" width="1.1858%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="9"/><text x="1.0405%" y="575.50"></text></g><g><title>sha2::sha512::Engine512::finish (1 samples, 0.13%)</title><rect x="1.8445%" y="549" width="0.1318%" height="15" fill="rgb(221,5,38)" fg:x="14" fg:w="1"/><text x="2.0945%" y="559.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len128_padding_be (1 samples, 0.13%)</title><rect x="1.8445%" y="533" width="0.1318%" height="15" fill="rgb(247,18,42)" fg:x="14" fg:w="1"/><text x="2.0945%" y="543.50"></text></g><g><title>sha2::sha512::Engine512::finish::{{closure}} (1 samples, 0.13%)</title><rect x="1.8445%" y="517" width="0.1318%" height="15" fill="rgb(241,131,45)" fg:x="14" fg:w="1"/><text x="2.0945%" y="527.50"></text></g><g><title>sha2::sha512::compress512 (1 samples, 0.13%)</title><rect x="1.8445%" y="501" width="0.1318%" height="15" fill="rgb(249,31,29)" fg:x="14" fg:w="1"/><text x="2.0945%" y="511.50"></text></g><g><title>sha2::sha512::x86::compress (1 samples, 0.13%)</title><rect x="1.8445%" y="485" width="0.1318%" height="15" fill="rgb(225,111,53)" fg:x="14" fg:w="1"/><text x="2.0945%" y="495.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.26%)</title><rect x="1.9763%" y="549" width="0.2635%" height="15" fill="rgb(238,160,17)" fg:x="15" fg:w="2"/><text x="2.2263%" y="559.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (3 samples, 0.40%)</title><rect x="2.2398%" y="549" width="0.3953%" height="15" fill="rgb(214,148,48)" fg:x="17" fg:w="3"/><text x="2.4898%" y="559.50"></text></g><g><title>[receiver] (12 samples, 1.58%)</title><rect x="1.9763%" y="565" width="1.5810%" height="15" fill="rgb(232,36,49)" fg:x="15" fg:w="12"/><text x="2.2263%" y="575.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (7 samples, 0.92%)</title><rect x="2.6350%" y="549" width="0.9223%" height="15" fill="rgb(209,103,24)" fg:x="20" fg:w="7"/><text x="2.8850%" y="559.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (18 samples, 2.37%)</title><rect x="3.5573%" y="549" width="2.3715%" height="15" fill="rgb(229,88,8)" fg:x="27" fg:w="18"/><text x="3.8073%" y="559.50">&lt;&amp;..</text></g><g><title>[receiver] (1 samples, 0.13%)</title><rect x="5.9289%" y="549" width="0.1318%" height="15" fill="rgb(213,181,19)" fg:x="45" fg:w="1"/><text x="6.1789%" y="559.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (1 samples, 0.13%)</title><rect x="5.9289%" y="533" width="0.1318%" height="15" fill="rgb(254,191,54)" fg:x="45" fg:w="1"/><text x="6.1789%" y="543.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square2 (1 samples, 0.13%)</title><rect x="5.9289%" y="517" width="0.1318%" height="15" fill="rgb(241,83,37)" fg:x="45" fg:w="1"/><text x="6.1789%" y="527.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (14 samples, 1.84%)</title><rect x="6.0606%" y="229" width="1.8445%" height="15" fill="rgb(233,36,39)" fg:x="46" fg:w="14"/><text x="6.3106%" y="239.50">c..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (14 samples, 1.84%)</title><rect x="6.0606%" y="213" width="1.8445%" height="15" fill="rgb(226,3,54)" fg:x="46" fg:w="14"/><text x="6.3106%" y="223.50">&lt;..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (11 samples, 1.45%)</title><rect x="6.4559%" y="197" width="1.4493%" height="15" fill="rgb(245,192,40)" fg:x="49" fg:w="11"/><text x="6.7059%" y="207.50"></text></g><g><title>__libc_start_main (19 samples, 2.50%)</title><rect x="6.0606%" y="549" width="2.5033%" height="15" fill="rgb(238,167,29)" fg:x="46" fg:w="19"/><text x="6.3106%" y="559.50">__..</text></g><g><title>main (19 samples, 2.50%)</title><rect x="6.0606%" y="533" width="2.5033%" height="15" fill="rgb(232,182,51)" fg:x="46" fg:w="19"/><text x="6.3106%" y="543.50">ma..</text></g><g><title>std::rt::lang_start_internal (19 samples, 2.50%)</title><rect x="6.0606%" y="517" width="2.5033%" height="15" fill="rgb(231,60,39)" fg:x="46" fg:w="19"/><text x="6.3106%" y="527.50">st..</text></g><g><title>std::panic::catch_unwind (19 samples, 2.50%)</title><rect x="6.0606%" y="501" width="2.5033%" height="15" fill="rgb(208,69,12)" fg:x="46" fg:w="19"/><text x="6.3106%" y="511.50">st..</text></g><g><title>std::panicking::try (19 samples, 2.50%)</title><rect x="6.0606%" y="485" width="2.5033%" height="15" fill="rgb(235,93,37)" fg:x="46" fg:w="19"/><text x="6.3106%" y="495.50">st..</text></g><g><title>std::panicking::try::do_call (19 samples, 2.50%)</title><rect x="6.0606%" y="469" width="2.5033%" height="15" fill="rgb(213,116,39)" fg:x="46" fg:w="19"/><text x="6.3106%" y="479.50">st..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (19 samples, 2.50%)</title><rect x="6.0606%" y="453" width="2.5033%" height="15" fill="rgb(222,207,29)" fg:x="46" fg:w="19"/><text x="6.3106%" y="463.50">st..</text></g><g><title>std::panic::catch_unwind (19 samples, 2.50%)</title><rect x="6.0606%" y="437" width="2.5033%" height="15" fill="rgb(206,96,30)" fg:x="46" fg:w="19"/><text x="6.3106%" y="447.50">st..</text></g><g><title>std::panicking::try (19 samples, 2.50%)</title><rect x="6.0606%" y="421" width="2.5033%" height="15" fill="rgb(218,138,4)" fg:x="46" fg:w="19"/><text x="6.3106%" y="431.50">st..</text></g><g><title>std::panicking::try::do_call (19 samples, 2.50%)</title><rect x="6.0606%" y="405" width="2.5033%" height="15" fill="rgb(250,191,14)" fg:x="46" fg:w="19"/><text x="6.3106%" y="415.50">st..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (19 samples, 2.50%)</title><rect x="6.0606%" y="389" width="2.5033%" height="15" fill="rgb(239,60,40)" fg:x="46" fg:w="19"/><text x="6.3106%" y="399.50">co..</text></g><g><title>std::rt::lang_start::{{closure}} (19 samples, 2.50%)</title><rect x="6.0606%" y="373" width="2.5033%" height="15" fill="rgb(206,27,48)" fg:x="46" fg:w="19"/><text x="6.3106%" y="383.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 2.50%)</title><rect x="6.0606%" y="357" width="2.5033%" height="15" fill="rgb(225,35,8)" fg:x="46" fg:w="19"/><text x="6.3106%" y="367.50">st..</text></g><g><title>core::ops::function::FnOnce::call_once (19 samples, 2.50%)</title><rect x="6.0606%" y="341" width="2.5033%" height="15" fill="rgb(250,213,24)" fg:x="46" fg:w="19"/><text x="6.3106%" y="351.50">co..</text></g><g><title>receiver::main (19 samples, 2.50%)</title><rect x="6.0606%" y="325" width="2.5033%" height="15" fill="rgb(247,123,22)" fg:x="46" fg:w="19"/><text x="6.3106%" y="335.50">re..</text></g><g><title>receiver::verify_message (19 samples, 2.50%)</title><rect x="6.0606%" y="309" width="2.5033%" height="15" fill="rgb(231,138,38)" fg:x="46" fg:w="19"/><text x="6.3106%" y="319.50">re..</text></g><g><title>hecate::receiver::check_message (19 samples, 2.50%)</title><rect x="6.0606%" y="293" width="2.5033%" height="15" fill="rgb(231,145,46)" fg:x="46" fg:w="19"/><text x="6.3106%" y="303.50">he..</text></g><g><title>&lt;ed25519_dalek::public::PublicKey as signature::verifier::Verifier&lt;ed25519::Signature&gt;&gt;::verify (19 samples, 2.50%)</title><rect x="6.0606%" y="277" width="2.5033%" height="15" fill="rgb(251,118,11)" fg:x="46" fg:w="19"/><text x="6.3106%" y="287.50">&lt;e..</text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (19 samples, 2.50%)</title><rect x="6.0606%" y="261" width="2.5033%" height="15" fill="rgb(217,147,25)" fg:x="46" fg:w="19"/><text x="6.3106%" y="271.50">cu..</text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (19 samples, 2.50%)</title><rect x="6.0606%" y="245" width="2.5033%" height="15" fill="rgb(247,81,37)" fg:x="46" fg:w="19"/><text x="6.3106%" y="255.50">cu..</text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (5 samples, 0.66%)</title><rect x="7.9051%" y="229" width="0.6588%" height="15" fill="rgb(209,12,38)" fg:x="60" fg:w="5"/><text x="8.1551%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (5 samples, 0.66%)</title><rect x="7.9051%" y="213" width="0.6588%" height="15" fill="rgb(227,1,9)" fg:x="60" fg:w="5"/><text x="8.1551%" y="223.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (3 samples, 0.40%)</title><rect x="8.1686%" y="197" width="0.3953%" height="15" fill="rgb(248,47,43)" fg:x="62" fg:w="3"/><text x="8.4186%" y="207.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (1 samples, 0.13%)</title><rect x="8.5639%" y="549" width="0.1318%" height="15" fill="rgb(221,10,30)" fg:x="65" fg:w="1"/><text x="8.8139%" y="559.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (5 samples, 0.66%)</title><rect x="8.6957%" y="549" width="0.6588%" height="15" fill="rgb(210,229,1)" fg:x="66" fg:w="5"/><text x="8.9457%" y="559.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (14 samples, 1.84%)</title><rect x="9.3544%" y="549" width="1.8445%" height="15" fill="rgb(222,148,37)" fg:x="71" fg:w="14"/><text x="9.6044%" y="559.50">c..</text></g><g><title>main (24 samples, 3.16%)</title><rect x="11.1989%" y="549" width="3.1621%" height="15" fill="rgb(234,67,33)" fg:x="85" fg:w="24"/><text x="11.4489%" y="559.50">main</text></g><g><title>std::rt::lang_start_internal (24 samples, 3.16%)</title><rect x="11.1989%" y="533" width="3.1621%" height="15" fill="rgb(247,98,35)" fg:x="85" fg:w="24"/><text x="11.4489%" y="543.50">std..</text></g><g><title>std::panic::catch_unwind (24 samples, 3.16%)</title><rect x="11.1989%" y="517" width="3.1621%" height="15" fill="rgb(247,138,52)" fg:x="85" fg:w="24"/><text x="11.4489%" y="527.50">std..</text></g><g><title>std::panicking::try (24 samples, 3.16%)</title><rect x="11.1989%" y="501" width="3.1621%" height="15" fill="rgb(213,79,30)" fg:x="85" fg:w="24"/><text x="11.4489%" y="511.50">std..</text></g><g><title>std::panicking::try::do_call (24 samples, 3.16%)</title><rect x="11.1989%" y="485" width="3.1621%" height="15" fill="rgb(246,177,23)" fg:x="85" fg:w="24"/><text x="11.4489%" y="495.50">std..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (24 samples, 3.16%)</title><rect x="11.1989%" y="469" width="3.1621%" height="15" fill="rgb(230,62,27)" fg:x="85" fg:w="24"/><text x="11.4489%" y="479.50">std..</text></g><g><title>std::panic::catch_unwind (24 samples, 3.16%)</title><rect x="11.1989%" y="453" width="3.1621%" height="15" fill="rgb(216,154,8)" fg:x="85" fg:w="24"/><text x="11.4489%" y="463.50">std..</text></g><g><title>std::panicking::try (24 samples, 3.16%)</title><rect x="11.1989%" y="437" width="3.1621%" height="15" fill="rgb(244,35,45)" fg:x="85" fg:w="24"/><text x="11.4489%" y="447.50">std..</text></g><g><title>std::panicking::try::do_call (24 samples, 3.16%)</title><rect x="11.1989%" y="421" width="3.1621%" height="15" fill="rgb(251,115,12)" fg:x="85" fg:w="24"/><text x="11.4489%" y="431.50">std..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (24 samples, 3.16%)</title><rect x="11.1989%" y="405" width="3.1621%" height="15" fill="rgb(240,54,50)" fg:x="85" fg:w="24"/><text x="11.4489%" y="415.50">cor..</text></g><g><title>std::rt::lang_start::{{closure}} (24 samples, 3.16%)</title><rect x="11.1989%" y="389" width="3.1621%" height="15" fill="rgb(233,84,52)" fg:x="85" fg:w="24"/><text x="11.4489%" y="399.50">std..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (24 samples, 3.16%)</title><rect x="11.1989%" y="373" width="3.1621%" height="15" fill="rgb(207,117,47)" fg:x="85" fg:w="24"/><text x="11.4489%" y="383.50">std..</text></g><g><title>core::ops::function::FnOnce::call_once (24 samples, 3.16%)</title><rect x="11.1989%" y="357" width="3.1621%" height="15" fill="rgb(249,43,39)" fg:x="85" fg:w="24"/><text x="11.4489%" y="367.50">cor..</text></g><g><title>receiver::main (24 samples, 3.16%)</title><rect x="11.1989%" y="341" width="3.1621%" height="15" fill="rgb(209,38,44)" fg:x="85" fg:w="24"/><text x="11.4489%" y="351.50">rec..</text></g><g><title>receiver::verify_message (24 samples, 3.16%)</title><rect x="11.1989%" y="325" width="3.1621%" height="15" fill="rgb(236,212,23)" fg:x="85" fg:w="24"/><text x="11.4489%" y="335.50">rec..</text></g><g><title>hecate::receiver::check_message (24 samples, 3.16%)</title><rect x="11.1989%" y="309" width="3.1621%" height="15" fill="rgb(242,79,21)" fg:x="85" fg:w="24"/><text x="11.4489%" y="319.50">hec..</text></g><g><title>&lt;ed25519_dalek::public::PublicKey as signature::verifier::Verifier&lt;ed25519::Signature&gt;&gt;::verify (24 samples, 3.16%)</title><rect x="11.1989%" y="293" width="3.1621%" height="15" fill="rgb(211,96,35)" fg:x="85" fg:w="24"/><text x="11.4489%" y="303.50">&lt;ed..</text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (24 samples, 3.16%)</title><rect x="11.1989%" y="277" width="3.1621%" height="15" fill="rgb(253,215,40)" fg:x="85" fg:w="24"/><text x="11.4489%" y="287.50">cur..</text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (24 samples, 3.16%)</title><rect x="11.1989%" y="261" width="3.1621%" height="15" fill="rgb(211,81,21)" fg:x="85" fg:w="24"/><text x="11.4489%" y="271.50">cur..</text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (24 samples, 3.16%)</title><rect x="11.1989%" y="245" width="3.1621%" height="15" fill="rgb(208,190,38)" fg:x="85" fg:w="24"/><text x="11.4489%" y="255.50">cur..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (24 samples, 3.16%)</title><rect x="11.1989%" y="229" width="3.1621%" height="15" fill="rgb(235,213,38)" fg:x="85" fg:w="24"/><text x="11.4489%" y="239.50">&lt;&amp;c..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (14 samples, 1.84%)</title><rect x="12.5165%" y="213" width="1.8445%" height="15" fill="rgb(237,122,38)" fg:x="95" fg:w="14"/><text x="12.7665%" y="223.50">&lt;..</text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="14.3610%" y="437" width="0.1318%" height="15" fill="rgb(244,218,35)" fg:x="109" fg:w="1"/><text x="14.6110%" y="447.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (7 samples, 0.92%)</title><rect x="14.4928%" y="437" width="0.9223%" height="15" fill="rgb(240,68,47)" fg:x="110" fg:w="7"/><text x="14.7428%" y="447.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (7 samples, 0.92%)</title><rect x="14.4928%" y="421" width="0.9223%" height="15" fill="rgb(210,16,53)" fg:x="110" fg:w="7"/><text x="14.7428%" y="431.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (4 samples, 0.53%)</title><rect x="14.8880%" y="405" width="0.5270%" height="15" fill="rgb(235,124,12)" fg:x="113" fg:w="4"/><text x="15.1380%" y="415.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (10 samples, 1.32%)</title><rect x="15.4150%" y="437" width="1.3175%" height="15" fill="rgb(224,169,11)" fg:x="117" fg:w="10"/><text x="15.6650%" y="447.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (10 samples, 1.32%)</title><rect x="15.4150%" y="421" width="1.3175%" height="15" fill="rgb(250,166,2)" fg:x="117" fg:w="10"/><text x="15.6650%" y="431.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (4 samples, 0.53%)</title><rect x="16.2055%" y="405" width="0.5270%" height="15" fill="rgb(242,216,29)" fg:x="123" fg:w="4"/><text x="16.4555%" y="415.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (1 samples, 0.13%)</title><rect x="16.7325%" y="421" width="0.1318%" height="15" fill="rgb(230,116,27)" fg:x="127" fg:w="1"/><text x="16.9825%" y="431.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.13%)</title><rect x="16.7325%" y="405" width="0.1318%" height="15" fill="rgb(228,99,48)" fg:x="127" fg:w="1"/><text x="16.9825%" y="415.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (1 samples, 0.13%)</title><rect x="16.7325%" y="389" width="0.1318%" height="15" fill="rgb(253,11,6)" fg:x="127" fg:w="1"/><text x="16.9825%" y="399.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::double (3 samples, 0.40%)</title><rect x="16.7325%" y="437" width="0.3953%" height="15" fill="rgb(247,143,39)" fg:x="127" fg:w="3"/><text x="16.9825%" y="447.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (2 samples, 0.26%)</title><rect x="16.8643%" y="421" width="0.2635%" height="15" fill="rgb(236,97,10)" fg:x="128" fg:w="2"/><text x="17.1143%" y="431.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (2 samples, 0.26%)</title><rect x="16.8643%" y="405" width="0.2635%" height="15" fill="rgb(233,208,19)" fg:x="128" fg:w="2"/><text x="17.1143%" y="415.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (2 samples, 0.26%)</title><rect x="16.8643%" y="389" width="0.2635%" height="15" fill="rgb(216,164,2)" fg:x="128" fg:w="2"/><text x="17.1143%" y="399.50"></text></g><g><title>receiver::main (25 samples, 3.29%)</title><rect x="14.3610%" y="549" width="3.2938%" height="15" fill="rgb(220,129,5)" fg:x="109" fg:w="25"/><text x="14.6110%" y="559.50">rec..</text></g><g><title>receiver::verify_message (25 samples, 3.29%)</title><rect x="14.3610%" y="533" width="3.2938%" height="15" fill="rgb(242,17,10)" fg:x="109" fg:w="25"/><text x="14.6110%" y="543.50">rec..</text></g><g><title>hecate::receiver::check_message (25 samples, 3.29%)</title><rect x="14.3610%" y="517" width="3.2938%" height="15" fill="rgb(242,107,0)" fg:x="109" fg:w="25"/><text x="14.6110%" y="527.50">hec..</text></g><g><title>&lt;ed25519_dalek::public::PublicKey as signature::verifier::Verifier&lt;ed25519::Signature&gt;&gt;::verify (25 samples, 3.29%)</title><rect x="14.3610%" y="501" width="3.2938%" height="15" fill="rgb(251,28,31)" fg:x="109" fg:w="25"/><text x="14.6110%" y="511.50">&lt;ed..</text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (25 samples, 3.29%)</title><rect x="14.3610%" y="485" width="3.2938%" height="15" fill="rgb(233,223,10)" fg:x="109" fg:w="25"/><text x="14.6110%" y="495.50">cur..</text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (25 samples, 3.29%)</title><rect x="14.3610%" y="469" width="3.2938%" height="15" fill="rgb(215,21,27)" fg:x="109" fg:w="25"/><text x="14.6110%" y="479.50">cur..</text></g><g><title>&lt;curve25519_dalek::window::NafLookupTable5&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (25 samples, 3.29%)</title><rect x="14.3610%" y="453" width="3.2938%" height="15" fill="rgb(232,23,21)" fg:x="109" fg:w="25"/><text x="14.6110%" y="463.50">&lt;cu..</text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::to_projective_niels (4 samples, 0.53%)</title><rect x="17.1278%" y="437" width="0.5270%" height="15" fill="rgb(244,5,23)" fg:x="130" fg:w="4"/><text x="17.3778%" y="447.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (3 samples, 0.40%)</title><rect x="17.2596%" y="421" width="0.3953%" height="15" fill="rgb(226,81,46)" fg:x="131" fg:w="3"/><text x="17.5096%" y="431.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (1 samples, 0.13%)</title><rect x="17.5231%" y="405" width="0.1318%" height="15" fill="rgb(247,70,30)" fg:x="133" fg:w="1"/><text x="17.7731%" y="415.50"></text></g><g><title>sha2::sha256::soft::schedule (2 samples, 0.26%)</title><rect x="17.6548%" y="549" width="0.2635%" height="15" fill="rgb(212,68,19)" fg:x="134" fg:w="2"/><text x="17.9048%" y="559.50"></text></g><g><title>[unknown] (126 samples, 16.60%)</title><rect x="3.5573%" y="565" width="16.6008%" height="15" fill="rgb(240,187,13)" fg:x="27" fg:w="126"/><text x="3.8073%" y="575.50">[unknown]</text></g><g><title>std::rt::lang_start_internal (17 samples, 2.24%)</title><rect x="17.9183%" y="549" width="2.2398%" height="15" fill="rgb(223,113,26)" fg:x="136" fg:w="17"/><text x="18.1683%" y="559.50">s..</text></g><g><title>std::panic::catch_unwind (17 samples, 2.24%)</title><rect x="17.9183%" y="533" width="2.2398%" height="15" fill="rgb(206,192,2)" fg:x="136" fg:w="17"/><text x="18.1683%" y="543.50">s..</text></g><g><title>std::panicking::try (17 samples, 2.24%)</title><rect x="17.9183%" y="517" width="2.2398%" height="15" fill="rgb(241,108,4)" fg:x="136" fg:w="17"/><text x="18.1683%" y="527.50">s..</text></g><g><title>std::panicking::try::do_call (17 samples, 2.24%)</title><rect x="17.9183%" y="501" width="2.2398%" height="15" fill="rgb(247,173,49)" fg:x="136" fg:w="17"/><text x="18.1683%" y="511.50">s..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (17 samples, 2.24%)</title><rect x="17.9183%" y="485" width="2.2398%" height="15" fill="rgb(224,114,35)" fg:x="136" fg:w="17"/><text x="18.1683%" y="495.50">s..</text></g><g><title>std::panic::catch_unwind (17 samples, 2.24%)</title><rect x="17.9183%" y="469" width="2.2398%" height="15" fill="rgb(245,159,27)" fg:x="136" fg:w="17"/><text x="18.1683%" y="479.50">s..</text></g><g><title>std::panicking::try (17 samples, 2.24%)</title><rect x="17.9183%" y="453" width="2.2398%" height="15" fill="rgb(245,172,44)" fg:x="136" fg:w="17"/><text x="18.1683%" y="463.50">s..</text></g><g><title>std::panicking::try::do_call (17 samples, 2.24%)</title><rect x="17.9183%" y="437" width="2.2398%" height="15" fill="rgb(236,23,11)" fg:x="136" fg:w="17"/><text x="18.1683%" y="447.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (17 samples, 2.24%)</title><rect x="17.9183%" y="421" width="2.2398%" height="15" fill="rgb(205,117,38)" fg:x="136" fg:w="17"/><text x="18.1683%" y="431.50">c..</text></g><g><title>std::rt::lang_start::{{closure}} (17 samples, 2.24%)</title><rect x="17.9183%" y="405" width="2.2398%" height="15" fill="rgb(237,72,25)" fg:x="136" fg:w="17"/><text x="18.1683%" y="415.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 2.24%)</title><rect x="17.9183%" y="389" width="2.2398%" height="15" fill="rgb(244,70,9)" fg:x="136" fg:w="17"/><text x="18.1683%" y="399.50">s..</text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 2.24%)</title><rect x="17.9183%" y="373" width="2.2398%" height="15" fill="rgb(217,125,39)" fg:x="136" fg:w="17"/><text x="18.1683%" y="383.50">c..</text></g><g><title>receiver::main (17 samples, 2.24%)</title><rect x="17.9183%" y="357" width="2.2398%" height="15" fill="rgb(235,36,10)" fg:x="136" fg:w="17"/><text x="18.1683%" y="367.50">r..</text></g><g><title>receiver::verify_message (17 samples, 2.24%)</title><rect x="17.9183%" y="341" width="2.2398%" height="15" fill="rgb(251,123,47)" fg:x="136" fg:w="17"/><text x="18.1683%" y="351.50">r..</text></g><g><title>hecate::receiver::check_message (17 samples, 2.24%)</title><rect x="17.9183%" y="325" width="2.2398%" height="15" fill="rgb(221,13,13)" fg:x="136" fg:w="17"/><text x="18.1683%" y="335.50">h..</text></g><g><title>&lt;ed25519_dalek::public::PublicKey as signature::verifier::Verifier&lt;ed25519::Signature&gt;&gt;::verify (17 samples, 2.24%)</title><rect x="17.9183%" y="309" width="2.2398%" height="15" fill="rgb(238,131,9)" fg:x="136" fg:w="17"/><text x="18.1683%" y="319.50">&lt;..</text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (17 samples, 2.24%)</title><rect x="17.9183%" y="293" width="2.2398%" height="15" fill="rgb(211,50,8)" fg:x="136" fg:w="17"/><text x="18.1683%" y="303.50">c..</text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (17 samples, 2.24%)</title><rect x="17.9183%" y="277" width="2.2398%" height="15" fill="rgb(245,182,24)" fg:x="136" fg:w="17"/><text x="18.1683%" y="287.50">c..</text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (17 samples, 2.24%)</title><rect x="17.9183%" y="261" width="2.2398%" height="15" fill="rgb(242,14,37)" fg:x="136" fg:w="17"/><text x="18.1683%" y="271.50">c..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (17 samples, 2.24%)</title><rect x="17.9183%" y="245" width="2.2398%" height="15" fill="rgb(246,228,12)" fg:x="136" fg:w="17"/><text x="18.1683%" y="255.50">&lt;..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (7 samples, 0.92%)</title><rect x="19.2358%" y="229" width="0.9223%" height="15" fill="rgb(213,55,15)" fg:x="146" fg:w="7"/><text x="19.4858%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;hecate::types::Report&gt; (1 samples, 0.13%)</title><rect x="20.1581%" y="293" width="0.1318%" height="15" fill="rgb(209,9,3)" fg:x="153" fg:w="1"/><text x="20.4081%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;hecate::types::Envelope&gt; (1 samples, 0.13%)</title><rect x="20.1581%" y="277" width="0.1318%" height="15" fill="rgb(230,59,30)" fg:x="153" fg:w="1"/><text x="20.4081%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.13%)</title><rect x="20.1581%" y="261" width="0.1318%" height="15" fill="rgb(209,121,21)" fg:x="153" fg:w="1"/><text x="20.4081%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.13%)</title><rect x="20.1581%" y="245" width="0.1318%" height="15" fill="rgb(220,109,13)" fg:x="153" fg:w="1"/><text x="20.4081%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="20.1581%" y="229" width="0.1318%" height="15" fill="rgb(232,18,1)" fg:x="153" fg:w="1"/><text x="20.4081%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.13%)</title><rect x="20.1581%" y="213" width="0.1318%" height="15" fill="rgb(215,41,42)" fg:x="153" fg:w="1"/><text x="20.4081%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.13%)</title><rect x="20.1581%" y="197" width="0.1318%" height="15" fill="rgb(224,123,36)" fg:x="153" fg:w="1"/><text x="20.4081%" y="207.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="20.1581%" y="181" width="0.1318%" height="15" fill="rgb(240,125,3)" fg:x="153" fg:w="1"/><text x="20.4081%" y="191.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (1 samples, 0.13%)</title><rect x="20.2899%" y="277" width="0.1318%" height="15" fill="rgb(205,98,50)" fg:x="154" fg:w="1"/><text x="20.5399%" y="287.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (1 samples, 0.13%)</title><rect x="20.2899%" y="261" width="0.1318%" height="15" fill="rgb(205,185,37)" fg:x="154" fg:w="1"/><text x="20.5399%" y="271.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (1 samples, 0.13%)</title><rect x="20.2899%" y="245" width="0.1318%" height="15" fill="rgb(238,207,15)" fg:x="154" fg:w="1"/><text x="20.5399%" y="255.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (1 samples, 0.13%)</title><rect x="20.2899%" y="229" width="0.1318%" height="15" fill="rgb(213,199,42)" fg:x="154" fg:w="1"/><text x="20.5399%" y="239.50"></text></g><g><title>sha2::sha256::Engine256::finish (1 samples, 0.13%)</title><rect x="20.2899%" y="213" width="0.1318%" height="15" fill="rgb(235,201,11)" fg:x="154" fg:w="1"/><text x="20.5399%" y="223.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (1 samples, 0.13%)</title><rect x="20.2899%" y="197" width="0.1318%" height="15" fill="rgb(207,46,11)" fg:x="154" fg:w="1"/><text x="20.5399%" y="207.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (1 samples, 0.13%)</title><rect x="20.2899%" y="181" width="0.1318%" height="15" fill="rgb(241,35,35)" fg:x="154" fg:w="1"/><text x="20.5399%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (1 samples, 0.13%)</title><rect x="20.2899%" y="165" width="0.1318%" height="15" fill="rgb(243,32,47)" fg:x="154" fg:w="1"/><text x="20.5399%" y="175.50"></text></g><g><title>sha2::sha256::x86::compress (1 samples, 0.13%)</title><rect x="20.2899%" y="149" width="0.1318%" height="15" fill="rgb(247,202,23)" fg:x="154" fg:w="1"/><text x="20.5399%" y="159.50"></text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.13%)</title><rect x="20.2899%" y="133" width="0.1318%" height="15" fill="rgb(219,102,11)" fg:x="154" fg:w="1"/><text x="20.5399%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.13%)</title><rect x="20.2899%" y="117" width="0.1318%" height="15" fill="rgb(243,110,44)" fg:x="154" fg:w="1"/><text x="20.5399%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.13%)</title><rect x="20.2899%" y="101" width="0.1318%" height="15" fill="rgb(222,74,54)" fg:x="154" fg:w="1"/><text x="20.5399%" y="111.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::update (1 samples, 0.13%)</title><rect x="20.4216%" y="277" width="0.1318%" height="15" fill="rgb(216,99,12)" fg:x="155" fg:w="1"/><text x="20.6716%" y="287.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.13%)</title><rect x="20.4216%" y="261" width="0.1318%" height="15" fill="rgb(226,22,26)" fg:x="155" fg:w="1"/><text x="20.6716%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.13%)</title><rect x="20.4216%" y="245" width="0.1318%" height="15" fill="rgb(217,163,10)" fg:x="155" fg:w="1"/><text x="20.6716%" y="255.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.13%)</title><rect x="20.4216%" y="229" width="0.1318%" height="15" fill="rgb(213,25,53)" fg:x="155" fg:w="1"/><text x="20.6716%" y="239.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (1 samples, 0.13%)</title><rect x="20.4216%" y="213" width="0.1318%" height="15" fill="rgb(252,105,26)" fg:x="155" fg:w="1"/><text x="20.6716%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (1 samples, 0.13%)</title><rect x="20.4216%" y="197" width="0.1318%" height="15" fill="rgb(220,39,43)" fg:x="155" fg:w="1"/><text x="20.6716%" y="207.50"></text></g><g><title>sha2::sha256::x86::compress (1 samples, 0.13%)</title><rect x="20.4216%" y="181" width="0.1318%" height="15" fill="rgb(229,68,48)" fg:x="155" fg:w="1"/><text x="20.6716%" y="191.50"></text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.13%)</title><rect x="20.4216%" y="165" width="0.1318%" height="15" fill="rgb(252,8,32)" fg:x="155" fg:w="1"/><text x="20.6716%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.13%)</title><rect x="20.4216%" y="149" width="0.1318%" height="15" fill="rgb(223,20,43)" fg:x="155" fg:w="1"/><text x="20.6716%" y="159.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.13%)</title><rect x="20.4216%" y="133" width="0.1318%" height="15" fill="rgb(229,81,49)" fg:x="155" fg:w="1"/><text x="20.6716%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.13%)</title><rect x="20.4216%" y="117" width="0.1318%" height="15" fill="rgb(236,28,36)" fg:x="155" fg:w="1"/><text x="20.6716%" y="127.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::update (2 samples, 0.26%)</title><rect x="20.5534%" y="261" width="0.2635%" height="15" fill="rgb(249,185,26)" fg:x="156" fg:w="2"/><text x="20.8034%" y="271.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::Update&gt;::update (2 samples, 0.26%)</title><rect x="20.5534%" y="245" width="0.2635%" height="15" fill="rgb(249,174,33)" fg:x="156" fg:w="2"/><text x="20.8034%" y="255.50"></text></g><g><title>sha2::sha512::Engine512::update (2 samples, 0.26%)</title><rect x="20.5534%" y="229" width="0.2635%" height="15" fill="rgb(233,201,37)" fg:x="156" fg:w="2"/><text x="20.8034%" y="239.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (2 samples, 0.26%)</title><rect x="20.5534%" y="213" width="0.2635%" height="15" fill="rgb(221,78,26)" fg:x="156" fg:w="2"/><text x="20.8034%" y="223.50"></text></g><g><title>sha2::sha512::Engine512::update::{{closure}} (2 samples, 0.26%)</title><rect x="20.5534%" y="197" width="0.2635%" height="15" fill="rgb(250,127,30)" fg:x="156" fg:w="2"/><text x="20.8034%" y="207.50"></text></g><g><title>sha2::sha512::compress512 (2 samples, 0.26%)</title><rect x="20.5534%" y="181" width="0.2635%" height="15" fill="rgb(230,49,44)" fg:x="156" fg:w="2"/><text x="20.8034%" y="191.50"></text></g><g><title>sha2::sha512::x86::compress (2 samples, 0.26%)</title><rect x="20.5534%" y="165" width="0.2635%" height="15" fill="rgb(229,67,23)" fg:x="156" fg:w="2"/><text x="20.8034%" y="175.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (2 samples, 0.26%)</title><rect x="20.5534%" y="149" width="0.2635%" height="15" fill="rgb(249,83,47)" fg:x="156" fg:w="2"/><text x="20.8034%" y="159.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (2 samples, 0.26%)</title><rect x="20.5534%" y="133" width="0.2635%" height="15" fill="rgb(215,43,3)" fg:x="156" fg:w="2"/><text x="20.8034%" y="143.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (2 samples, 0.26%)</title><rect x="20.5534%" y="117" width="0.2635%" height="15" fill="rgb(238,154,13)" fg:x="156" fg:w="2"/><text x="20.8034%" y="127.50"></text></g><g><title>sha2::sha512::x86::sha_round (2 samples, 0.26%)</title><rect x="20.5534%" y="101" width="0.2635%" height="15" fill="rgb(219,56,2)" fg:x="156" fg:w="2"/><text x="20.8034%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_right (2 samples, 0.26%)</title><rect x="20.5534%" y="85" width="0.2635%" height="15" fill="rgb(233,0,4)" fg:x="156" fg:w="2"/><text x="20.8034%" y="95.50"></text></g><g><title>&lt;ed25519_dalek::signature::InternalSignature as core::convert::TryFrom&lt;&amp;ed25519::Signature&gt;&gt;::try_from (1 samples, 0.13%)</title><rect x="20.8169%" y="261" width="0.1318%" height="15" fill="rgb(235,30,7)" fg:x="158" fg:w="1"/><text x="21.0669%" y="271.50"></text></g><g><title>ed25519_dalek::signature::InternalSignature::from_bytes (1 samples, 0.13%)</title><rect x="20.8169%" y="245" width="0.1318%" height="15" fill="rgb(250,79,13)" fg:x="158" fg:w="1"/><text x="21.0669%" y="255.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.13%)</title><rect x="20.9486%" y="229" width="0.1318%" height="15" fill="rgb(211,146,34)" fg:x="159" fg:w="1"/><text x="21.1986%" y="239.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (1 samples, 0.13%)</title><rect x="20.9486%" y="213" width="0.1318%" height="15" fill="rgb(228,22,38)" fg:x="159" fg:w="1"/><text x="21.1986%" y="223.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (43 samples, 5.67%)</title><rect x="21.0804%" y="213" width="5.6653%" height="15" fill="rgb(235,168,5)" fg:x="160" fg:w="43"/><text x="21.3304%" y="223.50">curve25..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (17 samples, 2.24%)</title><rect x="24.5059%" y="197" width="2.2398%" height="15" fill="rgb(221,155,16)" fg:x="186" fg:w="17"/><text x="24.7559%" y="207.50">c..</text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::compress (46 samples, 6.06%)</title><rect x="20.9486%" y="261" width="6.0606%" height="15" fill="rgb(215,215,53)" fg:x="159" fg:w="46"/><text x="21.1986%" y="271.50">curve255..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invert (46 samples, 6.06%)</title><rect x="20.9486%" y="245" width="6.0606%" height="15" fill="rgb(223,4,10)" fg:x="159" fg:w="46"/><text x="21.1986%" y="255.50">curve255..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (45 samples, 5.93%)</title><rect x="21.0804%" y="229" width="5.9289%" height="15" fill="rgb(234,103,6)" fg:x="160" fg:w="45"/><text x="21.3304%" y="239.50">curve255..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (2 samples, 0.26%)</title><rect x="26.7457%" y="213" width="0.2635%" height="15" fill="rgb(227,97,0)" fg:x="203" fg:w="2"/><text x="26.9957%" y="223.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (2 samples, 0.26%)</title><rect x="26.7457%" y="197" width="0.2635%" height="15" fill="rgb(234,150,53)" fg:x="203" fg:w="2"/><text x="26.9957%" y="207.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (1 samples, 0.13%)</title><rect x="26.8775%" y="181" width="0.1318%" height="15" fill="rgb(228,201,54)" fg:x="204" fg:w="1"/><text x="27.1275%" y="191.50"></text></g><g><title>[receiver] (2 samples, 0.26%)</title><rect x="29.1173%" y="229" width="0.2635%" height="15" fill="rgb(222,22,37)" fg:x="221" fg:w="2"/><text x="29.3673%" y="239.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (2 samples, 0.26%)</title><rect x="29.1173%" y="213" width="0.2635%" height="15" fill="rgb(237,53,32)" fg:x="221" fg:w="2"/><text x="29.3673%" y="223.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square2 (1 samples, 0.13%)</title><rect x="29.2490%" y="197" width="0.1318%" height="15" fill="rgb(233,25,53)" fg:x="222" fg:w="1"/><text x="29.4990%" y="207.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.66%)</title><rect x="29.3808%" y="229" width="0.6588%" height="15" fill="rgb(210,40,34)" fg:x="223" fg:w="5"/><text x="29.6308%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (1 samples, 0.13%)</title><rect x="30.1713%" y="213" width="0.1318%" height="15" fill="rgb(241,220,44)" fg:x="229" fg:w="1"/><text x="30.4213%" y="223.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (1 samples, 0.13%)</title><rect x="30.1713%" y="197" width="0.1318%" height="15" fill="rgb(235,28,35)" fg:x="229" fg:w="1"/><text x="30.4213%" y="207.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (4 samples, 0.53%)</title><rect x="30.0395%" y="229" width="0.5270%" height="15" fill="rgb(210,56,17)" fg:x="228" fg:w="4"/><text x="30.2895%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (2 samples, 0.26%)</title><rect x="30.3030%" y="213" width="0.2635%" height="15" fill="rgb(224,130,29)" fg:x="230" fg:w="2"/><text x="30.5530%" y="223.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (2 samples, 0.26%)</title><rect x="30.3030%" y="197" width="0.2635%" height="15" fill="rgb(235,212,8)" fg:x="230" fg:w="2"/><text x="30.5530%" y="207.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (2 samples, 0.26%)</title><rect x="30.5665%" y="229" width="0.2635%" height="15" fill="rgb(223,33,50)" fg:x="232" fg:w="2"/><text x="30.8165%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (2 samples, 0.26%)</title><rect x="30.5665%" y="213" width="0.2635%" height="15" fill="rgb(219,149,13)" fg:x="232" fg:w="2"/><text x="30.8165%" y="223.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (1 samples, 0.13%)</title><rect x="30.8300%" y="229" width="0.1318%" height="15" fill="rgb(250,156,29)" fg:x="234" fg:w="1"/><text x="31.0800%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (1 samples, 0.13%)</title><rect x="30.8300%" y="213" width="0.1318%" height="15" fill="rgb(216,193,19)" fg:x="234" fg:w="1"/><text x="31.0800%" y="223.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (1 samples, 0.13%)</title><rect x="30.8300%" y="197" width="0.1318%" height="15" fill="rgb(216,135,14)" fg:x="234" fg:w="1"/><text x="31.0800%" y="207.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (57 samples, 7.51%)</title><rect x="32.1476%" y="213" width="7.5099%" height="15" fill="rgb(241,47,5)" fg:x="244" fg:w="57"/><text x="32.3976%" y="223.50">&lt;&amp;curve255..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (30 samples, 3.95%)</title><rect x="35.7049%" y="197" width="3.9526%" height="15" fill="rgb(233,42,35)" fg:x="271" fg:w="30"/><text x="35.9549%" y="207.50">&lt;&amp;cu..</text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (71 samples, 9.35%)</title><rect x="30.9618%" y="229" width="9.3544%" height="15" fill="rgb(231,13,6)" fg:x="235" fg:w="71"/><text x="31.2118%" y="239.50">curve25519_da..</text></g><g><title>[receiver] (5 samples, 0.66%)</title><rect x="39.6574%" y="213" width="0.6588%" height="15" fill="rgb(207,181,40)" fg:x="301" fg:w="5"/><text x="39.9074%" y="223.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (5 samples, 0.66%)</title><rect x="39.6574%" y="197" width="0.6588%" height="15" fill="rgb(254,173,49)" fg:x="301" fg:w="5"/><text x="39.9074%" y="207.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (76 samples, 10.01%)</title><rect x="51.9104%" y="197" width="10.0132%" height="15" fill="rgb(221,1,38)" fg:x="394" fg:w="76"/><text x="52.1604%" y="207.50">&lt;&amp;curve25519_d..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (162 samples, 21.34%)</title><rect x="40.7115%" y="213" width="21.3439%" height="15" fill="rgb(206,124,46)" fg:x="309" fg:w="162"/><text x="40.9615%" y="223.50">&lt;&amp;curve25519_dalek::backend::seria..</text></g><g><title>apic_timer_interrupt (1 samples, 0.13%)</title><rect x="61.9236%" y="197" width="0.1318%" height="15" fill="rgb(249,21,11)" fg:x="470" fg:w="1"/><text x="62.1736%" y="207.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.13%)</title><rect x="61.9236%" y="181" width="0.1318%" height="15" fill="rgb(222,201,40)" fg:x="470" fg:w="1"/><text x="62.1736%" y="191.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.13%)</title><rect x="61.9236%" y="165" width="0.1318%" height="15" fill="rgb(235,61,29)" fg:x="470" fg:w="1"/><text x="62.1736%" y="175.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (167 samples, 22.00%)</title><rect x="40.3162%" y="229" width="22.0026%" height="15" fill="rgb(219,207,3)" fg:x="306" fg:w="167"/><text x="40.5662%" y="239.50">curve25519_dalek::backend::serial::..</text></g><g><title>[receiver] (2 samples, 0.26%)</title><rect x="62.0553%" y="213" width="0.2635%" height="15" fill="rgb(222,56,46)" fg:x="471" fg:w="2"/><text x="62.3053%" y="223.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.26%)</title><rect x="62.0553%" y="197" width="0.2635%" height="15" fill="rgb(239,76,54)" fg:x="471" fg:w="2"/><text x="62.3053%" y="207.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (15 samples, 1.98%)</title><rect x="62.8458%" y="213" width="1.9763%" height="15" fill="rgb(231,124,27)" fg:x="477" fg:w="15"/><text x="63.0958%" y="223.50">&lt;..</text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (11 samples, 1.45%)</title><rect x="63.3729%" y="197" width="1.4493%" height="15" fill="rgb(249,195,6)" fg:x="481" fg:w="11"/><text x="63.6229%" y="207.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (31 samples, 4.08%)</title><rect x="64.8221%" y="213" width="4.0843%" height="15" fill="rgb(237,174,47)" fg:x="492" fg:w="31"/><text x="65.0721%" y="223.50">&lt;&amp;cu..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (24 samples, 3.16%)</title><rect x="65.7444%" y="197" width="3.1621%" height="15" fill="rgb(206,201,31)" fg:x="499" fg:w="24"/><text x="65.9944%" y="207.50">cur..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (3 samples, 0.40%)</title><rect x="68.9065%" y="213" width="0.3953%" height="15" fill="rgb(231,57,52)" fg:x="523" fg:w="3"/><text x="69.1565%" y="223.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square2 (58 samples, 7.64%)</title><rect x="69.3017%" y="213" width="7.6416%" height="15" fill="rgb(248,177,22)" fg:x="526" fg:w="58"/><text x="69.5517%" y="223.50">curve25519..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (56 samples, 7.38%)</title><rect x="69.5652%" y="197" width="7.3781%" height="15" fill="rgb(215,211,37)" fg:x="528" fg:w="56"/><text x="69.8152%" y="207.50">curve25519..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (24 samples, 3.16%)</title><rect x="73.7813%" y="181" width="3.1621%" height="15" fill="rgb(241,128,51)" fg:x="560" fg:w="24"/><text x="74.0313%" y="191.50">cur..</text></g><g><title>[receiver] (2 samples, 0.26%)</title><rect x="76.9433%" y="197" width="0.2635%" height="15" fill="rgb(227,165,31)" fg:x="584" fg:w="2"/><text x="77.1933%" y="207.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (2 samples, 0.26%)</title><rect x="76.9433%" y="181" width="0.2635%" height="15" fill="rgb(228,167,24)" fg:x="584" fg:w="2"/><text x="77.1933%" y="191.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (242 samples, 31.88%)</title><rect x="62.3188%" y="229" width="31.8841%" height="15" fill="rgb(228,143,12)" fg:x="473" fg:w="242"/><text x="62.5688%" y="239.50">curve25519_dalek::backend::serial::curve_models::Pro..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (131 samples, 17.26%)</title><rect x="76.9433%" y="213" width="17.2596%" height="15" fill="rgb(249,149,8)" fg:x="584" fg:w="131"/><text x="77.1933%" y="223.50">curve25519_dalek::backend::..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (129 samples, 17.00%)</title><rect x="77.2069%" y="197" width="16.9960%" height="15" fill="rgb(243,35,44)" fg:x="586" fg:w="129"/><text x="77.4569%" y="207.50">curve25519_dalek::backend:..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (56 samples, 7.38%)</title><rect x="86.8248%" y="181" width="7.3781%" height="15" fill="rgb(246,89,9)" fg:x="659" fg:w="56"/><text x="87.0748%" y="191.50">curve25519..</text></g><g><title>curve25519_dalek::scalar::Scalar::non_adjacent_form (4 samples, 0.53%)</title><rect x="94.2029%" y="229" width="0.5270%" height="15" fill="rgb(233,213,13)" fg:x="715" fg:w="4"/><text x="94.4529%" y="239.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (517 samples, 68.12%)</title><rect x="27.0092%" y="261" width="68.1159%" height="15" fill="rgb(233,141,41)" fg:x="205" fg:w="517"/><text x="27.2592%" y="271.50">curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint</text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (517 samples, 68.12%)</title><rect x="27.0092%" y="245" width="68.1159%" height="15" fill="rgb(239,167,4)" fg:x="205" fg:w="517"/><text x="27.2592%" y="255.50">curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul</text></g><g><title>curve25519_dalek::window::NafLookupTable5&lt;T&gt;::select (3 samples, 0.40%)</title><rect x="94.7299%" y="229" width="0.3953%" height="15" fill="rgb(209,217,16)" fg:x="719" fg:w="3"/><text x="94.9799%" y="239.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.26%)</title><rect x="94.8617%" y="213" width="0.2635%" height="15" fill="rgb(219,88,35)" fg:x="720" fg:w="2"/><text x="95.1117%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi64 (1 samples, 0.13%)</title><rect x="95.1252%" y="37" width="0.1318%" height="15" fill="rgb(220,193,23)" fg:x="722" fg:w="1"/><text x="95.3752%" y="47.50"></text></g><g><title>sha2::sha512::x86::sha512_update_x_avx (2 samples, 0.26%)</title><rect x="95.1252%" y="53" width="0.2635%" height="15" fill="rgb(230,90,52)" fg:x="722" fg:w="2"/><text x="95.3752%" y="63.50"></text></g><g><title>core::core_arch::x86::ssse3::_mm_alignr_epi8 (1 samples, 0.13%)</title><rect x="95.2569%" y="37" width="0.1318%" height="15" fill="rgb(252,106,19)" fg:x="723" fg:w="1"/><text x="95.5069%" y="47.50"></text></g><g><title>&lt;ed25519_dalek::public::PublicKey as signature::verifier::Verifier&lt;ed25519::Signature&gt;&gt;::verify (571 samples, 75.23%)</title><rect x="20.5534%" y="277" width="75.2306%" height="15" fill="rgb(206,74,20)" fg:x="156" fg:w="571"/><text x="20.8034%" y="287.50">&lt;ed25519_dalek::public::PublicKey as signature::verifier::Verifier&lt;ed25519::Signature&gt;&gt;::verify</text></g><g><title>curve25519_dalek::scalar::Scalar::from_hash (5 samples, 0.66%)</title><rect x="95.1252%" y="261" width="0.6588%" height="15" fill="rgb(230,138,44)" fg:x="722" fg:w="5"/><text x="95.3752%" y="271.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (5 samples, 0.66%)</title><rect x="95.1252%" y="245" width="0.6588%" height="15" fill="rgb(235,182,43)" fg:x="722" fg:w="5"/><text x="95.3752%" y="255.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (5 samples, 0.66%)</title><rect x="95.1252%" y="229" width="0.6588%" height="15" fill="rgb(242,16,51)" fg:x="722" fg:w="5"/><text x="95.3752%" y="239.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (5 samples, 0.66%)</title><rect x="95.1252%" y="213" width="0.6588%" height="15" fill="rgb(248,9,4)" fg:x="722" fg:w="5"/><text x="95.3752%" y="223.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (5 samples, 0.66%)</title><rect x="95.1252%" y="197" width="0.6588%" height="15" fill="rgb(210,31,22)" fg:x="722" fg:w="5"/><text x="95.3752%" y="207.50"></text></g><g><title>sha2::sha512::Engine512::finish (5 samples, 0.66%)</title><rect x="95.1252%" y="181" width="0.6588%" height="15" fill="rgb(239,54,39)" fg:x="722" fg:w="5"/><text x="95.3752%" y="191.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len128_padding_be (5 samples, 0.66%)</title><rect x="95.1252%" y="165" width="0.6588%" height="15" fill="rgb(230,99,41)" fg:x="722" fg:w="5"/><text x="95.3752%" y="175.50"></text></g><g><title>sha2::sha512::Engine512::finish::{{closure}} (5 samples, 0.66%)</title><rect x="95.1252%" y="149" width="0.6588%" height="15" fill="rgb(253,106,12)" fg:x="722" fg:w="5"/><text x="95.3752%" y="159.50"></text></g><g><title>sha2::sha512::compress512 (5 samples, 0.66%)</title><rect x="95.1252%" y="133" width="0.6588%" height="15" fill="rgb(213,46,41)" fg:x="722" fg:w="5"/><text x="95.3752%" y="143.50"></text></g><g><title>sha2::sha512::x86::compress (5 samples, 0.66%)</title><rect x="95.1252%" y="117" width="0.6588%" height="15" fill="rgb(215,133,35)" fg:x="722" fg:w="5"/><text x="95.3752%" y="127.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (5 samples, 0.66%)</title><rect x="95.1252%" y="101" width="0.6588%" height="15" fill="rgb(213,28,5)" fg:x="722" fg:w="5"/><text x="95.3752%" y="111.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (5 samples, 0.66%)</title><rect x="95.1252%" y="85" width="0.6588%" height="15" fill="rgb(215,77,49)" fg:x="722" fg:w="5"/><text x="95.3752%" y="95.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (5 samples, 0.66%)</title><rect x="95.1252%" y="69" width="0.6588%" height="15" fill="rgb(248,100,22)" fg:x="722" fg:w="5"/><text x="95.3752%" y="79.50"></text></g><g><title>sha2::sha512::x86::sha_round (3 samples, 0.40%)</title><rect x="95.3887%" y="53" width="0.3953%" height="15" fill="rgb(208,67,9)" fg:x="724" fg:w="3"/><text x="95.6387%" y="63.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (1 samples, 0.13%)</title><rect x="95.7839%" y="277" width="0.1318%" height="15" fill="rgb(219,133,21)" fg:x="727" fg:w="1"/><text x="96.0339%" y="287.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (1 samples, 0.13%)</title><rect x="95.7839%" y="261" width="0.1318%" height="15" fill="rgb(246,46,29)" fg:x="727" fg:w="1"/><text x="96.0339%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="95.7839%" y="245" width="0.1318%" height="15" fill="rgb(246,185,52)" fg:x="727" fg:w="1"/><text x="96.0339%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;: 2]&gt; (1 samples, 0.13%)</title><rect x="95.9157%" y="277" width="0.1318%" height="15" fill="rgb(252,136,11)" fg:x="728" fg:w="1"/><text x="96.1657%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.13%)</title><rect x="95.9157%" y="261" width="0.1318%" height="15" fill="rgb(219,138,53)" fg:x="728" fg:w="1"/><text x="96.1657%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.13%)</title><rect x="95.9157%" y="245" width="0.1318%" height="15" fill="rgb(211,51,23)" fg:x="728" fg:w="1"/><text x="96.1657%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="95.9157%" y="229" width="0.1318%" height="15" fill="rgb(247,221,28)" fg:x="728" fg:w="1"/><text x="96.1657%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.13%)</title><rect x="95.9157%" y="213" width="0.1318%" height="15" fill="rgb(251,222,45)" fg:x="728" fg:w="1"/><text x="96.1657%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.13%)</title><rect x="95.9157%" y="197" width="0.1318%" height="15" fill="rgb(217,162,53)" fg:x="728" fg:w="1"/><text x="96.1657%" y="207.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="95.9157%" y="181" width="0.1318%" height="15" fill="rgb(229,93,14)" fg:x="728" fg:w="1"/><text x="96.1657%" y="191.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.13%)</title><rect x="96.0474%" y="229" width="0.1318%" height="15" fill="rgb(209,67,49)" fg:x="729" fg:w="1"/><text x="96.2974%" y="239.50"></text></g><g><title>ed25519_dalek::public::PublicKey::from_bytes (14 samples, 1.84%)</title><rect x="96.0474%" y="277" width="1.8445%" height="15" fill="rgb(213,87,29)" fg:x="729" fg:w="14"/><text x="96.2974%" y="287.50">e..</text></g><g><title>curve25519_dalek::edwards::CompressedEdwardsY::decompress (14 samples, 1.84%)</title><rect x="96.0474%" y="261" width="1.8445%" height="15" fill="rgb(205,151,52)" fg:x="729" fg:w="14"/><text x="96.2974%" y="271.50">c..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (14 samples, 1.84%)</title><rect x="96.0474%" y="245" width="1.8445%" height="15" fill="rgb(253,215,39)" fg:x="729" fg:w="14"/><text x="96.2974%" y="255.50">c..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow_p58 (13 samples, 1.71%)</title><rect x="96.1792%" y="229" width="1.7128%" height="15" fill="rgb(221,220,41)" fg:x="730" fg:w="13"/><text x="96.4292%" y="239.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (13 samples, 1.71%)</title><rect x="96.1792%" y="213" width="1.7128%" height="15" fill="rgb(218,133,21)" fg:x="730" fg:w="13"/><text x="96.4292%" y="223.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (13 samples, 1.71%)</title><rect x="96.1792%" y="197" width="1.7128%" height="15" fill="rgb(221,193,43)" fg:x="730" fg:w="13"/><text x="96.4292%" y="207.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (9 samples, 1.19%)</title><rect x="96.7062%" y="181" width="1.1858%" height="15" fill="rgb(240,128,52)" fg:x="734" fg:w="9"/><text x="96.9562%" y="191.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (1 samples, 0.13%)</title><rect x="97.8920%" y="101" width="0.1318%" height="15" fill="rgb(253,114,12)" fg:x="743" fg:w="1"/><text x="98.1420%" y="111.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (1 samples, 0.13%)</title><rect x="97.8920%" y="85" width="0.1318%" height="15" fill="rgb(215,223,47)" fg:x="743" fg:w="1"/><text x="98.1420%" y="95.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (1 samples, 0.13%)</title><rect x="97.8920%" y="69" width="0.1318%" height="15" fill="rgb(248,225,23)" fg:x="743" fg:w="1"/><text x="98.1420%" y="79.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.13%)</title><rect x="98.0237%" y="69" width="0.1318%" height="15" fill="rgb(250,108,0)" fg:x="744" fg:w="1"/><text x="98.2737%" y="79.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.13%)</title><rect x="98.0237%" y="53" width="0.1318%" height="15" fill="rgb(228,208,7)" fg:x="744" fg:w="1"/><text x="98.2737%" y="63.50"></text></g><g><title>sha2::sha256::soft::xor (1 samples, 0.13%)</title><rect x="98.0237%" y="37" width="0.1318%" height="15" fill="rgb(244,45,10)" fg:x="744" fg:w="1"/><text x="98.2737%" y="47.50"></text></g><g><title>sha2::sha256::soft::schedule (2 samples, 0.26%)</title><rect x="98.0237%" y="85" width="0.2635%" height="15" fill="rgb(207,125,25)" fg:x="744" fg:w="2"/><text x="98.2737%" y="95.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (1 samples, 0.13%)</title><rect x="98.1555%" y="69" width="0.1318%" height="15" fill="rgb(210,195,18)" fg:x="745" fg:w="1"/><text x="98.4055%" y="79.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.13%)</title><rect x="98.1555%" y="53" width="0.1318%" height="15" fill="rgb(249,80,12)" fg:x="745" fg:w="1"/><text x="98.4055%" y="63.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (6 samples, 0.79%)</title><rect x="97.8920%" y="261" width="0.7905%" height="15" fill="rgb(221,65,9)" fg:x="743" fg:w="6"/><text x="98.1420%" y="271.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (6 samples, 0.79%)</title><rect x="97.8920%" y="245" width="0.7905%" height="15" fill="rgb(235,49,36)" fg:x="743" fg:w="6"/><text x="98.1420%" y="255.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (6 samples, 0.79%)</title><rect x="97.8920%" y="229" width="0.7905%" height="15" fill="rgb(225,32,20)" fg:x="743" fg:w="6"/><text x="98.1420%" y="239.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (6 samples, 0.79%)</title><rect x="97.8920%" y="213" width="0.7905%" height="15" fill="rgb(215,141,46)" fg:x="743" fg:w="6"/><text x="98.1420%" y="223.50"></text></g><g><title>sha2::sha256::Engine256::finish (6 samples, 0.79%)</title><rect x="97.8920%" y="197" width="0.7905%" height="15" fill="rgb(250,160,47)" fg:x="743" fg:w="6"/><text x="98.1420%" y="207.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (6 samples, 0.79%)</title><rect x="97.8920%" y="181" width="0.7905%" height="15" fill="rgb(216,222,40)" fg:x="743" fg:w="6"/><text x="98.1420%" y="191.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (6 samples, 0.79%)</title><rect x="97.8920%" y="165" width="0.7905%" height="15" fill="rgb(234,217,39)" fg:x="743" fg:w="6"/><text x="98.1420%" y="175.50"></text></g><g><title>sha2::sha256::compress256 (6 samples, 0.79%)</title><rect x="97.8920%" y="149" width="0.7905%" height="15" fill="rgb(207,178,40)" fg:x="743" fg:w="6"/><text x="98.1420%" y="159.50"></text></g><g><title>sha2::sha256::x86::compress (6 samples, 0.79%)</title><rect x="97.8920%" y="133" width="0.7905%" height="15" fill="rgb(221,136,13)" fg:x="743" fg:w="6"/><text x="98.1420%" y="143.50"></text></g><g><title>sha2::sha256::soft::compress (6 samples, 0.79%)</title><rect x="97.8920%" y="117" width="0.7905%" height="15" fill="rgb(249,199,10)" fg:x="743" fg:w="6"/><text x="98.1420%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (5 samples, 0.66%)</title><rect x="98.0237%" y="101" width="0.6588%" height="15" fill="rgb(249,222,13)" fg:x="744" fg:w="5"/><text x="98.2737%" y="111.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (3 samples, 0.40%)</title><rect x="98.2872%" y="85" width="0.3953%" height="15" fill="rgb(244,185,38)" fg:x="746" fg:w="3"/><text x="98.5372%" y="95.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.13%)</title><rect x="98.5507%" y="69" width="0.1318%" height="15" fill="rgb(236,202,9)" fg:x="748" fg:w="1"/><text x="98.8007%" y="79.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::update (1 samples, 0.13%)</title><rect x="98.6825%" y="261" width="0.1318%" height="15" fill="rgb(250,229,37)" fg:x="749" fg:w="1"/><text x="98.9325%" y="271.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.13%)</title><rect x="98.6825%" y="245" width="0.1318%" height="15" fill="rgb(206,174,23)" fg:x="749" fg:w="1"/><text x="98.9325%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.13%)</title><rect x="98.6825%" y="229" width="0.1318%" height="15" fill="rgb(211,33,43)" fg:x="749" fg:w="1"/><text x="98.9325%" y="239.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.13%)</title><rect x="98.6825%" y="213" width="0.1318%" height="15" fill="rgb(245,58,50)" fg:x="749" fg:w="1"/><text x="98.9325%" y="223.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (1 samples, 0.13%)</title><rect x="98.6825%" y="197" width="0.1318%" height="15" fill="rgb(244,68,36)" fg:x="749" fg:w="1"/><text x="98.9325%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (1 samples, 0.13%)</title><rect x="98.6825%" y="181" width="0.1318%" height="15" fill="rgb(232,229,15)" fg:x="749" fg:w="1"/><text x="98.9325%" y="191.50"></text></g><g><title>sha2::sha256::x86::compress (1 samples, 0.13%)</title><rect x="98.6825%" y="165" width="0.1318%" height="15" fill="rgb(254,30,23)" fg:x="749" fg:w="1"/><text x="98.9325%" y="175.50"></text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.13%)</title><rect x="98.6825%" y="149" width="0.1318%" height="15" fill="rgb(235,160,14)" fg:x="749" fg:w="1"/><text x="98.9325%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.13%)</title><rect x="98.6825%" y="133" width="0.1318%" height="15" fill="rgb(212,155,44)" fg:x="749" fg:w="1"/><text x="98.9325%" y="143.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.13%)</title><rect x="98.6825%" y="117" width="0.1318%" height="15" fill="rgb(226,2,50)" fg:x="749" fg:w="1"/><text x="98.9325%" y="127.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.13%)</title><rect x="98.6825%" y="101" width="0.1318%" height="15" fill="rgb(234,177,6)" fg:x="749" fg:w="1"/><text x="98.9325%" y="111.50"></text></g><g><title>sha2::sha256::soft::schedule (2 samples, 0.26%)</title><rect x="98.8142%" y="117" width="0.2635%" height="15" fill="rgb(217,24,9)" fg:x="750" fg:w="2"/><text x="99.0642%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (2 samples, 0.26%)</title><rect x="98.8142%" y="101" width="0.2635%" height="15" fill="rgb(220,13,46)" fg:x="750" fg:w="2"/><text x="99.0642%" y="111.50"></text></g><g><title>sha2::sha256::soft::sha256load (2 samples, 0.26%)</title><rect x="98.8142%" y="85" width="0.2635%" height="15" fill="rgb(239,221,27)" fg:x="750" fg:w="2"/><text x="99.0642%" y="95.50"></text></g><g><title>__libc_start_main (603 samples, 79.45%)</title><rect x="20.1581%" y="549" width="79.4466%" height="15" fill="rgb(222,198,25)" fg:x="153" fg:w="603"/><text x="20.4081%" y="559.50">__libc_start_main</text></g><g><title>main (603 samples, 79.45%)</title><rect x="20.1581%" y="533" width="79.4466%" height="15" fill="rgb(211,99,13)" fg:x="153" fg:w="603"/><text x="20.4081%" y="543.50">main</text></g><g><title>std::rt::lang_start_internal (603 samples, 79.45%)</title><rect x="20.1581%" y="517" width="79.4466%" height="15" fill="rgb(232,111,31)" fg:x="153" fg:w="603"/><text x="20.4081%" y="527.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (603 samples, 79.45%)</title><rect x="20.1581%" y="501" width="79.4466%" height="15" fill="rgb(245,82,37)" fg:x="153" fg:w="603"/><text x="20.4081%" y="511.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (603 samples, 79.45%)</title><rect x="20.1581%" y="485" width="79.4466%" height="15" fill="rgb(227,149,46)" fg:x="153" fg:w="603"/><text x="20.4081%" y="495.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (603 samples, 79.45%)</title><rect x="20.1581%" y="469" width="79.4466%" height="15" fill="rgb(218,36,50)" fg:x="153" fg:w="603"/><text x="20.4081%" y="479.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (603 samples, 79.45%)</title><rect x="20.1581%" y="453" width="79.4466%" height="15" fill="rgb(226,80,48)" fg:x="153" fg:w="603"/><text x="20.4081%" y="463.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (603 samples, 79.45%)</title><rect x="20.1581%" y="437" width="79.4466%" height="15" fill="rgb(238,224,15)" fg:x="153" fg:w="603"/><text x="20.4081%" y="447.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (603 samples, 79.45%)</title><rect x="20.1581%" y="421" width="79.4466%" height="15" fill="rgb(241,136,10)" fg:x="153" fg:w="603"/><text x="20.4081%" y="431.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (603 samples, 79.45%)</title><rect x="20.1581%" y="405" width="79.4466%" height="15" fill="rgb(208,32,45)" fg:x="153" fg:w="603"/><text x="20.4081%" y="415.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (603 samples, 79.45%)</title><rect x="20.1581%" y="389" width="79.4466%" height="15" fill="rgb(207,135,9)" fg:x="153" fg:w="603"/><text x="20.4081%" y="399.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (603 samples, 79.45%)</title><rect x="20.1581%" y="373" width="79.4466%" height="15" fill="rgb(206,86,44)" fg:x="153" fg:w="603"/><text x="20.4081%" y="383.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (603 samples, 79.45%)</title><rect x="20.1581%" y="357" width="79.4466%" height="15" fill="rgb(245,177,15)" fg:x="153" fg:w="603"/><text x="20.4081%" y="367.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (603 samples, 79.45%)</title><rect x="20.1581%" y="341" width="79.4466%" height="15" fill="rgb(206,64,50)" fg:x="153" fg:w="603"/><text x="20.4081%" y="351.50">core::ops::function::FnOnce::call_once</text></g><g><title>receiver::main (603 samples, 79.45%)</title><rect x="20.1581%" y="325" width="79.4466%" height="15" fill="rgb(234,36,40)" fg:x="153" fg:w="603"/><text x="20.4081%" y="335.50">receiver::main</text></g><g><title>receiver::verify_message (603 samples, 79.45%)</title><rect x="20.1581%" y="309" width="79.4466%" height="15" fill="rgb(213,64,8)" fg:x="153" fg:w="603"/><text x="20.4081%" y="319.50">receiver::verify_message</text></g><g><title>hecate::receiver::check_message (602 samples, 79.31%)</title><rect x="20.2899%" y="293" width="79.3149%" height="15" fill="rgb(210,75,36)" fg:x="154" fg:w="602"/><text x="20.5399%" y="303.50">hecate::receiver::check_message</text></g><g><title>libsignal_protocol::crypto::hmac_sha256 (13 samples, 1.71%)</title><rect x="97.8920%" y="277" width="1.7128%" height="15" fill="rgb(229,88,21)" fg:x="743" fg:w="13"/><text x="98.1420%" y="287.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (6 samples, 0.79%)</title><rect x="98.8142%" y="261" width="0.7905%" height="15" fill="rgb(252,204,47)" fg:x="750" fg:w="6"/><text x="99.0642%" y="271.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (6 samples, 0.79%)</title><rect x="98.8142%" y="245" width="0.7905%" height="15" fill="rgb(208,77,27)" fg:x="750" fg:w="6"/><text x="99.0642%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::update (6 samples, 0.79%)</title><rect x="98.8142%" y="229" width="0.7905%" height="15" fill="rgb(221,76,26)" fg:x="750" fg:w="6"/><text x="99.0642%" y="239.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (6 samples, 0.79%)</title><rect x="98.8142%" y="213" width="0.7905%" height="15" fill="rgb(225,139,18)" fg:x="750" fg:w="6"/><text x="99.0642%" y="223.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (6 samples, 0.79%)</title><rect x="98.8142%" y="197" width="0.7905%" height="15" fill="rgb(230,137,11)" fg:x="750" fg:w="6"/><text x="99.0642%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (6 samples, 0.79%)</title><rect x="98.8142%" y="181" width="0.7905%" height="15" fill="rgb(212,28,1)" fg:x="750" fg:w="6"/><text x="99.0642%" y="191.50"></text></g><g><title>sha2::sha256::x86::compress (6 samples, 0.79%)</title><rect x="98.8142%" y="165" width="0.7905%" height="15" fill="rgb(248,164,17)" fg:x="750" fg:w="6"/><text x="99.0642%" y="175.50"></text></g><g><title>sha2::sha256::soft::compress (6 samples, 0.79%)</title><rect x="98.8142%" y="149" width="0.7905%" height="15" fill="rgb(222,171,42)" fg:x="750" fg:w="6"/><text x="99.0642%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (6 samples, 0.79%)</title><rect x="98.8142%" y="133" width="0.7905%" height="15" fill="rgb(243,84,45)" fg:x="750" fg:w="6"/><text x="99.0642%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (4 samples, 0.53%)</title><rect x="99.0777%" y="117" width="0.5270%" height="15" fill="rgb(252,49,23)" fg:x="752" fg:w="4"/><text x="99.3277%" y="127.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (3 samples, 0.40%)</title><rect x="99.2095%" y="101" width="0.3953%" height="15" fill="rgb(215,19,7)" fg:x="753" fg:w="3"/><text x="99.4595%" y="111.50"></text></g><g><title>_start (604 samples, 79.58%)</title><rect x="20.1581%" y="565" width="79.5784%" height="15" fill="rgb(238,81,41)" fg:x="153" fg:w="604"/><text x="20.4081%" y="575.50">_start</text></g><g><title>_dl_start (1 samples, 0.13%)</title><rect x="99.6047%" y="549" width="0.1318%" height="15" fill="rgb(210,199,37)" fg:x="756" fg:w="1"/><text x="99.8547%" y="559.50"></text></g><g><title>_dl_start_final (1 samples, 0.13%)</title><rect x="99.6047%" y="533" width="0.1318%" height="15" fill="rgb(244,192,49)" fg:x="756" fg:w="1"/><text x="99.8547%" y="543.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.13%)</title><rect x="99.6047%" y="517" width="0.1318%" height="15" fill="rgb(226,211,11)" fg:x="756" fg:w="1"/><text x="99.8547%" y="527.50"></text></g><g><title>dl_main (1 samples, 0.13%)</title><rect x="99.6047%" y="501" width="0.1318%" height="15" fill="rgb(236,162,54)" fg:x="756" fg:w="1"/><text x="99.8547%" y="511.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.13%)</title><rect x="99.6047%" y="485" width="0.1318%" height="15" fill="rgb(220,229,9)" fg:x="756" fg:w="1"/><text x="99.8547%" y="495.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.13%)</title><rect x="99.6047%" y="469" width="0.1318%" height="15" fill="rgb(250,87,22)" fg:x="756" fg:w="1"/><text x="99.8547%" y="479.50"></text></g><g><title>openaux (1 samples, 0.13%)</title><rect x="99.6047%" y="453" width="0.1318%" height="15" fill="rgb(239,43,17)" fg:x="756" fg:w="1"/><text x="99.8547%" y="463.50"></text></g><g><title>_dl_map_object (1 samples, 0.13%)</title><rect x="99.6047%" y="437" width="0.1318%" height="15" fill="rgb(231,177,25)" fg:x="756" fg:w="1"/><text x="99.8547%" y="447.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.13%)</title><rect x="99.6047%" y="421" width="0.1318%" height="15" fill="rgb(219,179,1)" fg:x="756" fg:w="1"/><text x="99.8547%" y="431.50"></text></g><g><title>_dl_map_segments (1 samples, 0.13%)</title><rect x="99.6047%" y="405" width="0.1318%" height="15" fill="rgb(238,219,53)" fg:x="756" fg:w="1"/><text x="99.8547%" y="415.50"></text></g><g><title>memset (1 samples, 0.13%)</title><rect x="99.6047%" y="389" width="0.1318%" height="15" fill="rgb(232,167,36)" fg:x="756" fg:w="1"/><text x="99.8547%" y="399.50"></text></g><g><title>page_fault (1 samples, 0.13%)</title><rect x="99.6047%" y="373" width="0.1318%" height="15" fill="rgb(244,19,51)" fg:x="756" fg:w="1"/><text x="99.8547%" y="383.50"></text></g><g><title>do_page_fault (1 samples, 0.13%)</title><rect x="99.6047%" y="357" width="0.1318%" height="15" fill="rgb(224,6,22)" fg:x="756" fg:w="1"/><text x="99.8547%" y="367.50"></text></g><g><title>__do_page_fault (1 samples, 0.13%)</title><rect x="99.6047%" y="341" width="0.1318%" height="15" fill="rgb(224,145,5)" fg:x="756" fg:w="1"/><text x="99.8547%" y="351.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.13%)</title><rect x="99.6047%" y="325" width="0.1318%" height="15" fill="rgb(234,130,49)" fg:x="756" fg:w="1"/><text x="99.8547%" y="335.50"></text></g><g><title>handle_mm_fault (1 samples, 0.13%)</title><rect x="99.6047%" y="309" width="0.1318%" height="15" fill="rgb(254,6,2)" fg:x="756" fg:w="1"/><text x="99.8547%" y="319.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.13%)</title><rect x="99.6047%" y="293" width="0.1318%" height="15" fill="rgb(208,96,46)" fg:x="756" fg:w="1"/><text x="99.8547%" y="303.50"></text></g><g><title>do_fault (1 samples, 0.13%)</title><rect x="99.6047%" y="277" width="0.1318%" height="15" fill="rgb(239,3,39)" fg:x="756" fg:w="1"/><text x="99.8547%" y="287.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.13%)</title><rect x="99.6047%" y="261" width="0.1318%" height="15" fill="rgb(233,210,1)" fg:x="756" fg:w="1"/><text x="99.8547%" y="271.50"></text></g><g><title>get_vma_policy.part.0 (1 samples, 0.13%)</title><rect x="99.6047%" y="245" width="0.1318%" height="15" fill="rgb(244,137,37)" fg:x="756" fg:w="1"/><text x="99.8547%" y="255.50"></text></g><g><title>get_task_policy.part.0 (1 samples, 0.13%)</title><rect x="99.6047%" y="229" width="0.1318%" height="15" fill="rgb(240,136,2)" fg:x="756" fg:w="1"/><text x="99.8547%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.13%)</title><rect x="99.7365%" y="565" width="0.1318%" height="15" fill="rgb(239,18,37)" fg:x="757" fg:w="1"/><text x="99.9865%" y="575.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="99.7365%" y="549" width="0.1318%" height="15" fill="rgb(218,185,22)" fg:x="757" fg:w="1"/><text x="99.9865%" y="559.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.13%)</title><rect x="99.7365%" y="533" width="0.1318%" height="15" fill="rgb(225,218,4)" fg:x="757" fg:w="1"/><text x="99.9865%" y="543.50"></text></g><g><title>__do_execve_file.isra.0 (1 samples, 0.13%)</title><rect x="99.7365%" y="517" width="0.1318%" height="15" fill="rgb(230,182,32)" fg:x="757" fg:w="1"/><text x="99.9865%" y="527.50"></text></g><g><title>search_binary_handler (1 samples, 0.13%)</title><rect x="99.7365%" y="501" width="0.1318%" height="15" fill="rgb(242,56,43)" fg:x="757" fg:w="1"/><text x="99.9865%" y="511.50"></text></g><g><title>load_elf_binary (1 samples, 0.13%)</title><rect x="99.7365%" y="485" width="0.1318%" height="15" fill="rgb(233,99,24)" fg:x="757" fg:w="1"/><text x="99.9865%" y="495.50"></text></g><g><title>setup_arg_pages (1 samples, 0.13%)</title><rect x="99.7365%" y="469" width="0.1318%" height="15" fill="rgb(234,209,42)" fg:x="757" fg:w="1"/><text x="99.9865%" y="479.50"></text></g><g><title>shift_arg_pages (1 samples, 0.13%)</title><rect x="99.7365%" y="453" width="0.1318%" height="15" fill="rgb(227,7,12)" fg:x="757" fg:w="1"/><text x="99.9865%" y="463.50"></text></g><g><title>move_page_tables (1 samples, 0.13%)</title><rect x="99.7365%" y="437" width="0.1318%" height="15" fill="rgb(245,203,43)" fg:x="757" fg:w="1"/><text x="99.9865%" y="447.50"></text></g><g><title>__pte_alloc (1 samples, 0.13%)</title><rect x="99.7365%" y="421" width="0.1318%" height="15" fill="rgb(238,205,33)" fg:x="757" fg:w="1"/><text x="99.9865%" y="431.50"></text></g><g><title>pte_alloc_one (1 samples, 0.13%)</title><rect x="99.7365%" y="405" width="0.1318%" height="15" fill="rgb(231,56,7)" fg:x="757" fg:w="1"/><text x="99.9865%" y="415.50"></text></g><g><title>alloc_pages_current (1 samples, 0.13%)</title><rect x="99.7365%" y="389" width="0.1318%" height="15" fill="rgb(244,186,29)" fg:x="757" fg:w="1"/><text x="99.9865%" y="399.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.13%)</title><rect x="99.7365%" y="373" width="0.1318%" height="15" fill="rgb(234,111,31)" fg:x="757" fg:w="1"/><text x="99.9865%" y="383.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.13%)</title><rect x="99.7365%" y="357" width="0.1318%" height="15" fill="rgb(241,149,10)" fg:x="757" fg:w="1"/><text x="99.9865%" y="367.50"></text></g><g><title>prep_new_page (1 samples, 0.13%)</title><rect x="99.7365%" y="341" width="0.1318%" height="15" fill="rgb(249,206,44)" fg:x="757" fg:w="1"/><text x="99.9865%" y="351.50"></text></g><g><title>all (759 samples, 100%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(251,153,30)" fg:x="0" fg:w="759"/><text x="0.2500%" y="607.50"></text></g><g><title>receiver (754 samples, 99.34%)</title><rect x="0.6588%" y="581" width="99.3412%" height="15" fill="rgb(239,152,38)" fg:x="5" fg:w="754"/><text x="0.9088%" y="591.50">receiver</text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.13%)</title><rect x="99.8682%" y="565" width="0.1318%" height="15" fill="rgb(249,139,47)" fg:x="758" fg:w="1"/><text x="100.1182%" y="575.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.13%)</title><rect x="99.8682%" y="549" width="0.1318%" height="15" fill="rgb(244,64,35)" fg:x="758" fg:w="1"/><text x="100.1182%" y="559.50"></text></g></svg></svg>