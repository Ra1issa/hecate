<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="693.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="890"><g><title>perf (5 samples, 0.56%)</title><rect x="0.0000%" y="645" width="0.5618%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.56%)</title><rect x="0.0000%" y="629" width="0.5618%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="639.50"></text></g><g><title>do_syscall_64 (5 samples, 0.56%)</title><rect x="0.0000%" y="613" width="0.5618%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="623.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.56%)</title><rect x="0.0000%" y="597" width="0.5618%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="607.50"></text></g><g><title>__do_execve_file.isra.0 (5 samples, 0.56%)</title><rect x="0.0000%" y="581" width="0.5618%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="591.50"></text></g><g><title>search_binary_handler (5 samples, 0.56%)</title><rect x="0.0000%" y="565" width="0.5618%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="575.50"></text></g><g><title>load_elf_binary (5 samples, 0.56%)</title><rect x="0.0000%" y="549" width="0.5618%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="559.50"></text></g><g><title>setup_new_exec (5 samples, 0.56%)</title><rect x="0.0000%" y="533" width="0.5618%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="5"/><text x="0.2500%" y="543.50"></text></g><g><title>perf_event_exec (5 samples, 0.56%)</title><rect x="0.0000%" y="517" width="0.5618%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="527.50"></text></g><g><title>ctx_resched (5 samples, 0.56%)</title><rect x="0.0000%" y="501" width="0.5618%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="5"/><text x="0.2500%" y="511.50"></text></g><g><title>perf_pmu_enable.part.0 (5 samples, 0.56%)</title><rect x="0.0000%" y="485" width="0.5618%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="5"/><text x="0.2500%" y="495.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.56%)</title><rect x="0.0000%" y="469" width="0.5618%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="5"/><text x="0.2500%" y="479.50"></text></g><g><title>intel_tfa_pmu_enable_all (5 samples, 0.56%)</title><rect x="0.0000%" y="453" width="0.5618%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="5"/><text x="0.2500%" y="463.50"></text></g><g><title>native_write_msr (5 samples, 0.56%)</title><rect x="0.0000%" y="437" width="0.5618%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="5"/><text x="0.2500%" y="447.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.11%)</title><rect x="0.5618%" y="629" width="0.1124%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="0.8118%" y="639.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (1 samples, 0.11%)</title><rect x="0.6742%" y="613" width="0.1124%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="0.9242%" y="623.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (2 samples, 0.22%)</title><rect x="0.7865%" y="613" width="0.2247%" height="15" fill="rgb(225,20,46)" fg:x="7" fg:w="2"/><text x="1.0365%" y="623.50"></text></g><g><title>[[heap]] (8 samples, 0.90%)</title><rect x="0.6742%" y="629" width="0.8989%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="8"/><text x="0.9242%" y="639.50"></text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (5 samples, 0.56%)</title><rect x="1.0112%" y="613" width="0.5618%" height="15" fill="rgb(221,200,47)" fg:x="9" fg:w="5"/><text x="1.2612%" y="623.50"></text></g><g><title>&lt;u16 as subtle::ConstantTimeEq&gt;::ct_eq (2 samples, 0.22%)</title><rect x="1.3483%" y="597" width="0.2247%" height="15" fill="rgb(226,26,5)" fg:x="12" fg:w="2"/><text x="1.5983%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.22%)</title><rect x="1.3483%" y="581" width="0.2247%" height="15" fill="rgb(249,33,26)" fg:x="12" fg:w="2"/><text x="1.5983%" y="591.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (2 samples, 0.22%)</title><rect x="1.3483%" y="565" width="0.2247%" height="15" fill="rgb(235,183,28)" fg:x="12" fg:w="2"/><text x="1.5983%" y="575.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (4 samples, 0.45%)</title><rect x="1.5730%" y="613" width="0.4494%" height="15" fill="rgb(221,5,38)" fg:x="14" fg:w="4"/><text x="1.8230%" y="623.50"></text></g><g><title>interrupt_entry (1 samples, 0.11%)</title><rect x="1.9101%" y="597" width="0.1124%" height="15" fill="rgb(247,18,42)" fg:x="17" fg:w="1"/><text x="2.1601%" y="607.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (2 samples, 0.22%)</title><rect x="2.0225%" y="613" width="0.2247%" height="15" fill="rgb(241,131,45)" fg:x="18" fg:w="2"/><text x="2.2725%" y="623.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (1 samples, 0.11%)</title><rect x="2.1348%" y="597" width="0.1124%" height="15" fill="rgb(249,31,29)" fg:x="19" fg:w="1"/><text x="2.3848%" y="607.50"></text></g><g><title>[[stack]] (8 samples, 0.90%)</title><rect x="1.5730%" y="629" width="0.8989%" height="15" fill="rgb(225,111,53)" fg:x="14" fg:w="8"/><text x="1.8230%" y="639.50"></text></g><g><title>sha2::sha256::soft::compress (2 samples, 0.22%)</title><rect x="2.2472%" y="613" width="0.2247%" height="15" fill="rgb(238,160,17)" fg:x="20" fg:w="2"/><text x="2.4972%" y="623.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 0.22%)</title><rect x="2.2472%" y="597" width="0.2247%" height="15" fill="rgb(214,148,48)" fg:x="20" fg:w="2"/><text x="2.4972%" y="607.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (6 samples, 0.67%)</title><rect x="2.4719%" y="613" width="0.6742%" height="15" fill="rgb(232,36,49)" fg:x="22" fg:w="6"/><text x="2.7219%" y="623.50"></text></g><g><title>[sender_send] (10 samples, 1.12%)</title><rect x="2.4719%" y="629" width="1.1236%" height="15" fill="rgb(209,103,24)" fg:x="22" fg:w="10"/><text x="2.7219%" y="639.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (4 samples, 0.45%)</title><rect x="3.1461%" y="613" width="0.4494%" height="15" fill="rgb(229,88,8)" fg:x="28" fg:w="4"/><text x="3.3961%" y="623.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (7 samples, 0.79%)</title><rect x="3.5955%" y="613" width="0.7865%" height="15" fill="rgb(213,181,19)" fg:x="32" fg:w="7"/><text x="3.8455%" y="623.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (1 samples, 0.11%)</title><rect x="4.3820%" y="613" width="0.1124%" height="15" fill="rgb(254,191,54)" fg:x="39" fg:w="1"/><text x="4.6320%" y="623.50"></text></g><g><title>&lt;curve25519_dalek::scalar::Scalar as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="4.4944%" y="613" width="0.1124%" height="15" fill="rgb(241,83,37)" fg:x="40" fg:w="1"/><text x="4.7444%" y="623.50"></text></g><g><title>[sender_send] (1 samples, 0.11%)</title><rect x="4.6067%" y="613" width="0.1124%" height="15" fill="rgb(233,36,39)" fg:x="41" fg:w="1"/><text x="4.8567%" y="623.50"></text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.11%)</title><rect x="4.6067%" y="597" width="0.1124%" height="15" fill="rgb(226,3,54)" fg:x="41" fg:w="1"/><text x="4.8567%" y="607.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.11%)</title><rect x="4.6067%" y="581" width="0.1124%" height="15" fill="rgb(245,192,40)" fg:x="41" fg:w="1"/><text x="4.8567%" y="591.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square2 (10 samples, 1.12%)</title><rect x="4.7191%" y="213" width="1.1236%" height="15" fill="rgb(238,167,29)" fg:x="42" fg:w="10"/><text x="4.9691%" y="223.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (10 samples, 1.12%)</title><rect x="4.7191%" y="197" width="1.1236%" height="15" fill="rgb(232,182,51)" fg:x="42" fg:w="10"/><text x="4.9691%" y="207.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (6 samples, 0.67%)</title><rect x="5.1685%" y="181" width="0.6742%" height="15" fill="rgb(231,60,39)" fg:x="46" fg:w="6"/><text x="5.4185%" y="191.50"></text></g><g><title>__libc_start_main (50 samples, 5.62%)</title><rect x="4.7191%" y="613" width="5.6180%" height="15" fill="rgb(208,69,12)" fg:x="42" fg:w="50"/><text x="4.9691%" y="623.50">__libc_..</text></g><g><title>main (50 samples, 5.62%)</title><rect x="4.7191%" y="597" width="5.6180%" height="15" fill="rgb(235,93,37)" fg:x="42" fg:w="50"/><text x="4.9691%" y="607.50">main</text></g><g><title>std::rt::lang_start_internal (50 samples, 5.62%)</title><rect x="4.7191%" y="581" width="5.6180%" height="15" fill="rgb(213,116,39)" fg:x="42" fg:w="50"/><text x="4.9691%" y="591.50">std::rt..</text></g><g><title>std::panic::catch_unwind (50 samples, 5.62%)</title><rect x="4.7191%" y="565" width="5.6180%" height="15" fill="rgb(222,207,29)" fg:x="42" fg:w="50"/><text x="4.9691%" y="575.50">std::pa..</text></g><g><title>std::panicking::try (50 samples, 5.62%)</title><rect x="4.7191%" y="549" width="5.6180%" height="15" fill="rgb(206,96,30)" fg:x="42" fg:w="50"/><text x="4.9691%" y="559.50">std::pa..</text></g><g><title>std::panicking::try::do_call (50 samples, 5.62%)</title><rect x="4.7191%" y="533" width="5.6180%" height="15" fill="rgb(218,138,4)" fg:x="42" fg:w="50"/><text x="4.9691%" y="543.50">std::pa..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (50 samples, 5.62%)</title><rect x="4.7191%" y="517" width="5.6180%" height="15" fill="rgb(250,191,14)" fg:x="42" fg:w="50"/><text x="4.9691%" y="527.50">std::rt..</text></g><g><title>std::panic::catch_unwind (50 samples, 5.62%)</title><rect x="4.7191%" y="501" width="5.6180%" height="15" fill="rgb(239,60,40)" fg:x="42" fg:w="50"/><text x="4.9691%" y="511.50">std::pa..</text></g><g><title>std::panicking::try (50 samples, 5.62%)</title><rect x="4.7191%" y="485" width="5.6180%" height="15" fill="rgb(206,27,48)" fg:x="42" fg:w="50"/><text x="4.9691%" y="495.50">std::pa..</text></g><g><title>std::panicking::try::do_call (50 samples, 5.62%)</title><rect x="4.7191%" y="469" width="5.6180%" height="15" fill="rgb(225,35,8)" fg:x="42" fg:w="50"/><text x="4.9691%" y="479.50">std::pa..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (50 samples, 5.62%)</title><rect x="4.7191%" y="453" width="5.6180%" height="15" fill="rgb(250,213,24)" fg:x="42" fg:w="50"/><text x="4.9691%" y="463.50">core::o..</text></g><g><title>std::rt::lang_start::{{closure}} (50 samples, 5.62%)</title><rect x="4.7191%" y="437" width="5.6180%" height="15" fill="rgb(247,123,22)" fg:x="42" fg:w="50"/><text x="4.9691%" y="447.50">std::rt..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (50 samples, 5.62%)</title><rect x="4.7191%" y="421" width="5.6180%" height="15" fill="rgb(231,138,38)" fg:x="42" fg:w="50"/><text x="4.9691%" y="431.50">std::sy..</text></g><g><title>core::ops::function::FnOnce::call_once (50 samples, 5.62%)</title><rect x="4.7191%" y="405" width="5.6180%" height="15" fill="rgb(231,145,46)" fg:x="42" fg:w="50"/><text x="4.9691%" y="415.50">core::o..</text></g><g><title>sender_send::main (50 samples, 5.62%)</title><rect x="4.7191%" y="389" width="5.6180%" height="15" fill="rgb(251,118,11)" fg:x="42" fg:w="50"/><text x="4.9691%" y="399.50">sender_..</text></g><g><title>hecate::sender::generate_frank (50 samples, 5.62%)</title><rect x="4.7191%" y="373" width="5.6180%" height="15" fill="rgb(217,147,25)" fg:x="42" fg:w="50"/><text x="4.9691%" y="383.50">hecate:..</text></g><g><title>poksho::sign::sign (50 samples, 5.62%)</title><rect x="4.7191%" y="357" width="5.6180%" height="15" fill="rgb(247,81,37)" fg:x="42" fg:w="50"/><text x="4.9691%" y="367.50">poksho:..</text></g><g><title>poksho::statement::Statement::prove (50 samples, 5.62%)</title><rect x="4.7191%" y="341" width="5.6180%" height="15" fill="rgb(209,12,38)" fg:x="42" fg:w="50"/><text x="4.9691%" y="351.50">poksho:..</text></g><g><title>poksho::statement::Statement::verify_proof (50 samples, 5.62%)</title><rect x="4.7191%" y="325" width="5.6180%" height="15" fill="rgb(227,1,9)" fg:x="42" fg:w="50"/><text x="4.9691%" y="335.50">poksho:..</text></g><g><title>poksho::statement::Statement::homomorphism_with_subtraction (50 samples, 5.62%)</title><rect x="4.7191%" y="309" width="5.6180%" height="15" fill="rgb(248,47,43)" fg:x="42" fg:w="50"/><text x="4.9691%" y="319.50">poksho:..</text></g><g><title>&lt;curve25519_dalek::ristretto::RistrettoPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (50 samples, 5.62%)</title><rect x="4.7191%" y="293" width="5.6180%" height="15" fill="rgb(221,10,30)" fg:x="42" fg:w="50"/><text x="4.9691%" y="303.50">&lt;curve2..</text></g><g><title>&lt;curve25519_dalek::edwards::EdwardsPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (50 samples, 5.62%)</title><rect x="4.7191%" y="277" width="5.6180%" height="15" fill="rgb(210,229,1)" fg:x="42" fg:w="50"/><text x="4.9691%" y="287.50">&lt;curve2..</text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (50 samples, 5.62%)</title><rect x="4.7191%" y="261" width="5.6180%" height="15" fill="rgb(222,148,37)" fg:x="42" fg:w="50"/><text x="4.9691%" y="271.50">&lt;curve2..</text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (50 samples, 5.62%)</title><rect x="4.7191%" y="245" width="5.6180%" height="15" fill="rgb(234,67,33)" fg:x="42" fg:w="50"/><text x="4.9691%" y="255.50">curve25..</text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (50 samples, 5.62%)</title><rect x="4.7191%" y="229" width="5.6180%" height="15" fill="rgb(247,98,35)" fg:x="42" fg:w="50"/><text x="4.9691%" y="239.50">curve25..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (40 samples, 4.49%)</title><rect x="5.8427%" y="213" width="4.4944%" height="15" fill="rgb(247,138,52)" fg:x="52" fg:w="40"/><text x="6.0927%" y="223.50">curve..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (40 samples, 4.49%)</title><rect x="5.8427%" y="197" width="4.4944%" height="15" fill="rgb(213,79,30)" fg:x="52" fg:w="40"/><text x="6.0927%" y="207.50">curve..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (12 samples, 1.35%)</title><rect x="8.9888%" y="181" width="1.3483%" height="15" fill="rgb(246,177,23)" fg:x="80" fg:w="12"/><text x="9.2388%" y="191.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.22%)</title><rect x="10.3371%" y="613" width="0.2247%" height="15" fill="rgb(230,62,27)" fg:x="92" fg:w="2"/><text x="10.5871%" y="623.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (2 samples, 0.22%)</title><rect x="10.5618%" y="613" width="0.2247%" height="15" fill="rgb(216,154,8)" fg:x="94" fg:w="2"/><text x="10.8118%" y="623.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (2 samples, 0.22%)</title><rect x="10.7865%" y="613" width="0.2247%" height="15" fill="rgb(244,35,45)" fg:x="96" fg:w="2"/><text x="11.0365%" y="623.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (8 samples, 0.90%)</title><rect x="11.0112%" y="613" width="0.8989%" height="15" fill="rgb(251,115,12)" fg:x="98" fg:w="8"/><text x="11.2612%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="11.9101%" y="613" width="0.1124%" height="15" fill="rgb(240,54,50)" fg:x="106" fg:w="1"/><text x="12.1601%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.11%)</title><rect x="11.9101%" y="597" width="0.1124%" height="15" fill="rgb(233,84,52)" fg:x="106" fg:w="1"/><text x="12.1601%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.11%)</title><rect x="11.9101%" y="581" width="0.1124%" height="15" fill="rgb(207,117,47)" fg:x="106" fg:w="1"/><text x="12.1601%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.11%)</title><rect x="11.9101%" y="565" width="0.1124%" height="15" fill="rgb(249,43,39)" fg:x="106" fg:w="1"/><text x="12.1601%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.11%)</title><rect x="11.9101%" y="549" width="0.1124%" height="15" fill="rgb(209,38,44)" fg:x="106" fg:w="1"/><text x="12.1601%" y="559.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.11%)</title><rect x="11.9101%" y="533" width="0.1124%" height="15" fill="rgb(236,212,23)" fg:x="106" fg:w="1"/><text x="12.1601%" y="543.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (1 samples, 0.11%)</title><rect x="12.0225%" y="229" width="0.1124%" height="15" fill="rgb(242,79,21)" fg:x="107" fg:w="1"/><text x="12.2725%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.11%)</title><rect x="12.0225%" y="213" width="0.1124%" height="15" fill="rgb(211,96,35)" fg:x="107" fg:w="1"/><text x="12.2725%" y="223.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (1 samples, 0.11%)</title><rect x="12.0225%" y="197" width="0.1124%" height="15" fill="rgb(253,215,40)" fg:x="107" fg:w="1"/><text x="12.2725%" y="207.50"></text></g><g><title>hecate::sender::generate_frank (2 samples, 0.22%)</title><rect x="12.0225%" y="613" width="0.2247%" height="15" fill="rgb(211,81,21)" fg:x="107" fg:w="2"/><text x="12.2725%" y="623.50"></text></g><g><title>poksho::sign::sign (2 samples, 0.22%)</title><rect x="12.0225%" y="597" width="0.2247%" height="15" fill="rgb(208,190,38)" fg:x="107" fg:w="2"/><text x="12.2725%" y="607.50"></text></g><g><title>poksho::statement::Statement::prove (2 samples, 0.22%)</title><rect x="12.0225%" y="581" width="0.2247%" height="15" fill="rgb(235,213,38)" fg:x="107" fg:w="2"/><text x="12.2725%" y="591.50"></text></g><g><title>poksho::statement::Statement::homomorphism_with_subtraction (2 samples, 0.22%)</title><rect x="12.0225%" y="565" width="0.2247%" height="15" fill="rgb(237,122,38)" fg:x="107" fg:w="2"/><text x="12.2725%" y="575.50"></text></g><g><title>&lt;curve25519_dalek::ristretto::RistrettoPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (2 samples, 0.22%)</title><rect x="12.0225%" y="549" width="0.2247%" height="15" fill="rgb(244,218,35)" fg:x="107" fg:w="2"/><text x="12.2725%" y="559.50"></text></g><g><title>&lt;curve25519_dalek::edwards::EdwardsPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (2 samples, 0.22%)</title><rect x="12.0225%" y="533" width="0.2247%" height="15" fill="rgb(240,68,47)" fg:x="107" fg:w="2"/><text x="12.2725%" y="543.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (2 samples, 0.22%)</title><rect x="12.0225%" y="517" width="0.2247%" height="15" fill="rgb(210,16,53)" fg:x="107" fg:w="2"/><text x="12.2725%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.22%)</title><rect x="12.0225%" y="501" width="0.2247%" height="15" fill="rgb(235,124,12)" fg:x="107" fg:w="2"/><text x="12.2725%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="12.0225%" y="485" width="0.2247%" height="15" fill="rgb(224,169,11)" fg:x="107" fg:w="2"/><text x="12.2725%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="12.0225%" y="469" width="0.2247%" height="15" fill="rgb(250,166,2)" fg:x="107" fg:w="2"/><text x="12.2725%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="12.0225%" y="453" width="0.2247%" height="15" fill="rgb(242,216,29)" fg:x="107" fg:w="2"/><text x="12.2725%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.22%)</title><rect x="12.0225%" y="437" width="0.2247%" height="15" fill="rgb(230,116,27)" fg:x="107" fg:w="2"/><text x="12.2725%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.22%)</title><rect x="12.0225%" y="421" width="0.2247%" height="15" fill="rgb(228,99,48)" fg:x="107" fg:w="2"/><text x="12.2725%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="12.0225%" y="405" width="0.2247%" height="15" fill="rgb(253,11,6)" fg:x="107" fg:w="2"/><text x="12.2725%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="12.0225%" y="389" width="0.2247%" height="15" fill="rgb(247,143,39)" fg:x="107" fg:w="2"/><text x="12.2725%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="12.0225%" y="373" width="0.2247%" height="15" fill="rgb(236,97,10)" fg:x="107" fg:w="2"/><text x="12.2725%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="12.0225%" y="357" width="0.2247%" height="15" fill="rgb(233,208,19)" fg:x="107" fg:w="2"/><text x="12.2725%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.22%)</title><rect x="12.0225%" y="341" width="0.2247%" height="15" fill="rgb(216,164,2)" fg:x="107" fg:w="2"/><text x="12.2725%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.22%)</title><rect x="12.0225%" y="325" width="0.2247%" height="15" fill="rgb(220,129,5)" fg:x="107" fg:w="2"/><text x="12.2725%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.22%)</title><rect x="12.0225%" y="309" width="0.2247%" height="15" fill="rgb(242,17,10)" fg:x="107" fg:w="2"/><text x="12.2725%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.22%)</title><rect x="12.0225%" y="293" width="0.2247%" height="15" fill="rgb(242,107,0)" fg:x="107" fg:w="2"/><text x="12.2725%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.22%)</title><rect x="12.0225%" y="277" width="0.2247%" height="15" fill="rgb(251,28,31)" fg:x="107" fg:w="2"/><text x="12.2725%" y="287.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul::{{closure}} (2 samples, 0.22%)</title><rect x="12.0225%" y="261" width="0.2247%" height="15" fill="rgb(233,223,10)" fg:x="107" fg:w="2"/><text x="12.2725%" y="271.50"></text></g><g><title>&lt;curve25519_dalek::window::LookupTable&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (2 samples, 0.22%)</title><rect x="12.0225%" y="245" width="0.2247%" height="15" fill="rgb(215,21,27)" fg:x="107" fg:w="2"/><text x="12.2725%" y="255.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::to_projective_niels (1 samples, 0.11%)</title><rect x="12.1348%" y="229" width="0.1124%" height="15" fill="rgb(232,23,21)" fg:x="108" fg:w="1"/><text x="12.3848%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.11%)</title><rect x="12.1348%" y="213" width="0.1124%" height="15" fill="rgb(244,5,23)" fg:x="108" fg:w="1"/><text x="12.3848%" y="223.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (1 samples, 0.11%)</title><rect x="12.1348%" y="197" width="0.1124%" height="15" fill="rgb(226,81,46)" fg:x="108" fg:w="1"/><text x="12.3848%" y="207.50"></text></g><g><title>poksho::statement::Statement::homomorphism_with_subtraction (2 samples, 0.22%)</title><rect x="12.2472%" y="581" width="0.2247%" height="15" fill="rgb(247,70,30)" fg:x="109" fg:w="2"/><text x="12.4972%" y="591.50"></text></g><g><title>&lt;curve25519_dalek::ristretto::RistrettoPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (2 samples, 0.22%)</title><rect x="12.2472%" y="565" width="0.2247%" height="15" fill="rgb(212,68,19)" fg:x="109" fg:w="2"/><text x="12.4972%" y="575.50"></text></g><g><title>&lt;curve25519_dalek::edwards::EdwardsPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (2 samples, 0.22%)</title><rect x="12.2472%" y="549" width="0.2247%" height="15" fill="rgb(240,187,13)" fg:x="109" fg:w="2"/><text x="12.4972%" y="559.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (2 samples, 0.22%)</title><rect x="12.2472%" y="533" width="0.2247%" height="15" fill="rgb(223,113,26)" fg:x="109" fg:w="2"/><text x="12.4972%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.22%)</title><rect x="12.2472%" y="517" width="0.2247%" height="15" fill="rgb(206,192,2)" fg:x="109" fg:w="2"/><text x="12.4972%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="12.2472%" y="501" width="0.2247%" height="15" fill="rgb(241,108,4)" fg:x="109" fg:w="2"/><text x="12.4972%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="12.2472%" y="485" width="0.2247%" height="15" fill="rgb(247,173,49)" fg:x="109" fg:w="2"/><text x="12.4972%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="12.2472%" y="469" width="0.2247%" height="15" fill="rgb(224,114,35)" fg:x="109" fg:w="2"/><text x="12.4972%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.22%)</title><rect x="12.2472%" y="453" width="0.2247%" height="15" fill="rgb(245,159,27)" fg:x="109" fg:w="2"/><text x="12.4972%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.22%)</title><rect x="12.2472%" y="437" width="0.2247%" height="15" fill="rgb(245,172,44)" fg:x="109" fg:w="2"/><text x="12.4972%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="12.2472%" y="421" width="0.2247%" height="15" fill="rgb(236,23,11)" fg:x="109" fg:w="2"/><text x="12.4972%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="12.2472%" y="405" width="0.2247%" height="15" fill="rgb(205,117,38)" fg:x="109" fg:w="2"/><text x="12.4972%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="12.2472%" y="389" width="0.2247%" height="15" fill="rgb(237,72,25)" fg:x="109" fg:w="2"/><text x="12.4972%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="12.2472%" y="373" width="0.2247%" height="15" fill="rgb(244,70,9)" fg:x="109" fg:w="2"/><text x="12.4972%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.22%)</title><rect x="12.2472%" y="357" width="0.2247%" height="15" fill="rgb(217,125,39)" fg:x="109" fg:w="2"/><text x="12.4972%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.22%)</title><rect x="12.2472%" y="341" width="0.2247%" height="15" fill="rgb(235,36,10)" fg:x="109" fg:w="2"/><text x="12.4972%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.22%)</title><rect x="12.2472%" y="325" width="0.2247%" height="15" fill="rgb(251,123,47)" fg:x="109" fg:w="2"/><text x="12.4972%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.22%)</title><rect x="12.2472%" y="309" width="0.2247%" height="15" fill="rgb(221,13,13)" fg:x="109" fg:w="2"/><text x="12.4972%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.22%)</title><rect x="12.2472%" y="293" width="0.2247%" height="15" fill="rgb(238,131,9)" fg:x="109" fg:w="2"/><text x="12.4972%" y="303.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul::{{closure}} (2 samples, 0.22%)</title><rect x="12.2472%" y="277" width="0.2247%" height="15" fill="rgb(211,50,8)" fg:x="109" fg:w="2"/><text x="12.4972%" y="287.50"></text></g><g><title>&lt;curve25519_dalek::window::LookupTable&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (2 samples, 0.22%)</title><rect x="12.2472%" y="261" width="0.2247%" height="15" fill="rgb(245,182,24)" fg:x="109" fg:w="2"/><text x="12.4972%" y="271.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (2 samples, 0.22%)</title><rect x="12.2472%" y="245" width="0.2247%" height="15" fill="rgb(242,14,37)" fg:x="109" fg:w="2"/><text x="12.4972%" y="255.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.22%)</title><rect x="12.2472%" y="229" width="0.2247%" height="15" fill="rgb(246,228,12)" fg:x="109" fg:w="2"/><text x="12.4972%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (1 samples, 0.11%)</title><rect x="12.3596%" y="213" width="0.1124%" height="15" fill="rgb(213,55,15)" fg:x="110" fg:w="1"/><text x="12.6096%" y="223.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.22%)</title><rect x="12.4719%" y="229" width="0.2247%" height="15" fill="rgb(209,9,3)" fg:x="111" fg:w="2"/><text x="12.7219%" y="239.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (1 samples, 0.11%)</title><rect x="12.6966%" y="229" width="0.1124%" height="15" fill="rgb(230,59,30)" fg:x="113" fg:w="1"/><text x="12.9466%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.11%)</title><rect x="12.6966%" y="213" width="0.1124%" height="15" fill="rgb(209,121,21)" fg:x="113" fg:w="1"/><text x="12.9466%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.67%)</title><rect x="12.4719%" y="357" width="0.6742%" height="15" fill="rgb(220,109,13)" fg:x="111" fg:w="6"/><text x="12.7219%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.67%)</title><rect x="12.4719%" y="341" width="0.6742%" height="15" fill="rgb(232,18,1)" fg:x="111" fg:w="6"/><text x="12.7219%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.67%)</title><rect x="12.4719%" y="325" width="0.6742%" height="15" fill="rgb(215,41,42)" fg:x="111" fg:w="6"/><text x="12.7219%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.67%)</title><rect x="12.4719%" y="309" width="0.6742%" height="15" fill="rgb(224,123,36)" fg:x="111" fg:w="6"/><text x="12.7219%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.67%)</title><rect x="12.4719%" y="293" width="0.6742%" height="15" fill="rgb(240,125,3)" fg:x="111" fg:w="6"/><text x="12.7219%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.67%)</title><rect x="12.4719%" y="277" width="0.6742%" height="15" fill="rgb(205,98,50)" fg:x="111" fg:w="6"/><text x="12.7219%" y="287.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul::{{closure}} (6 samples, 0.67%)</title><rect x="12.4719%" y="261" width="0.6742%" height="15" fill="rgb(205,185,37)" fg:x="111" fg:w="6"/><text x="12.7219%" y="271.50"></text></g><g><title>&lt;curve25519_dalek::window::LookupTable&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (6 samples, 0.67%)</title><rect x="12.4719%" y="245" width="0.6742%" height="15" fill="rgb(238,207,15)" fg:x="111" fg:w="6"/><text x="12.7219%" y="255.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::to_projective_niels (3 samples, 0.34%)</title><rect x="12.8090%" y="229" width="0.3371%" height="15" fill="rgb(213,199,42)" fg:x="114" fg:w="3"/><text x="13.0590%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (3 samples, 0.34%)</title><rect x="12.8090%" y="213" width="0.3371%" height="15" fill="rgb(235,201,11)" fg:x="114" fg:w="3"/><text x="13.0590%" y="223.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (3 samples, 0.34%)</title><rect x="12.8090%" y="197" width="0.3371%" height="15" fill="rgb(207,46,11)" fg:x="114" fg:w="3"/><text x="13.0590%" y="207.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (1 samples, 0.11%)</title><rect x="13.1461%" y="277" width="0.1124%" height="15" fill="rgb(241,35,35)" fg:x="117" fg:w="1"/><text x="13.3961%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (1 samples, 0.11%)</title><rect x="13.1461%" y="261" width="0.1124%" height="15" fill="rgb(243,32,47)" fg:x="117" fg:w="1"/><text x="13.3961%" y="271.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (1 samples, 0.11%)</title><rect x="13.1461%" y="245" width="0.1124%" height="15" fill="rgb(247,202,23)" fg:x="117" fg:w="1"/><text x="13.3961%" y="255.50"></text></g><g><title>poksho::sign::sign (12 samples, 1.35%)</title><rect x="12.2472%" y="613" width="1.3483%" height="15" fill="rgb(219,102,11)" fg:x="109" fg:w="12"/><text x="12.4972%" y="623.50"></text></g><g><title>poksho::statement::Statement::prove (12 samples, 1.35%)</title><rect x="12.2472%" y="597" width="1.3483%" height="15" fill="rgb(243,110,44)" fg:x="109" fg:w="12"/><text x="12.4972%" y="607.50"></text></g><g><title>poksho::statement::Statement::verify_proof (10 samples, 1.12%)</title><rect x="12.4719%" y="581" width="1.1236%" height="15" fill="rgb(222,74,54)" fg:x="111" fg:w="10"/><text x="12.7219%" y="591.50"></text></g><g><title>poksho::statement::Statement::homomorphism_with_subtraction (10 samples, 1.12%)</title><rect x="12.4719%" y="565" width="1.1236%" height="15" fill="rgb(216,99,12)" fg:x="111" fg:w="10"/><text x="12.7219%" y="575.50"></text></g><g><title>&lt;curve25519_dalek::ristretto::RistrettoPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (10 samples, 1.12%)</title><rect x="12.4719%" y="549" width="1.1236%" height="15" fill="rgb(226,22,26)" fg:x="111" fg:w="10"/><text x="12.7219%" y="559.50"></text></g><g><title>&lt;curve25519_dalek::edwards::EdwardsPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (10 samples, 1.12%)</title><rect x="12.4719%" y="533" width="1.1236%" height="15" fill="rgb(217,163,10)" fg:x="111" fg:w="10"/><text x="12.7219%" y="543.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (10 samples, 1.12%)</title><rect x="12.4719%" y="517" width="1.1236%" height="15" fill="rgb(213,25,53)" fg:x="111" fg:w="10"/><text x="12.7219%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 1.12%)</title><rect x="12.4719%" y="501" width="1.1236%" height="15" fill="rgb(252,105,26)" fg:x="111" fg:w="10"/><text x="12.7219%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 1.12%)</title><rect x="12.4719%" y="485" width="1.1236%" height="15" fill="rgb(220,39,43)" fg:x="111" fg:w="10"/><text x="12.7219%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 1.12%)</title><rect x="12.4719%" y="469" width="1.1236%" height="15" fill="rgb(229,68,48)" fg:x="111" fg:w="10"/><text x="12.7219%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 1.12%)</title><rect x="12.4719%" y="453" width="1.1236%" height="15" fill="rgb(252,8,32)" fg:x="111" fg:w="10"/><text x="12.7219%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 1.12%)</title><rect x="12.4719%" y="437" width="1.1236%" height="15" fill="rgb(223,20,43)" fg:x="111" fg:w="10"/><text x="12.7219%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 1.12%)</title><rect x="12.4719%" y="421" width="1.1236%" height="15" fill="rgb(229,81,49)" fg:x="111" fg:w="10"/><text x="12.7219%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 1.12%)</title><rect x="12.4719%" y="405" width="1.1236%" height="15" fill="rgb(236,28,36)" fg:x="111" fg:w="10"/><text x="12.7219%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 1.12%)</title><rect x="12.4719%" y="389" width="1.1236%" height="15" fill="rgb(249,185,26)" fg:x="111" fg:w="10"/><text x="12.7219%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 1.12%)</title><rect x="12.4719%" y="373" width="1.1236%" height="15" fill="rgb(249,174,33)" fg:x="111" fg:w="10"/><text x="12.7219%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.45%)</title><rect x="13.1461%" y="357" width="0.4494%" height="15" fill="rgb(233,201,37)" fg:x="117" fg:w="4"/><text x="13.3961%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.45%)</title><rect x="13.1461%" y="341" width="0.4494%" height="15" fill="rgb(221,78,26)" fg:x="117" fg:w="4"/><text x="13.3961%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.45%)</title><rect x="13.1461%" y="325" width="0.4494%" height="15" fill="rgb(250,127,30)" fg:x="117" fg:w="4"/><text x="13.3961%" y="335.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul::{{closure}} (4 samples, 0.45%)</title><rect x="13.1461%" y="309" width="0.4494%" height="15" fill="rgb(230,49,44)" fg:x="117" fg:w="4"/><text x="13.3961%" y="319.50"></text></g><g><title>&lt;curve25519_dalek::window::LookupTable&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (4 samples, 0.45%)</title><rect x="13.1461%" y="293" width="0.4494%" height="15" fill="rgb(229,67,23)" fg:x="117" fg:w="4"/><text x="13.3961%" y="303.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (3 samples, 0.34%)</title><rect x="13.2584%" y="277" width="0.3371%" height="15" fill="rgb(249,83,47)" fg:x="118" fg:w="3"/><text x="13.5084%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (3 samples, 0.34%)</title><rect x="13.2584%" y="261" width="0.3371%" height="15" fill="rgb(215,43,3)" fg:x="118" fg:w="3"/><text x="13.5084%" y="271.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (2 samples, 0.22%)</title><rect x="13.3708%" y="245" width="0.2247%" height="15" fill="rgb(238,154,13)" fg:x="119" fg:w="2"/><text x="13.6208%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.45%)</title><rect x="13.5955%" y="373" width="0.4494%" height="15" fill="rgb(219,56,2)" fg:x="121" fg:w="4"/><text x="13.8455%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.45%)</title><rect x="13.5955%" y="357" width="0.4494%" height="15" fill="rgb(233,0,4)" fg:x="121" fg:w="4"/><text x="13.8455%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.45%)</title><rect x="13.5955%" y="341" width="0.4494%" height="15" fill="rgb(235,30,7)" fg:x="121" fg:w="4"/><text x="13.8455%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.45%)</title><rect x="13.5955%" y="325" width="0.4494%" height="15" fill="rgb(250,79,13)" fg:x="121" fg:w="4"/><text x="13.8455%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.45%)</title><rect x="13.5955%" y="309" width="0.4494%" height="15" fill="rgb(211,146,34)" fg:x="121" fg:w="4"/><text x="13.8455%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.45%)</title><rect x="13.5955%" y="293" width="0.4494%" height="15" fill="rgb(228,22,38)" fg:x="121" fg:w="4"/><text x="13.8455%" y="303.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul::{{closure}} (4 samples, 0.45%)</title><rect x="13.5955%" y="277" width="0.4494%" height="15" fill="rgb(235,168,5)" fg:x="121" fg:w="4"/><text x="13.8455%" y="287.50"></text></g><g><title>&lt;curve25519_dalek::window::LookupTable&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (4 samples, 0.45%)</title><rect x="13.5955%" y="261" width="0.4494%" height="15" fill="rgb(221,155,16)" fg:x="121" fg:w="4"/><text x="13.8455%" y="271.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (4 samples, 0.45%)</title><rect x="13.5955%" y="245" width="0.4494%" height="15" fill="rgb(215,215,53)" fg:x="121" fg:w="4"/><text x="13.8455%" y="255.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (4 samples, 0.45%)</title><rect x="13.5955%" y="229" width="0.4494%" height="15" fill="rgb(223,4,10)" fg:x="121" fg:w="4"/><text x="13.8455%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (3 samples, 0.34%)</title><rect x="13.7079%" y="213" width="0.3371%" height="15" fill="rgb(234,103,6)" fg:x="122" fg:w="3"/><text x="13.9579%" y="223.50"></text></g><g><title>poksho::statement::Statement::prove (9 samples, 1.01%)</title><rect x="13.5955%" y="613" width="1.0112%" height="15" fill="rgb(227,97,0)" fg:x="121" fg:w="9"/><text x="13.8455%" y="623.50"></text></g><g><title>poksho::statement::Statement::verify_proof (9 samples, 1.01%)</title><rect x="13.5955%" y="597" width="1.0112%" height="15" fill="rgb(234,150,53)" fg:x="121" fg:w="9"/><text x="13.8455%" y="607.50"></text></g><g><title>poksho::statement::Statement::homomorphism_with_subtraction (9 samples, 1.01%)</title><rect x="13.5955%" y="581" width="1.0112%" height="15" fill="rgb(228,201,54)" fg:x="121" fg:w="9"/><text x="13.8455%" y="591.50"></text></g><g><title>&lt;curve25519_dalek::ristretto::RistrettoPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (9 samples, 1.01%)</title><rect x="13.5955%" y="565" width="1.0112%" height="15" fill="rgb(222,22,37)" fg:x="121" fg:w="9"/><text x="13.8455%" y="575.50"></text></g><g><title>&lt;curve25519_dalek::edwards::EdwardsPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (9 samples, 1.01%)</title><rect x="13.5955%" y="549" width="1.0112%" height="15" fill="rgb(237,53,32)" fg:x="121" fg:w="9"/><text x="13.8455%" y="559.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (9 samples, 1.01%)</title><rect x="13.5955%" y="533" width="1.0112%" height="15" fill="rgb(233,25,53)" fg:x="121" fg:w="9"/><text x="13.8455%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 1.01%)</title><rect x="13.5955%" y="517" width="1.0112%" height="15" fill="rgb(210,40,34)" fg:x="121" fg:w="9"/><text x="13.8455%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 1.01%)</title><rect x="13.5955%" y="501" width="1.0112%" height="15" fill="rgb(241,220,44)" fg:x="121" fg:w="9"/><text x="13.8455%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 1.01%)</title><rect x="13.5955%" y="485" width="1.0112%" height="15" fill="rgb(235,28,35)" fg:x="121" fg:w="9"/><text x="13.8455%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 1.01%)</title><rect x="13.5955%" y="469" width="1.0112%" height="15" fill="rgb(210,56,17)" fg:x="121" fg:w="9"/><text x="13.8455%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 1.01%)</title><rect x="13.5955%" y="453" width="1.0112%" height="15" fill="rgb(224,130,29)" fg:x="121" fg:w="9"/><text x="13.8455%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 1.01%)</title><rect x="13.5955%" y="437" width="1.0112%" height="15" fill="rgb(235,212,8)" fg:x="121" fg:w="9"/><text x="13.8455%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 1.01%)</title><rect x="13.5955%" y="421" width="1.0112%" height="15" fill="rgb(223,33,50)" fg:x="121" fg:w="9"/><text x="13.8455%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 1.01%)</title><rect x="13.5955%" y="405" width="1.0112%" height="15" fill="rgb(219,149,13)" fg:x="121" fg:w="9"/><text x="13.8455%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 1.01%)</title><rect x="13.5955%" y="389" width="1.0112%" height="15" fill="rgb(250,156,29)" fg:x="121" fg:w="9"/><text x="13.8455%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.56%)</title><rect x="14.0449%" y="373" width="0.5618%" height="15" fill="rgb(216,193,19)" fg:x="125" fg:w="5"/><text x="14.2949%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.56%)</title><rect x="14.0449%" y="357" width="0.5618%" height="15" fill="rgb(216,135,14)" fg:x="125" fg:w="5"/><text x="14.2949%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.56%)</title><rect x="14.0449%" y="341" width="0.5618%" height="15" fill="rgb(241,47,5)" fg:x="125" fg:w="5"/><text x="14.2949%" y="351.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul::{{closure}} (5 samples, 0.56%)</title><rect x="14.0449%" y="325" width="0.5618%" height="15" fill="rgb(233,42,35)" fg:x="125" fg:w="5"/><text x="14.2949%" y="335.50"></text></g><g><title>&lt;curve25519_dalek::window::LookupTable&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (5 samples, 0.56%)</title><rect x="14.0449%" y="309" width="0.5618%" height="15" fill="rgb(231,13,6)" fg:x="125" fg:w="5"/><text x="14.2949%" y="319.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (5 samples, 0.56%)</title><rect x="14.0449%" y="293" width="0.5618%" height="15" fill="rgb(207,181,40)" fg:x="125" fg:w="5"/><text x="14.2949%" y="303.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (5 samples, 0.56%)</title><rect x="14.0449%" y="277" width="0.5618%" height="15" fill="rgb(254,173,49)" fg:x="125" fg:w="5"/><text x="14.2949%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (4 samples, 0.45%)</title><rect x="14.1573%" y="261" width="0.4494%" height="15" fill="rgb(221,1,38)" fg:x="126" fg:w="4"/><text x="14.4073%" y="271.50"></text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.11%)</title><rect x="14.6067%" y="613" width="0.1124%" height="15" fill="rgb(206,124,46)" fg:x="130" fg:w="1"/><text x="14.8567%" y="623.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.11%)</title><rect x="14.6067%" y="597" width="0.1124%" height="15" fill="rgb(249,21,11)" fg:x="130" fg:w="1"/><text x="14.8567%" y="607.50"></text></g><g><title>[unknown] (109 samples, 12.25%)</title><rect x="3.5955%" y="629" width="12.2472%" height="15" fill="rgb(222,201,40)" fg:x="32" fg:w="109"/><text x="3.8455%" y="639.50">[unknown]</text></g><g><title>sha2::sha256::soft::schedule (10 samples, 1.12%)</title><rect x="14.7191%" y="613" width="1.1236%" height="15" fill="rgb(235,61,29)" fg:x="131" fg:w="10"/><text x="14.9691%" y="623.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.11%)</title><rect x="15.8427%" y="181" width="0.1124%" height="15" fill="rgb(219,207,3)" fg:x="141" fg:w="1"/><text x="16.0927%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.11%)</title><rect x="15.8427%" y="165" width="0.1124%" height="15" fill="rgb(222,56,46)" fg:x="141" fg:w="1"/><text x="16.0927%" y="175.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (4 samples, 0.45%)</title><rect x="15.8427%" y="357" width="0.4494%" height="15" fill="rgb(239,76,54)" fg:x="141" fg:w="4"/><text x="16.0927%" y="367.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (4 samples, 0.45%)</title><rect x="15.8427%" y="341" width="0.4494%" height="15" fill="rgb(231,124,27)" fg:x="141" fg:w="4"/><text x="16.0927%" y="351.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (4 samples, 0.45%)</title><rect x="15.8427%" y="325" width="0.4494%" height="15" fill="rgb(249,195,6)" fg:x="141" fg:w="4"/><text x="16.0927%" y="335.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (4 samples, 0.45%)</title><rect x="15.8427%" y="309" width="0.4494%" height="15" fill="rgb(237,174,47)" fg:x="141" fg:w="4"/><text x="16.0927%" y="319.50"></text></g><g><title>sha2::sha256::Engine256::finish (4 samples, 0.45%)</title><rect x="15.8427%" y="293" width="0.4494%" height="15" fill="rgb(206,201,31)" fg:x="141" fg:w="4"/><text x="16.0927%" y="303.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (4 samples, 0.45%)</title><rect x="15.8427%" y="277" width="0.4494%" height="15" fill="rgb(231,57,52)" fg:x="141" fg:w="4"/><text x="16.0927%" y="287.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (4 samples, 0.45%)</title><rect x="15.8427%" y="261" width="0.4494%" height="15" fill="rgb(248,177,22)" fg:x="141" fg:w="4"/><text x="16.0927%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4 samples, 0.45%)</title><rect x="15.8427%" y="245" width="0.4494%" height="15" fill="rgb(215,211,37)" fg:x="141" fg:w="4"/><text x="16.0927%" y="255.50"></text></g><g><title>sha2::sha256::x86::compress (4 samples, 0.45%)</title><rect x="15.8427%" y="229" width="0.4494%" height="15" fill="rgb(241,128,51)" fg:x="141" fg:w="4"/><text x="16.0927%" y="239.50"></text></g><g><title>sha2::sha256::soft::compress (4 samples, 0.45%)</title><rect x="15.8427%" y="213" width="0.4494%" height="15" fill="rgb(227,165,31)" fg:x="141" fg:w="4"/><text x="16.0927%" y="223.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (4 samples, 0.45%)</title><rect x="15.8427%" y="197" width="0.4494%" height="15" fill="rgb(228,167,24)" fg:x="141" fg:w="4"/><text x="16.0927%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (3 samples, 0.34%)</title><rect x="15.9551%" y="181" width="0.3371%" height="15" fill="rgb(228,143,12)" fg:x="142" fg:w="3"/><text x="16.2051%" y="191.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (2 samples, 0.22%)</title><rect x="16.0674%" y="165" width="0.2247%" height="15" fill="rgb(249,149,8)" fg:x="143" fg:w="2"/><text x="16.3174%" y="175.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.11%)</title><rect x="16.4045%" y="213" width="0.1124%" height="15" fill="rgb(243,35,44)" fg:x="146" fg:w="1"/><text x="16.6545%" y="223.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::update (5 samples, 0.56%)</title><rect x="16.2921%" y="357" width="0.5618%" height="15" fill="rgb(246,89,9)" fg:x="145" fg:w="5"/><text x="16.5421%" y="367.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (5 samples, 0.56%)</title><rect x="16.2921%" y="341" width="0.5618%" height="15" fill="rgb(233,213,13)" fg:x="145" fg:w="5"/><text x="16.5421%" y="351.50"></text></g><g><title>sha2::sha256::Engine256::update (5 samples, 0.56%)</title><rect x="16.2921%" y="325" width="0.5618%" height="15" fill="rgb(233,141,41)" fg:x="145" fg:w="5"/><text x="16.5421%" y="335.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (5 samples, 0.56%)</title><rect x="16.2921%" y="309" width="0.5618%" height="15" fill="rgb(239,167,4)" fg:x="145" fg:w="5"/><text x="16.5421%" y="319.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (5 samples, 0.56%)</title><rect x="16.2921%" y="293" width="0.5618%" height="15" fill="rgb(209,217,16)" fg:x="145" fg:w="5"/><text x="16.5421%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (5 samples, 0.56%)</title><rect x="16.2921%" y="277" width="0.5618%" height="15" fill="rgb(219,88,35)" fg:x="145" fg:w="5"/><text x="16.5421%" y="287.50"></text></g><g><title>sha2::sha256::x86::compress (5 samples, 0.56%)</title><rect x="16.2921%" y="261" width="0.5618%" height="15" fill="rgb(220,193,23)" fg:x="145" fg:w="5"/><text x="16.5421%" y="271.50"></text></g><g><title>sha2::sha256::soft::compress (5 samples, 0.56%)</title><rect x="16.2921%" y="245" width="0.5618%" height="15" fill="rgb(230,90,52)" fg:x="145" fg:w="5"/><text x="16.5421%" y="255.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (4 samples, 0.45%)</title><rect x="16.4045%" y="229" width="0.4494%" height="15" fill="rgb(252,106,19)" fg:x="146" fg:w="4"/><text x="16.6545%" y="239.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (3 samples, 0.34%)</title><rect x="16.5169%" y="213" width="0.3371%" height="15" fill="rgb(206,74,20)" fg:x="147" fg:w="3"/><text x="16.7669%" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.11%)</title><rect x="16.7416%" y="197" width="0.1124%" height="15" fill="rgb(230,138,44)" fg:x="149" fg:w="1"/><text x="16.9916%" y="207.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.22%)</title><rect x="16.8539%" y="277" width="0.2247%" height="15" fill="rgb(235,182,43)" fg:x="150" fg:w="2"/><text x="17.1039%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (1 samples, 0.11%)</title><rect x="16.9663%" y="261" width="0.1124%" height="15" fill="rgb(242,16,51)" fg:x="151" fg:w="1"/><text x="17.2163%" y="271.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow_p58 (17 samples, 1.91%)</title><rect x="16.8539%" y="309" width="1.9101%" height="15" fill="rgb(248,9,4)" fg:x="150" fg:w="17"/><text x="17.1039%" y="319.50">c..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (17 samples, 1.91%)</title><rect x="16.8539%" y="293" width="1.9101%" height="15" fill="rgb(210,31,22)" fg:x="150" fg:w="17"/><text x="17.1039%" y="303.50">c..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (15 samples, 1.69%)</title><rect x="17.0787%" y="277" width="1.6854%" height="15" fill="rgb(239,54,39)" fg:x="152" fg:w="15"/><text x="17.3287%" y="287.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (5 samples, 0.56%)</title><rect x="18.2022%" y="261" width="0.5618%" height="15" fill="rgb(230,99,41)" fg:x="162" fg:w="5"/><text x="18.4522%" y="271.50"></text></g><g><title>curve25519_dalek::ristretto::CompressedRistretto::decompress (18 samples, 2.02%)</title><rect x="16.8539%" y="357" width="2.0225%" height="15" fill="rgb(253,106,12)" fg:x="150" fg:w="18"/><text x="17.1039%" y="367.50">c..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invsqrt (18 samples, 2.02%)</title><rect x="16.8539%" y="341" width="2.0225%" height="15" fill="rgb(213,46,41)" fg:x="150" fg:w="18"/><text x="17.1039%" y="351.50">c..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (18 samples, 2.02%)</title><rect x="16.8539%" y="325" width="2.0225%" height="15" fill="rgb(215,133,35)" fg:x="150" fg:w="18"/><text x="17.1039%" y="335.50">c..</text></g><g><title>curve25519_dalek::field::&lt;impl subtle::ConstantTimeEq for curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::ct_eq (1 samples, 0.11%)</title><rect x="18.7640%" y="309" width="0.1124%" height="15" fill="rgb(213,28,5)" fg:x="167" fg:w="1"/><text x="19.0140%" y="319.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.11%)</title><rect x="18.7640%" y="293" width="0.1124%" height="15" fill="rgb(215,77,49)" fg:x="167" fg:w="1"/><text x="19.0140%" y="303.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.11%)</title><rect x="18.7640%" y="277" width="0.1124%" height="15" fill="rgb(248,100,22)" fg:x="167" fg:w="1"/><text x="19.0140%" y="287.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="18.7640%" y="261" width="0.1124%" height="15" fill="rgb(208,67,9)" fg:x="167" fg:w="1"/><text x="19.0140%" y="271.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (1 samples, 0.11%)</title><rect x="18.7640%" y="245" width="0.1124%" height="15" fill="rgb(219,133,21)" fg:x="167" fg:w="1"/><text x="19.0140%" y="255.50"></text></g><g><title>subtle::black_box (1 samples, 0.11%)</title><rect x="18.7640%" y="229" width="0.1124%" height="15" fill="rgb(246,46,29)" fg:x="167" fg:w="1"/><text x="19.0140%" y="239.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.11%)</title><rect x="18.7640%" y="213" width="0.1124%" height="15" fill="rgb(246,185,52)" fg:x="167" fg:w="1"/><text x="19.0140%" y="223.50"></text></g><g><title>&lt;curve25519_dalek::scalar::Scalar as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="18.8764%" y="325" width="0.1124%" height="15" fill="rgb(252,136,11)" fg:x="168" fg:w="1"/><text x="19.1264%" y="335.50"></text></g><g><title>&lt;curve25519_dalek::scalar::Scalar as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.11%)</title><rect x="18.8764%" y="309" width="0.1124%" height="15" fill="rgb(219,138,53)" fg:x="168" fg:w="1"/><text x="19.1264%" y="319.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.11%)</title><rect x="18.8764%" y="293" width="0.1124%" height="15" fill="rgb(211,51,23)" fg:x="168" fg:w="1"/><text x="19.1264%" y="303.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.11%)</title><rect x="18.8764%" y="277" width="0.1124%" height="15" fill="rgb(247,221,28)" fg:x="168" fg:w="1"/><text x="19.1264%" y="287.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::from_canonical_bytes (2 samples, 0.22%)</title><rect x="18.8764%" y="357" width="0.2247%" height="15" fill="rgb(251,222,45)" fg:x="168" fg:w="2"/><text x="19.1264%" y="367.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::is_canonical (2 samples, 0.22%)</title><rect x="18.8764%" y="341" width="0.2247%" height="15" fill="rgb(217,162,53)" fg:x="168" fg:w="2"/><text x="19.1264%" y="351.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::reduce (1 samples, 0.11%)</title><rect x="18.9888%" y="325" width="0.1124%" height="15" fill="rgb(229,93,14)" fg:x="169" fg:w="1"/><text x="19.2388%" y="335.50"></text></g><g><title>curve25519_dalek::scalar::&lt;impl curve25519_dalek::backend::serial::u64::scalar::Scalar52&gt;::pack (1 samples, 0.11%)</title><rect x="18.9888%" y="309" width="0.1124%" height="15" fill="rgb(209,67,49)" fg:x="169" fg:w="1"/><text x="19.2388%" y="319.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::to_bytes (1 samples, 0.11%)</title><rect x="18.9888%" y="293" width="0.1124%" height="15" fill="rgb(213,87,29)" fg:x="169" fg:w="1"/><text x="19.2388%" y="303.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (1 samples, 0.11%)</title><rect x="19.1011%" y="341" width="0.1124%" height="15" fill="rgb(205,151,52)" fg:x="170" fg:w="1"/><text x="19.3511%" y="351.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (1 samples, 0.11%)</title><rect x="19.1011%" y="325" width="0.1124%" height="15" fill="rgb(253,215,39)" fg:x="170" fg:w="1"/><text x="19.3511%" y="335.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (1 samples, 0.11%)</title><rect x="19.1011%" y="309" width="0.1124%" height="15" fill="rgb(221,220,41)" fg:x="170" fg:w="1"/><text x="19.3511%" y="319.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (1 samples, 0.11%)</title><rect x="19.1011%" y="293" width="0.1124%" height="15" fill="rgb(218,133,21)" fg:x="170" fg:w="1"/><text x="19.3511%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::finish (1 samples, 0.11%)</title><rect x="19.1011%" y="277" width="0.1124%" height="15" fill="rgb(221,193,43)" fg:x="170" fg:w="1"/><text x="19.3511%" y="287.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (1 samples, 0.11%)</title><rect x="19.1011%" y="261" width="0.1124%" height="15" fill="rgb(240,128,52)" fg:x="170" fg:w="1"/><text x="19.3511%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (1 samples, 0.11%)</title><rect x="19.1011%" y="245" width="0.1124%" height="15" fill="rgb(253,114,12)" fg:x="170" fg:w="1"/><text x="19.3511%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (1 samples, 0.11%)</title><rect x="19.1011%" y="229" width="0.1124%" height="15" fill="rgb(215,223,47)" fg:x="170" fg:w="1"/><text x="19.3511%" y="239.50"></text></g><g><title>sha2::sha256::x86::compress (1 samples, 0.11%)</title><rect x="19.1011%" y="213" width="0.1124%" height="15" fill="rgb(248,225,23)" fg:x="170" fg:w="1"/><text x="19.3511%" y="223.50"></text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.11%)</title><rect x="19.1011%" y="197" width="0.1124%" height="15" fill="rgb(250,108,0)" fg:x="170" fg:w="1"/><text x="19.3511%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.11%)</title><rect x="19.1011%" y="181" width="0.1124%" height="15" fill="rgb(228,208,7)" fg:x="170" fg:w="1"/><text x="19.3511%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.11%)</title><rect x="19.1011%" y="165" width="0.1124%" height="15" fill="rgb(244,45,10)" fg:x="170" fg:w="1"/><text x="19.3511%" y="175.50"></text></g><g><title>libsignal_protocol::crypto::hmac_sha256 (3 samples, 0.34%)</title><rect x="19.1011%" y="357" width="0.3371%" height="15" fill="rgb(207,125,25)" fg:x="170" fg:w="3"/><text x="19.3511%" y="367.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (2 samples, 0.22%)</title><rect x="19.2135%" y="341" width="0.2247%" height="15" fill="rgb(210,195,18)" fg:x="171" fg:w="2"/><text x="19.4635%" y="351.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.11%)</title><rect x="19.3258%" y="325" width="0.1124%" height="15" fill="rgb(249,80,12)" fg:x="172" fg:w="1"/><text x="19.5758%" y="335.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.11%)</title><rect x="19.3258%" y="309" width="0.1124%" height="15" fill="rgb(221,65,9)" fg:x="172" fg:w="1"/><text x="19.5758%" y="319.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.11%)</title><rect x="19.3258%" y="293" width="0.1124%" height="15" fill="rgb(235,49,36)" fg:x="172" fg:w="1"/><text x="19.5758%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (1 samples, 0.11%)</title><rect x="19.3258%" y="277" width="0.1124%" height="15" fill="rgb(225,32,20)" fg:x="172" fg:w="1"/><text x="19.5758%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (1 samples, 0.11%)</title><rect x="19.3258%" y="261" width="0.1124%" height="15" fill="rgb(215,141,46)" fg:x="172" fg:w="1"/><text x="19.5758%" y="271.50"></text></g><g><title>sha2::sha256::x86::compress (1 samples, 0.11%)</title><rect x="19.3258%" y="245" width="0.1124%" height="15" fill="rgb(250,160,47)" fg:x="172" fg:w="1"/><text x="19.5758%" y="255.50"></text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.11%)</title><rect x="19.3258%" y="229" width="0.1124%" height="15" fill="rgb(216,222,40)" fg:x="172" fg:w="1"/><text x="19.5758%" y="239.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.11%)</title><rect x="19.3258%" y="213" width="0.1124%" height="15" fill="rgb(234,217,39)" fg:x="172" fg:w="1"/><text x="19.5758%" y="223.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.11%)</title><rect x="19.3258%" y="197" width="0.1124%" height="15" fill="rgb(207,178,40)" fg:x="172" fg:w="1"/><text x="19.5758%" y="207.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.11%)</title><rect x="19.3258%" y="181" width="0.1124%" height="15" fill="rgb(221,136,13)" fg:x="172" fg:w="1"/><text x="19.5758%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.11%)</title><rect x="19.4382%" y="325" width="0.1124%" height="15" fill="rgb(249,199,10)" fg:x="173" fg:w="1"/><text x="19.6882%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="19.4382%" y="309" width="0.1124%" height="15" fill="rgb(249,222,13)" fg:x="173" fg:w="1"/><text x="19.6882%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.11%)</title><rect x="19.4382%" y="293" width="0.1124%" height="15" fill="rgb(244,185,38)" fg:x="173" fg:w="1"/><text x="19.6882%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.11%)</title><rect x="19.4382%" y="277" width="0.1124%" height="15" fill="rgb(236,202,9)" fg:x="173" fg:w="1"/><text x="19.6882%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="19.4382%" y="261" width="0.1124%" height="15" fill="rgb(250,229,37)" fg:x="173" fg:w="1"/><text x="19.6882%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="19.4382%" y="245" width="0.1124%" height="15" fill="rgb(206,174,23)" fg:x="173" fg:w="1"/><text x="19.6882%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="19.4382%" y="229" width="0.1124%" height="15" fill="rgb(211,33,43)" fg:x="173" fg:w="1"/><text x="19.6882%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="19.4382%" y="213" width="0.1124%" height="15" fill="rgb(245,58,50)" fg:x="173" fg:w="1"/><text x="19.6882%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="19.4382%" y="197" width="0.1124%" height="15" fill="rgb(244,68,36)" fg:x="173" fg:w="1"/><text x="19.6882%" y="207.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="19.4382%" y="181" width="0.1124%" height="15" fill="rgb(232,229,15)" fg:x="173" fg:w="1"/><text x="19.6882%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;poksho::statement::Statement&gt; (3 samples, 0.34%)</title><rect x="19.4382%" y="341" width="0.3371%" height="15" fill="rgb(254,30,23)" fg:x="173" fg:w="3"/><text x="19.6882%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,u8&gt;&gt; (2 samples, 0.22%)</title><rect x="19.5506%" y="325" width="0.2247%" height="15" fill="rgb(235,160,14)" fg:x="174" fg:w="2"/><text x="19.8006%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,u8,std::collections::hash::map::RandomState&gt;&gt; (2 samples, 0.22%)</title><rect x="19.5506%" y="309" width="0.2247%" height="15" fill="rgb(212,155,44)" fg:x="174" fg:w="2"/><text x="19.8006%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,u8)&gt;&gt; (2 samples, 0.22%)</title><rect x="19.5506%" y="293" width="0.2247%" height="15" fill="rgb(226,2,50)" fg:x="174" fg:w="2"/><text x="19.8006%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.22%)</title><rect x="19.5506%" y="277" width="0.2247%" height="15" fill="rgb(234,177,6)" fg:x="174" fg:w="2"/><text x="19.8006%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (2 samples, 0.22%)</title><rect x="19.5506%" y="261" width="0.2247%" height="15" fill="rgb(217,24,9)" fg:x="174" fg:w="2"/><text x="19.8006%" y="271.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.22%)</title><rect x="19.5506%" y="245" width="0.2247%" height="15" fill="rgb(220,13,46)" fg:x="174" fg:w="2"/><text x="19.8006%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.22%)</title><rect x="19.5506%" y="229" width="0.2247%" height="15" fill="rgb(239,221,27)" fg:x="174" fg:w="2"/><text x="19.8006%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,u8)&gt; (2 samples, 0.22%)</title><rect x="19.5506%" y="213" width="0.2247%" height="15" fill="rgb(222,198,25)" fg:x="174" fg:w="2"/><text x="19.8006%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.22%)</title><rect x="19.5506%" y="197" width="0.2247%" height="15" fill="rgb(211,99,13)" fg:x="174" fg:w="2"/><text x="19.8006%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.22%)</title><rect x="19.5506%" y="181" width="0.2247%" height="15" fill="rgb(232,111,31)" fg:x="174" fg:w="2"/><text x="19.8006%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.22%)</title><rect x="19.5506%" y="165" width="0.2247%" height="15" fill="rgb(245,82,37)" fg:x="174" fg:w="2"/><text x="19.8006%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.22%)</title><rect x="19.5506%" y="149" width="0.2247%" height="15" fill="rgb(227,149,46)" fg:x="174" fg:w="2"/><text x="19.8006%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.22%)</title><rect x="19.5506%" y="133" width="0.2247%" height="15" fill="rgb(218,36,50)" fg:x="174" fg:w="2"/><text x="19.8006%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.22%)</title><rect x="19.5506%" y="117" width="0.2247%" height="15" fill="rgb(226,80,48)" fg:x="174" fg:w="2"/><text x="19.8006%" y="127.50"></text></g><g><title>_int_free (2 samples, 0.22%)</title><rect x="19.5506%" y="101" width="0.2247%" height="15" fill="rgb(238,224,15)" fg:x="174" fg:w="2"/><text x="19.8006%" y="111.50"></text></g><g><title>poksho::statement::Statement::add (1 samples, 0.11%)</title><rect x="19.7753%" y="341" width="0.1124%" height="15" fill="rgb(241,136,10)" fg:x="176" fg:w="1"/><text x="20.0253%" y="351.50"></text></g><g><title>poksho::statement::Statement::add_point (1 samples, 0.11%)</title><rect x="19.7753%" y="325" width="0.1124%" height="15" fill="rgb(208,32,45)" fg:x="176" fg:w="1"/><text x="20.0253%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="19.7753%" y="309" width="0.1124%" height="15" fill="rgb(207,135,9)" fg:x="176" fg:w="1"/><text x="20.0253%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="19.7753%" y="293" width="0.1124%" height="15" fill="rgb(206,86,44)" fg:x="176" fg:w="1"/><text x="20.0253%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="19.7753%" y="277" width="0.1124%" height="15" fill="rgb(245,177,15)" fg:x="176" fg:w="1"/><text x="20.0253%" y="287.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="19.7753%" y="261" width="0.1124%" height="15" fill="rgb(206,64,50)" fg:x="176" fg:w="1"/><text x="20.0253%" y="271.50"></text></g><g><title>poksho::statement::Statement::new (1 samples, 0.11%)</title><rect x="19.8876%" y="341" width="0.1124%" height="15" fill="rgb(234,36,40)" fg:x="177" fg:w="1"/><text x="20.1376%" y="351.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.11%)</title><rect x="19.8876%" y="325" width="0.1124%" height="15" fill="rgb(213,64,8)" fg:x="177" fg:w="1"/><text x="20.1376%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="19.8876%" y="309" width="0.1124%" height="15" fill="rgb(210,75,36)" fg:x="177" fg:w="1"/><text x="20.1376%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="19.8876%" y="293" width="0.1124%" height="15" fill="rgb(229,88,21)" fg:x="177" fg:w="1"/><text x="20.1376%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.11%)</title><rect x="19.8876%" y="277" width="0.1124%" height="15" fill="rgb(252,204,47)" fg:x="177" fg:w="1"/><text x="20.1376%" y="287.50"></text></g><g><title>&lt;curve25519_dalek::scalar::Scalar as core::ops::arith::Mul&gt;::mul (1 samples, 0.11%)</title><rect x="20.0000%" y="325" width="0.1124%" height="15" fill="rgb(208,77,27)" fg:x="178" fg:w="1"/><text x="20.2500%" y="335.50"></text></g><g><title>&lt;&amp;curve25519_dalek::scalar::Scalar as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (1 samples, 0.11%)</title><rect x="20.0000%" y="309" width="0.1124%" height="15" fill="rgb(221,76,26)" fg:x="178" fg:w="1"/><text x="20.2500%" y="319.50"></text></g><g><title>curve25519_dalek::scalar::&lt;impl curve25519_dalek::backend::serial::u64::scalar::Scalar52&gt;::pack (1 samples, 0.11%)</title><rect x="20.0000%" y="293" width="0.1124%" height="15" fill="rgb(225,139,18)" fg:x="178" fg:w="1"/><text x="20.2500%" y="303.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::update (3 samples, 0.34%)</title><rect x="20.1124%" y="309" width="0.3371%" height="15" fill="rgb(230,137,11)" fg:x="179" fg:w="3"/><text x="20.3624%" y="319.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (3 samples, 0.34%)</title><rect x="20.1124%" y="293" width="0.3371%" height="15" fill="rgb(212,28,1)" fg:x="179" fg:w="3"/><text x="20.3624%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update (3 samples, 0.34%)</title><rect x="20.1124%" y="277" width="0.3371%" height="15" fill="rgb(248,164,17)" fg:x="179" fg:w="3"/><text x="20.3624%" y="287.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (3 samples, 0.34%)</title><rect x="20.1124%" y="261" width="0.3371%" height="15" fill="rgb(222,171,42)" fg:x="179" fg:w="3"/><text x="20.3624%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (3 samples, 0.34%)</title><rect x="20.1124%" y="245" width="0.3371%" height="15" fill="rgb(243,84,45)" fg:x="179" fg:w="3"/><text x="20.3624%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (3 samples, 0.34%)</title><rect x="20.1124%" y="229" width="0.3371%" height="15" fill="rgb(252,49,23)" fg:x="179" fg:w="3"/><text x="20.3624%" y="239.50"></text></g><g><title>sha2::sha256::x86::compress (3 samples, 0.34%)</title><rect x="20.1124%" y="213" width="0.3371%" height="15" fill="rgb(215,19,7)" fg:x="179" fg:w="3"/><text x="20.3624%" y="223.50"></text></g><g><title>sha2::sha256::soft::compress (3 samples, 0.34%)</title><rect x="20.1124%" y="197" width="0.3371%" height="15" fill="rgb(238,81,41)" fg:x="179" fg:w="3"/><text x="20.3624%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 0.22%)</title><rect x="20.2247%" y="181" width="0.2247%" height="15" fill="rgb(210,199,37)" fg:x="180" fg:w="2"/><text x="20.4747%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (2 samples, 0.22%)</title><rect x="20.2247%" y="165" width="0.2247%" height="15" fill="rgb(244,192,49)" fg:x="180" fg:w="2"/><text x="20.4747%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="20.3371%" y="149" width="0.1124%" height="15" fill="rgb(226,211,11)" fg:x="181" fg:w="1"/><text x="20.5871%" y="159.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.11%)</title><rect x="20.4494%" y="165" width="0.1124%" height="15" fill="rgb(236,162,54)" fg:x="182" fg:w="1"/><text x="20.6994%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="20.4494%" y="149" width="0.1124%" height="15" fill="rgb(220,229,9)" fg:x="182" fg:w="1"/><text x="20.6994%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.11%)</title><rect x="20.5618%" y="133" width="0.1124%" height="15" fill="rgb(250,87,22)" fg:x="183" fg:w="1"/><text x="20.8118%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (3 samples, 0.34%)</title><rect x="20.5618%" y="149" width="0.3371%" height="15" fill="rgb(239,43,17)" fg:x="183" fg:w="3"/><text x="20.8118%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (2 samples, 0.22%)</title><rect x="20.6742%" y="133" width="0.2247%" height="15" fill="rgb(231,177,25)" fg:x="184" fg:w="2"/><text x="20.9242%" y="143.50"></text></g><g><title>sha2::sha256::soft::shr (2 samples, 0.22%)</title><rect x="20.6742%" y="117" width="0.2247%" height="15" fill="rgb(219,179,1)" fg:x="184" fg:w="2"/><text x="20.9242%" y="127.50"></text></g><g><title>sha2::sha256::soft::schedule (5 samples, 0.56%)</title><rect x="20.5618%" y="165" width="0.5618%" height="15" fill="rgb(238,219,53)" fg:x="183" fg:w="5"/><text x="20.8118%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (2 samples, 0.22%)</title><rect x="20.8989%" y="149" width="0.2247%" height="15" fill="rgb(232,167,36)" fg:x="186" fg:w="2"/><text x="21.1489%" y="159.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.11%)</title><rect x="21.0112%" y="133" width="0.1124%" height="15" fill="rgb(244,19,51)" fg:x="187" fg:w="1"/><text x="21.2612%" y="143.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.11%)</title><rect x="21.4607%" y="149" width="0.1124%" height="15" fill="rgb(224,6,22)" fg:x="191" fg:w="1"/><text x="21.7107%" y="159.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::absorb (14 samples, 1.57%)</title><rect x="20.1124%" y="325" width="1.5730%" height="15" fill="rgb(224,145,5)" fg:x="179" fg:w="14"/><text x="20.3624%" y="335.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (11 samples, 1.24%)</title><rect x="20.4494%" y="309" width="1.2360%" height="15" fill="rgb(234,130,49)" fg:x="182" fg:w="11"/><text x="20.6994%" y="319.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (11 samples, 1.24%)</title><rect x="20.4494%" y="293" width="1.2360%" height="15" fill="rgb(254,6,2)" fg:x="182" fg:w="11"/><text x="20.6994%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update (11 samples, 1.24%)</title><rect x="20.4494%" y="277" width="1.2360%" height="15" fill="rgb(208,96,46)" fg:x="182" fg:w="11"/><text x="20.6994%" y="287.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (11 samples, 1.24%)</title><rect x="20.4494%" y="261" width="1.2360%" height="15" fill="rgb(239,3,39)" fg:x="182" fg:w="11"/><text x="20.6994%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (11 samples, 1.24%)</title><rect x="20.4494%" y="245" width="1.2360%" height="15" fill="rgb(233,210,1)" fg:x="182" fg:w="11"/><text x="20.6994%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (11 samples, 1.24%)</title><rect x="20.4494%" y="229" width="1.2360%" height="15" fill="rgb(244,137,37)" fg:x="182" fg:w="11"/><text x="20.6994%" y="239.50"></text></g><g><title>sha2::sha256::x86::compress (11 samples, 1.24%)</title><rect x="20.4494%" y="213" width="1.2360%" height="15" fill="rgb(240,136,2)" fg:x="182" fg:w="11"/><text x="20.6994%" y="223.50"></text></g><g><title>sha2::sha256::soft::compress (11 samples, 1.24%)</title><rect x="20.4494%" y="197" width="1.2360%" height="15" fill="rgb(239,18,37)" fg:x="182" fg:w="11"/><text x="20.6994%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (11 samples, 1.24%)</title><rect x="20.4494%" y="181" width="1.2360%" height="15" fill="rgb(218,185,22)" fg:x="182" fg:w="11"/><text x="20.6994%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (5 samples, 0.56%)</title><rect x="21.1236%" y="165" width="0.5618%" height="15" fill="rgb(225,218,4)" fg:x="188" fg:w="5"/><text x="21.3736%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="21.5730%" y="149" width="0.1124%" height="15" fill="rgb(230,182,32)" fg:x="192" fg:w="1"/><text x="21.8230%" y="159.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.11%)</title><rect x="21.6854%" y="165" width="0.1124%" height="15" fill="rgb(242,56,43)" fg:x="193" fg:w="1"/><text x="21.9354%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="21.6854%" y="149" width="0.1124%" height="15" fill="rgb(233,99,24)" fg:x="193" fg:w="1"/><text x="21.9354%" y="159.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.11%)</title><rect x="21.7978%" y="165" width="0.1124%" height="15" fill="rgb(234,209,42)" fg:x="194" fg:w="1"/><text x="22.0478%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.11%)</title><rect x="21.7978%" y="149" width="0.1124%" height="15" fill="rgb(227,7,12)" fg:x="194" fg:w="1"/><text x="22.0478%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.11%)</title><rect x="21.7978%" y="133" width="0.1124%" height="15" fill="rgb(245,203,43)" fg:x="194" fg:w="1"/><text x="22.0478%" y="143.50"></text></g><g><title>sha2::sha256::soft::shl (1 samples, 0.11%)</title><rect x="21.7978%" y="117" width="0.1124%" height="15" fill="rgb(238,205,33)" fg:x="194" fg:w="1"/><text x="22.0478%" y="127.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (4 samples, 0.45%)</title><rect x="21.6854%" y="309" width="0.4494%" height="15" fill="rgb(231,56,7)" fg:x="193" fg:w="4"/><text x="21.9354%" y="319.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (4 samples, 0.45%)</title><rect x="21.6854%" y="293" width="0.4494%" height="15" fill="rgb(244,186,29)" fg:x="193" fg:w="4"/><text x="21.9354%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update (4 samples, 0.45%)</title><rect x="21.6854%" y="277" width="0.4494%" height="15" fill="rgb(234,111,31)" fg:x="193" fg:w="4"/><text x="21.9354%" y="287.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (4 samples, 0.45%)</title><rect x="21.6854%" y="261" width="0.4494%" height="15" fill="rgb(241,149,10)" fg:x="193" fg:w="4"/><text x="21.9354%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (4 samples, 0.45%)</title><rect x="21.6854%" y="245" width="0.4494%" height="15" fill="rgb(249,206,44)" fg:x="193" fg:w="4"/><text x="21.9354%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4 samples, 0.45%)</title><rect x="21.6854%" y="229" width="0.4494%" height="15" fill="rgb(251,153,30)" fg:x="193" fg:w="4"/><text x="21.9354%" y="239.50"></text></g><g><title>sha2::sha256::x86::compress (4 samples, 0.45%)</title><rect x="21.6854%" y="213" width="0.4494%" height="15" fill="rgb(239,152,38)" fg:x="193" fg:w="4"/><text x="21.9354%" y="223.50"></text></g><g><title>sha2::sha256::soft::compress (4 samples, 0.45%)</title><rect x="21.6854%" y="197" width="0.4494%" height="15" fill="rgb(249,139,47)" fg:x="193" fg:w="4"/><text x="21.9354%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (4 samples, 0.45%)</title><rect x="21.6854%" y="181" width="0.4494%" height="15" fill="rgb(244,64,35)" fg:x="193" fg:w="4"/><text x="21.9354%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (2 samples, 0.22%)</title><rect x="21.9101%" y="165" width="0.2247%" height="15" fill="rgb(216,46,15)" fg:x="195" fg:w="2"/><text x="22.1601%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="22.0225%" y="149" width="0.1124%" height="15" fill="rgb(250,74,19)" fg:x="196" fg:w="1"/><text x="22.2725%" y="159.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.11%)</title><rect x="22.1348%" y="133" width="0.1124%" height="15" fill="rgb(249,42,33)" fg:x="197" fg:w="1"/><text x="22.3848%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.11%)</title><rect x="22.1348%" y="117" width="0.1124%" height="15" fill="rgb(242,149,17)" fg:x="197" fg:w="1"/><text x="22.3848%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.11%)</title><rect x="22.1348%" y="101" width="0.1124%" height="15" fill="rgb(244,29,21)" fg:x="197" fg:w="1"/><text x="22.3848%" y="111.50"></text></g><g><title>sha2::sha256::soft::shr (1 samples, 0.11%)</title><rect x="22.1348%" y="85" width="0.1124%" height="15" fill="rgb(220,130,37)" fg:x="197" fg:w="1"/><text x="22.3848%" y="95.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::absorb (3 samples, 0.34%)</title><rect x="22.1348%" y="293" width="0.3371%" height="15" fill="rgb(211,67,2)" fg:x="197" fg:w="3"/><text x="22.3848%" y="303.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (3 samples, 0.34%)</title><rect x="22.1348%" y="277" width="0.3371%" height="15" fill="rgb(235,68,52)" fg:x="197" fg:w="3"/><text x="22.3848%" y="287.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (3 samples, 0.34%)</title><rect x="22.1348%" y="261" width="0.3371%" height="15" fill="rgb(246,142,3)" fg:x="197" fg:w="3"/><text x="22.3848%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::update (3 samples, 0.34%)</title><rect x="22.1348%" y="245" width="0.3371%" height="15" fill="rgb(241,25,7)" fg:x="197" fg:w="3"/><text x="22.3848%" y="255.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (3 samples, 0.34%)</title><rect x="22.1348%" y="229" width="0.3371%" height="15" fill="rgb(242,119,39)" fg:x="197" fg:w="3"/><text x="22.3848%" y="239.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (3 samples, 0.34%)</title><rect x="22.1348%" y="213" width="0.3371%" height="15" fill="rgb(241,98,45)" fg:x="197" fg:w="3"/><text x="22.3848%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (3 samples, 0.34%)</title><rect x="22.1348%" y="197" width="0.3371%" height="15" fill="rgb(254,28,30)" fg:x="197" fg:w="3"/><text x="22.3848%" y="207.50"></text></g><g><title>sha2::sha256::x86::compress (3 samples, 0.34%)</title><rect x="22.1348%" y="181" width="0.3371%" height="15" fill="rgb(241,142,54)" fg:x="197" fg:w="3"/><text x="22.3848%" y="191.50"></text></g><g><title>sha2::sha256::soft::compress (3 samples, 0.34%)</title><rect x="22.1348%" y="165" width="0.3371%" height="15" fill="rgb(222,85,15)" fg:x="197" fg:w="3"/><text x="22.3848%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (3 samples, 0.34%)</title><rect x="22.1348%" y="149" width="0.3371%" height="15" fill="rgb(210,85,47)" fg:x="197" fg:w="3"/><text x="22.3848%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (2 samples, 0.22%)</title><rect x="22.2472%" y="133" width="0.2247%" height="15" fill="rgb(224,206,25)" fg:x="198" fg:w="2"/><text x="22.4972%" y="143.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="22.3596%" y="117" width="0.1124%" height="15" fill="rgb(243,201,19)" fg:x="199" fg:w="1"/><text x="22.6096%" y="127.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::digest_pad (1 samples, 0.11%)</title><rect x="22.4719%" y="181" width="0.1124%" height="15" fill="rgb(236,59,4)" fg:x="200" fg:w="1"/><text x="22.7219%" y="191.50"></text></g><g><title>block_buffer::set_zero (1 samples, 0.11%)</title><rect x="22.4719%" y="165" width="0.1124%" height="15" fill="rgb(254,179,45)" fg:x="200" fg:w="1"/><text x="22.7219%" y="175.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.11%)</title><rect x="22.4719%" y="149" width="0.1124%" height="15" fill="rgb(226,14,10)" fg:x="200" fg:w="1"/><text x="22.7219%" y="159.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.11%)</title><rect x="22.4719%" y="133" width="0.1124%" height="15" fill="rgb(244,27,41)" fg:x="200" fg:w="1"/><text x="22.7219%" y="143.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.11%)</title><rect x="22.5843%" y="117" width="0.1124%" height="15" fill="rgb(235,35,32)" fg:x="201" fg:w="1"/><text x="22.8343%" y="127.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.11%)</title><rect x="22.5843%" y="101" width="0.1124%" height="15" fill="rgb(218,68,31)" fg:x="201" fg:w="1"/><text x="22.8343%" y="111.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.11%)</title><rect x="22.5843%" y="85" width="0.1124%" height="15" fill="rgb(207,120,37)" fg:x="201" fg:w="1"/><text x="22.8343%" y="95.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (1 samples, 0.11%)</title><rect x="22.5843%" y="69" width="0.1124%" height="15" fill="rgb(227,98,0)" fg:x="201" fg:w="1"/><text x="22.8343%" y="79.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.11%)</title><rect x="22.6966%" y="101" width="0.1124%" height="15" fill="rgb(207,7,3)" fg:x="202" fg:w="1"/><text x="22.9466%" y="111.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.11%)</title><rect x="22.6966%" y="85" width="0.1124%" height="15" fill="rgb(206,98,19)" fg:x="202" fg:w="1"/><text x="22.9466%" y="95.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.11%)</title><rect x="22.6966%" y="69" width="0.1124%" height="15" fill="rgb(217,5,26)" fg:x="202" fg:w="1"/><text x="22.9466%" y="79.50"></text></g><g><title>sha2::sha256::soft::shr (1 samples, 0.11%)</title><rect x="22.6966%" y="53" width="0.1124%" height="15" fill="rgb(235,190,38)" fg:x="202" fg:w="1"/><text x="22.9466%" y="63.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (2 samples, 0.22%)</title><rect x="22.9213%" y="85" width="0.2247%" height="15" fill="rgb(247,86,24)" fg:x="204" fg:w="2"/><text x="23.1713%" y="95.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::new (14 samples, 1.57%)</title><rect x="21.6854%" y="325" width="1.5730%" height="15" fill="rgb(205,101,16)" fg:x="193" fg:w="14"/><text x="21.9354%" y="335.50"></text></g><g><title>poksho::shoapi::ShoApi::absorb_and_ratchet (10 samples, 1.12%)</title><rect x="22.1348%" y="309" width="1.1236%" height="15" fill="rgb(246,168,33)" fg:x="197" fg:w="10"/><text x="22.3848%" y="319.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::ratchet (7 samples, 0.79%)</title><rect x="22.4719%" y="293" width="0.7865%" height="15" fill="rgb(231,114,1)" fg:x="200" fg:w="7"/><text x="22.7219%" y="303.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (7 samples, 0.79%)</title><rect x="22.4719%" y="277" width="0.7865%" height="15" fill="rgb(207,184,53)" fg:x="200" fg:w="7"/><text x="22.7219%" y="287.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (7 samples, 0.79%)</title><rect x="22.4719%" y="261" width="0.7865%" height="15" fill="rgb(224,95,51)" fg:x="200" fg:w="7"/><text x="22.7219%" y="271.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (7 samples, 0.79%)</title><rect x="22.4719%" y="245" width="0.7865%" height="15" fill="rgb(212,188,45)" fg:x="200" fg:w="7"/><text x="22.7219%" y="255.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (7 samples, 0.79%)</title><rect x="22.4719%" y="229" width="0.7865%" height="15" fill="rgb(223,154,38)" fg:x="200" fg:w="7"/><text x="22.7219%" y="239.50"></text></g><g><title>sha2::sha256::Engine256::finish (7 samples, 0.79%)</title><rect x="22.4719%" y="213" width="0.7865%" height="15" fill="rgb(251,22,52)" fg:x="200" fg:w="7"/><text x="22.7219%" y="223.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (7 samples, 0.79%)</title><rect x="22.4719%" y="197" width="0.7865%" height="15" fill="rgb(229,209,22)" fg:x="200" fg:w="7"/><text x="22.7219%" y="207.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (6 samples, 0.67%)</title><rect x="22.5843%" y="181" width="0.6742%" height="15" fill="rgb(234,138,34)" fg:x="201" fg:w="6"/><text x="22.8343%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (6 samples, 0.67%)</title><rect x="22.5843%" y="165" width="0.6742%" height="15" fill="rgb(212,95,11)" fg:x="201" fg:w="6"/><text x="22.8343%" y="175.50"></text></g><g><title>sha2::sha256::x86::compress (6 samples, 0.67%)</title><rect x="22.5843%" y="149" width="0.6742%" height="15" fill="rgb(240,179,47)" fg:x="201" fg:w="6"/><text x="22.8343%" y="159.50"></text></g><g><title>sha2::sha256::soft::compress (6 samples, 0.67%)</title><rect x="22.5843%" y="133" width="0.6742%" height="15" fill="rgb(240,163,11)" fg:x="201" fg:w="6"/><text x="22.8343%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (5 samples, 0.56%)</title><rect x="22.6966%" y="117" width="0.5618%" height="15" fill="rgb(236,37,12)" fg:x="202" fg:w="5"/><text x="22.9466%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (4 samples, 0.45%)</title><rect x="22.8090%" y="101" width="0.4494%" height="15" fill="rgb(232,164,16)" fg:x="203" fg:w="4"/><text x="23.0590%" y="111.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="23.1461%" y="85" width="0.1124%" height="15" fill="rgb(244,205,15)" fg:x="206" fg:w="1"/><text x="23.3961%" y="95.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="23.2584%" y="293" width="0.1124%" height="15" fill="rgb(223,117,47)" fg:x="207" fg:w="1"/><text x="23.5084%" y="303.50"></text></g><g><title>&lt;sha2::sha256::Engine256 as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="23.2584%" y="277" width="0.1124%" height="15" fill="rgb(244,107,35)" fg:x="207" fg:w="1"/><text x="23.5084%" y="287.50"></text></g><g><title>core::array::&lt;impl core::clone::Clone for [T: N]&gt;::clone (1 samples, 0.11%)</title><rect x="23.2584%" y="261" width="0.1124%" height="15" fill="rgb(205,140,8)" fg:x="207" fg:w="1"/><text x="23.5084%" y="271.50"></text></g><g><title>&lt;T as core::array::SpecArrayClone&gt;::clone (1 samples, 0.11%)</title><rect x="23.2584%" y="245" width="0.1124%" height="15" fill="rgb(228,84,46)" fg:x="207" fg:w="1"/><text x="23.5084%" y="255.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.11%)</title><rect x="23.3708%" y="101" width="0.1124%" height="15" fill="rgb(254,188,9)" fg:x="208" fg:w="1"/><text x="23.6208%" y="111.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="23.3708%" y="85" width="0.1124%" height="15" fill="rgb(206,112,54)" fg:x="208" fg:w="1"/><text x="23.6208%" y="95.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.11%)</title><rect x="23.4831%" y="101" width="0.1124%" height="15" fill="rgb(216,84,49)" fg:x="209" fg:w="1"/><text x="23.7331%" y="111.50"></text></g><g><title>sha2::sha256::soft::shr (1 samples, 0.11%)</title><rect x="23.5955%" y="85" width="0.1124%" height="15" fill="rgb(214,194,35)" fg:x="210" fg:w="1"/><text x="23.8455%" y="95.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (4 samples, 0.45%)</title><rect x="23.3708%" y="117" width="0.4494%" height="15" fill="rgb(249,28,3)" fg:x="208" fg:w="4"/><text x="23.6208%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (2 samples, 0.22%)</title><rect x="23.5955%" y="101" width="0.2247%" height="15" fill="rgb(222,56,52)" fg:x="210" fg:w="2"/><text x="23.8455%" y="111.50"></text></g><g><title>sha2::sha256::soft::xor (1 samples, 0.11%)</title><rect x="23.7079%" y="85" width="0.1124%" height="15" fill="rgb(245,217,50)" fg:x="211" fg:w="1"/><text x="23.9579%" y="95.50"></text></g><g><title>sha2::sha256::soft::schedule (5 samples, 0.56%)</title><rect x="23.3708%" y="133" width="0.5618%" height="15" fill="rgb(213,201,24)" fg:x="208" fg:w="5"/><text x="23.6208%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (1 samples, 0.11%)</title><rect x="23.8202%" y="117" width="0.1124%" height="15" fill="rgb(248,116,28)" fg:x="212" fg:w="1"/><text x="24.0702%" y="127.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (2 samples, 0.22%)</title><rect x="24.0449%" y="117" width="0.2247%" height="15" fill="rgb(219,72,43)" fg:x="214" fg:w="2"/><text x="24.2949%" y="127.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (10 samples, 1.12%)</title><rect x="23.2584%" y="309" width="1.1236%" height="15" fill="rgb(209,138,14)" fg:x="207" fg:w="10"/><text x="23.5084%" y="319.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (9 samples, 1.01%)</title><rect x="23.3708%" y="293" width="1.0112%" height="15" fill="rgb(222,18,33)" fg:x="208" fg:w="9"/><text x="23.6208%" y="303.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (9 samples, 1.01%)</title><rect x="23.3708%" y="277" width="1.0112%" height="15" fill="rgb(213,199,7)" fg:x="208" fg:w="9"/><text x="23.6208%" y="287.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (9 samples, 1.01%)</title><rect x="23.3708%" y="261" width="1.0112%" height="15" fill="rgb(250,110,10)" fg:x="208" fg:w="9"/><text x="23.6208%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::finish (9 samples, 1.01%)</title><rect x="23.3708%" y="245" width="1.0112%" height="15" fill="rgb(248,123,6)" fg:x="208" fg:w="9"/><text x="23.6208%" y="255.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (9 samples, 1.01%)</title><rect x="23.3708%" y="229" width="1.0112%" height="15" fill="rgb(206,91,31)" fg:x="208" fg:w="9"/><text x="23.6208%" y="239.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (9 samples, 1.01%)</title><rect x="23.3708%" y="213" width="1.0112%" height="15" fill="rgb(211,154,13)" fg:x="208" fg:w="9"/><text x="23.6208%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (9 samples, 1.01%)</title><rect x="23.3708%" y="197" width="1.0112%" height="15" fill="rgb(225,148,7)" fg:x="208" fg:w="9"/><text x="23.6208%" y="207.50"></text></g><g><title>sha2::sha256::x86::compress (9 samples, 1.01%)</title><rect x="23.3708%" y="181" width="1.0112%" height="15" fill="rgb(220,160,43)" fg:x="208" fg:w="9"/><text x="23.6208%" y="191.50"></text></g><g><title>sha2::sha256::soft::compress (9 samples, 1.01%)</title><rect x="23.3708%" y="165" width="1.0112%" height="15" fill="rgb(213,52,39)" fg:x="208" fg:w="9"/><text x="23.6208%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (9 samples, 1.01%)</title><rect x="23.3708%" y="149" width="1.0112%" height="15" fill="rgb(243,137,7)" fg:x="208" fg:w="9"/><text x="23.6208%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (4 samples, 0.45%)</title><rect x="23.9326%" y="133" width="0.4494%" height="15" fill="rgb(230,79,13)" fg:x="213" fg:w="4"/><text x="24.1826%" y="143.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="24.2697%" y="117" width="0.1124%" height="15" fill="rgb(247,105,23)" fg:x="216" fg:w="1"/><text x="24.5197%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.11%)</title><rect x="24.4944%" y="133" width="0.1124%" height="15" fill="rgb(223,179,41)" fg:x="218" fg:w="1"/><text x="24.7444%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (2 samples, 0.22%)</title><rect x="24.4944%" y="149" width="0.2247%" height="15" fill="rgb(218,9,34)" fg:x="218" fg:w="2"/><text x="24.7444%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.11%)</title><rect x="24.6067%" y="133" width="0.1124%" height="15" fill="rgb(222,106,8)" fg:x="219" fg:w="1"/><text x="24.8567%" y="143.50"></text></g><g><title>sha2::sha256::soft::shr (1 samples, 0.11%)</title><rect x="24.6067%" y="117" width="0.1124%" height="15" fill="rgb(211,220,0)" fg:x="219" fg:w="1"/><text x="24.8567%" y="127.50"></text></g><g><title>sha2::sha256::soft::schedule (3 samples, 0.34%)</title><rect x="24.4944%" y="165" width="0.3371%" height="15" fill="rgb(229,52,16)" fg:x="218" fg:w="3"/><text x="24.7444%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (1 samples, 0.11%)</title><rect x="24.7191%" y="149" width="0.1124%" height="15" fill="rgb(212,155,18)" fg:x="220" fg:w="1"/><text x="24.9691%" y="159.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::ratchet (17 samples, 1.91%)</title><rect x="23.2584%" y="325" width="1.9101%" height="15" fill="rgb(242,21,14)" fg:x="207" fg:w="17"/><text x="23.5084%" y="335.50">&lt;..</text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::reset (7 samples, 0.79%)</title><rect x="24.3820%" y="309" width="0.7865%" height="15" fill="rgb(222,19,48)" fg:x="217" fg:w="7"/><text x="24.6320%" y="319.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (7 samples, 0.79%)</title><rect x="24.3820%" y="293" width="0.7865%" height="15" fill="rgb(232,45,27)" fg:x="217" fg:w="7"/><text x="24.6320%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update (7 samples, 0.79%)</title><rect x="24.3820%" y="277" width="0.7865%" height="15" fill="rgb(249,103,42)" fg:x="217" fg:w="7"/><text x="24.6320%" y="287.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (7 samples, 0.79%)</title><rect x="24.3820%" y="261" width="0.7865%" height="15" fill="rgb(246,81,33)" fg:x="217" fg:w="7"/><text x="24.6320%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (7 samples, 0.79%)</title><rect x="24.3820%" y="245" width="0.7865%" height="15" fill="rgb(252,33,42)" fg:x="217" fg:w="7"/><text x="24.6320%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (7 samples, 0.79%)</title><rect x="24.3820%" y="229" width="0.7865%" height="15" fill="rgb(209,212,41)" fg:x="217" fg:w="7"/><text x="24.6320%" y="239.50"></text></g><g><title>sha2::sha256::x86::compress (7 samples, 0.79%)</title><rect x="24.3820%" y="213" width="0.7865%" height="15" fill="rgb(207,154,6)" fg:x="217" fg:w="7"/><text x="24.6320%" y="223.50"></text></g><g><title>sha2::sha256::soft::compress (7 samples, 0.79%)</title><rect x="24.3820%" y="197" width="0.7865%" height="15" fill="rgb(223,64,47)" fg:x="217" fg:w="7"/><text x="24.6320%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (6 samples, 0.67%)</title><rect x="24.4944%" y="181" width="0.6742%" height="15" fill="rgb(211,161,38)" fg:x="218" fg:w="6"/><text x="24.7444%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (3 samples, 0.34%)</title><rect x="24.8315%" y="165" width="0.3371%" height="15" fill="rgb(219,138,40)" fg:x="221" fg:w="3"/><text x="25.0815%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="25.0562%" y="149" width="0.1124%" height="15" fill="rgb(241,228,46)" fg:x="223" fg:w="1"/><text x="25.3062%" y="159.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.11%)</title><rect x="25.2809%" y="133" width="0.1124%" height="15" fill="rgb(223,209,38)" fg:x="225" fg:w="1"/><text x="25.5309%" y="143.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="25.2809%" y="117" width="0.1124%" height="15" fill="rgb(236,164,45)" fg:x="225" fg:w="1"/><text x="25.5309%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.11%)</title><rect x="25.3933%" y="101" width="0.1124%" height="15" fill="rgb(231,15,5)" fg:x="226" fg:w="1"/><text x="25.6433%" y="111.50"></text></g><g><title>sha2::sha256::soft::schedule (2 samples, 0.22%)</title><rect x="25.3933%" y="133" width="0.2247%" height="15" fill="rgb(252,35,15)" fg:x="226" fg:w="2"/><text x="25.6433%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (2 samples, 0.22%)</title><rect x="25.3933%" y="117" width="0.2247%" height="15" fill="rgb(248,181,18)" fg:x="226" fg:w="2"/><text x="25.6433%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.11%)</title><rect x="25.5056%" y="101" width="0.1124%" height="15" fill="rgb(233,39,42)" fg:x="227" fg:w="1"/><text x="25.7556%" y="111.50"></text></g><g><title>sha2::sha256::soft::shr (1 samples, 0.11%)</title><rect x="25.5056%" y="85" width="0.1124%" height="15" fill="rgb(238,110,33)" fg:x="227" fg:w="1"/><text x="25.7556%" y="95.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (4 samples, 0.45%)</title><rect x="26.2921%" y="117" width="0.4494%" height="15" fill="rgb(233,195,10)" fg:x="234" fg:w="4"/><text x="26.5421%" y="127.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (15 samples, 1.69%)</title><rect x="25.1685%" y="309" width="1.6854%" height="15" fill="rgb(254,105,3)" fg:x="224" fg:w="15"/><text x="25.4185%" y="319.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (15 samples, 1.69%)</title><rect x="25.1685%" y="293" width="1.6854%" height="15" fill="rgb(221,225,9)" fg:x="224" fg:w="15"/><text x="25.4185%" y="303.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (15 samples, 1.69%)</title><rect x="25.1685%" y="277" width="1.6854%" height="15" fill="rgb(224,227,45)" fg:x="224" fg:w="15"/><text x="25.4185%" y="287.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (15 samples, 1.69%)</title><rect x="25.1685%" y="261" width="1.6854%" height="15" fill="rgb(229,198,43)" fg:x="224" fg:w="15"/><text x="25.4185%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::finish (15 samples, 1.69%)</title><rect x="25.1685%" y="245" width="1.6854%" height="15" fill="rgb(206,209,35)" fg:x="224" fg:w="15"/><text x="25.4185%" y="255.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (15 samples, 1.69%)</title><rect x="25.1685%" y="229" width="1.6854%" height="15" fill="rgb(245,195,53)" fg:x="224" fg:w="15"/><text x="25.4185%" y="239.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (15 samples, 1.69%)</title><rect x="25.1685%" y="213" width="1.6854%" height="15" fill="rgb(240,92,26)" fg:x="224" fg:w="15"/><text x="25.4185%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (15 samples, 1.69%)</title><rect x="25.1685%" y="197" width="1.6854%" height="15" fill="rgb(207,40,23)" fg:x="224" fg:w="15"/><text x="25.4185%" y="207.50"></text></g><g><title>sha2::sha256::x86::compress (15 samples, 1.69%)</title><rect x="25.1685%" y="181" width="1.6854%" height="15" fill="rgb(223,111,35)" fg:x="224" fg:w="15"/><text x="25.4185%" y="191.50"></text></g><g><title>sha2::sha256::soft::compress (15 samples, 1.69%)</title><rect x="25.1685%" y="165" width="1.6854%" height="15" fill="rgb(229,147,28)" fg:x="224" fg:w="15"/><text x="25.4185%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (15 samples, 1.69%)</title><rect x="25.1685%" y="149" width="1.6854%" height="15" fill="rgb(211,29,28)" fg:x="224" fg:w="15"/><text x="25.4185%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (11 samples, 1.24%)</title><rect x="25.6180%" y="133" width="1.2360%" height="15" fill="rgb(228,72,33)" fg:x="228" fg:w="11"/><text x="25.8680%" y="143.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="26.7416%" y="117" width="0.1124%" height="15" fill="rgb(205,214,31)" fg:x="238" fg:w="1"/><text x="26.9916%" y="127.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::update (1 samples, 0.11%)</title><rect x="26.8539%" y="309" width="0.1124%" height="15" fill="rgb(224,111,15)" fg:x="239" fg:w="1"/><text x="27.1039%" y="319.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.11%)</title><rect x="26.8539%" y="293" width="0.1124%" height="15" fill="rgb(253,21,26)" fg:x="239" fg:w="1"/><text x="27.1039%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.11%)</title><rect x="26.8539%" y="277" width="0.1124%" height="15" fill="rgb(245,139,43)" fg:x="239" fg:w="1"/><text x="27.1039%" y="287.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.11%)</title><rect x="26.8539%" y="261" width="0.1124%" height="15" fill="rgb(252,170,7)" fg:x="239" fg:w="1"/><text x="27.1039%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.11%)</title><rect x="26.8539%" y="245" width="0.1124%" height="15" fill="rgb(231,118,14)" fg:x="239" fg:w="1"/><text x="27.1039%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="26.8539%" y="229" width="0.1124%" height="15" fill="rgb(238,83,0)" fg:x="239" fg:w="1"/><text x="27.1039%" y="239.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="26.8539%" y="213" width="0.1124%" height="15" fill="rgb(221,39,39)" fg:x="239" fg:w="1"/><text x="27.1039%" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (1 samples, 0.11%)</title><rect x="27.0787%" y="181" width="0.1124%" height="15" fill="rgb(222,119,46)" fg:x="241" fg:w="1"/><text x="27.3287%" y="191.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (1 samples, 0.11%)</title><rect x="27.0787%" y="165" width="0.1124%" height="15" fill="rgb(222,165,49)" fg:x="241" fg:w="1"/><text x="27.3287%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (1 samples, 0.11%)</title><rect x="27.0787%" y="149" width="0.1124%" height="15" fill="rgb(219,113,52)" fg:x="241" fg:w="1"/><text x="27.3287%" y="159.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::squeeze_and_ratchet (20 samples, 2.25%)</title><rect x="25.1685%" y="325" width="2.2472%" height="15" fill="rgb(214,7,15)" fg:x="224" fg:w="20"/><text x="25.4185%" y="335.50">&lt;..</text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (4 samples, 0.45%)</title><rect x="26.9663%" y="309" width="0.4494%" height="15" fill="rgb(235,32,4)" fg:x="240" fg:w="4"/><text x="27.2163%" y="319.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (4 samples, 0.45%)</title><rect x="26.9663%" y="293" width="0.4494%" height="15" fill="rgb(238,90,54)" fg:x="240" fg:w="4"/><text x="27.2163%" y="303.50"></text></g><g><title>sha2::sha256::Engine256::update (4 samples, 0.45%)</title><rect x="26.9663%" y="277" width="0.4494%" height="15" fill="rgb(213,208,19)" fg:x="240" fg:w="4"/><text x="27.2163%" y="287.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (4 samples, 0.45%)</title><rect x="26.9663%" y="261" width="0.4494%" height="15" fill="rgb(233,156,4)" fg:x="240" fg:w="4"/><text x="27.2163%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (4 samples, 0.45%)</title><rect x="26.9663%" y="245" width="0.4494%" height="15" fill="rgb(207,194,5)" fg:x="240" fg:w="4"/><text x="27.2163%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4 samples, 0.45%)</title><rect x="26.9663%" y="229" width="0.4494%" height="15" fill="rgb(206,111,30)" fg:x="240" fg:w="4"/><text x="27.2163%" y="239.50"></text></g><g><title>sha2::sha256::x86::compress (4 samples, 0.45%)</title><rect x="26.9663%" y="213" width="0.4494%" height="15" fill="rgb(243,70,54)" fg:x="240" fg:w="4"/><text x="27.2163%" y="223.50"></text></g><g><title>sha2::sha256::soft::compress (4 samples, 0.45%)</title><rect x="26.9663%" y="197" width="0.4494%" height="15" fill="rgb(242,28,8)" fg:x="240" fg:w="4"/><text x="27.2163%" y="207.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 0.22%)</title><rect x="27.1910%" y="181" width="0.2247%" height="15" fill="rgb(219,106,18)" fg:x="242" fg:w="2"/><text x="27.4410%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (2 samples, 0.22%)</title><rect x="27.1910%" y="165" width="0.2247%" height="15" fill="rgb(244,222,10)" fg:x="242" fg:w="2"/><text x="27.4410%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.11%)</title><rect x="27.3034%" y="149" width="0.1124%" height="15" fill="rgb(236,179,52)" fg:x="243" fg:w="1"/><text x="27.5534%" y="159.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.22%)</title><rect x="27.4157%" y="309" width="0.2247%" height="15" fill="rgb(213,23,39)" fg:x="244" fg:w="2"/><text x="27.6657%" y="319.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (1 samples, 0.11%)</title><rect x="27.5281%" y="293" width="0.1124%" height="15" fill="rgb(238,48,10)" fg:x="245" fg:w="1"/><text x="27.7781%" y="303.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (1 samples, 0.11%)</title><rect x="27.6404%" y="309" width="0.1124%" height="15" fill="rgb(251,196,23)" fg:x="246" fg:w="1"/><text x="27.8904%" y="319.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (1 samples, 0.11%)</title><rect x="27.6404%" y="293" width="0.1124%" height="15" fill="rgb(250,152,24)" fg:x="246" fg:w="1"/><text x="27.8904%" y="303.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (3 samples, 0.34%)</title><rect x="27.7528%" y="277" width="0.3371%" height="15" fill="rgb(209,150,17)" fg:x="247" fg:w="3"/><text x="28.0028%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (3 samples, 0.34%)</title><rect x="27.7528%" y="261" width="0.3371%" height="15" fill="rgb(234,202,34)" fg:x="247" fg:w="3"/><text x="28.0028%" y="271.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.22%)</title><rect x="28.0899%" y="245" width="0.2247%" height="15" fill="rgb(253,148,53)" fg:x="250" fg:w="2"/><text x="28.3399%" y="255.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (1 samples, 0.11%)</title><rect x="28.2022%" y="229" width="0.1124%" height="15" fill="rgb(218,129,16)" fg:x="251" fg:w="1"/><text x="28.4522%" y="239.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (49 samples, 5.51%)</title><rect x="28.3146%" y="245" width="5.5056%" height="15" fill="rgb(216,85,19)" fg:x="252" fg:w="49"/><text x="28.5646%" y="255.50">curve25..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (24 samples, 2.70%)</title><rect x="31.1236%" y="229" width="2.6966%" height="15" fill="rgb(235,228,7)" fg:x="277" fg:w="24"/><text x="31.3736%" y="239.50">cu..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow_p58 (53 samples, 5.96%)</title><rect x="28.0899%" y="277" width="5.9551%" height="15" fill="rgb(245,175,0)" fg:x="250" fg:w="53"/><text x="28.3399%" y="287.50">curve255..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (53 samples, 5.96%)</title><rect x="28.0899%" y="261" width="5.9551%" height="15" fill="rgb(208,168,36)" fg:x="250" fg:w="53"/><text x="28.3399%" y="271.50">curve255..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (2 samples, 0.22%)</title><rect x="33.8202%" y="245" width="0.2247%" height="15" fill="rgb(246,171,24)" fg:x="301" fg:w="2"/><text x="34.0702%" y="255.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (2 samples, 0.22%)</title><rect x="33.8202%" y="229" width="0.2247%" height="15" fill="rgb(215,142,24)" fg:x="301" fg:w="2"/><text x="34.0702%" y="239.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (2 samples, 0.22%)</title><rect x="33.8202%" y="213" width="0.2247%" height="15" fill="rgb(250,187,7)" fg:x="301" fg:w="2"/><text x="34.0702%" y="223.50"></text></g><g><title>curve25519_dalek::ristretto::RistrettoPoint::compress (60 samples, 6.74%)</title><rect x="27.4157%" y="325" width="6.7416%" height="15" fill="rgb(228,66,33)" fg:x="244" fg:w="60"/><text x="27.6657%" y="335.50">curve2551..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invsqrt (57 samples, 6.40%)</title><rect x="27.7528%" y="309" width="6.4045%" height="15" fill="rgb(234,215,21)" fg:x="247" fg:w="57"/><text x="28.0028%" y="319.50">curve255..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (57 samples, 6.40%)</title><rect x="27.7528%" y="293" width="6.4045%" height="15" fill="rgb(222,191,20)" fg:x="247" fg:w="57"/><text x="28.0028%" y="303.50">curve255..</text></g><g><title>curve25519_dalek::field::&lt;impl subtle::ConstantTimeEq for curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::ct_eq (1 samples, 0.11%)</title><rect x="34.0449%" y="277" width="0.1124%" height="15" fill="rgb(245,79,54)" fg:x="303" fg:w="1"/><text x="34.2949%" y="287.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::to_bytes (1 samples, 0.11%)</title><rect x="34.0449%" y="261" width="0.1124%" height="15" fill="rgb(240,10,37)" fg:x="303" fg:w="1"/><text x="34.2949%" y="271.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::update (1 samples, 0.11%)</title><rect x="34.1573%" y="293" width="0.1124%" height="15" fill="rgb(214,192,32)" fg:x="304" fg:w="1"/><text x="34.4073%" y="303.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.11%)</title><rect x="34.1573%" y="277" width="0.1124%" height="15" fill="rgb(209,36,54)" fg:x="304" fg:w="1"/><text x="34.4073%" y="287.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.11%)</title><rect x="34.1573%" y="261" width="0.1124%" height="15" fill="rgb(220,10,11)" fg:x="304" fg:w="1"/><text x="34.4073%" y="271.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.11%)</title><rect x="34.1573%" y="245" width="0.1124%" height="15" fill="rgb(221,106,17)" fg:x="304" fg:w="1"/><text x="34.4073%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (1 samples, 0.11%)</title><rect x="34.1573%" y="229" width="0.1124%" height="15" fill="rgb(251,142,44)" fg:x="304" fg:w="1"/><text x="34.4073%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (1 samples, 0.11%)</title><rect x="34.1573%" y="213" width="0.1124%" height="15" fill="rgb(238,13,15)" fg:x="304" fg:w="1"/><text x="34.4073%" y="223.50"></text></g><g><title>sha2::sha256::x86::compress (1 samples, 0.11%)</title><rect x="34.1573%" y="197" width="0.1124%" height="15" fill="rgb(208,107,27)" fg:x="304" fg:w="1"/><text x="34.4073%" y="207.50"></text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.11%)</title><rect x="34.1573%" y="181" width="0.1124%" height="15" fill="rgb(205,136,37)" fg:x="304" fg:w="1"/><text x="34.4073%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.11%)</title><rect x="34.1573%" y="165" width="0.1124%" height="15" fill="rgb(250,205,27)" fg:x="304" fg:w="1"/><text x="34.4073%" y="175.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.11%)</title><rect x="34.1573%" y="149" width="0.1124%" height="15" fill="rgb(210,80,43)" fg:x="304" fg:w="1"/><text x="34.4073%" y="159.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.11%)</title><rect x="34.1573%" y="133" width="0.1124%" height="15" fill="rgb(247,160,36)" fg:x="304" fg:w="1"/><text x="34.4073%" y="143.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="34.1573%" y="117" width="0.1124%" height="15" fill="rgb(234,13,49)" fg:x="304" fg:w="1"/><text x="34.4073%" y="127.50"></text></g><g><title>sha2::sha256::soft::shr (1 samples, 0.11%)</title><rect x="34.2697%" y="101" width="0.1124%" height="15" fill="rgb(234,122,0)" fg:x="305" fg:w="1"/><text x="34.5197%" y="111.50"></text></g><g><title>sha2::sha256::soft::schedule (2 samples, 0.22%)</title><rect x="34.2697%" y="149" width="0.2247%" height="15" fill="rgb(207,146,38)" fg:x="305" fg:w="2"/><text x="34.5197%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (2 samples, 0.22%)</title><rect x="34.2697%" y="133" width="0.2247%" height="15" fill="rgb(207,177,25)" fg:x="305" fg:w="2"/><text x="34.5197%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (2 samples, 0.22%)</title><rect x="34.2697%" y="117" width="0.2247%" height="15" fill="rgb(211,178,42)" fg:x="305" fg:w="2"/><text x="34.5197%" y="127.50"></text></g><g><title>sha2::sha256::soft::xor (1 samples, 0.11%)</title><rect x="34.3820%" y="101" width="0.1124%" height="15" fill="rgb(230,69,54)" fg:x="306" fg:w="1"/><text x="34.6320%" y="111.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::absorb (7 samples, 0.79%)</title><rect x="34.1573%" y="309" width="0.7865%" height="15" fill="rgb(214,135,41)" fg:x="304" fg:w="7"/><text x="34.4073%" y="319.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (6 samples, 0.67%)</title><rect x="34.2697%" y="293" width="0.6742%" height="15" fill="rgb(237,67,25)" fg:x="305" fg:w="6"/><text x="34.5197%" y="303.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (6 samples, 0.67%)</title><rect x="34.2697%" y="277" width="0.6742%" height="15" fill="rgb(222,189,50)" fg:x="305" fg:w="6"/><text x="34.5197%" y="287.50"></text></g><g><title>sha2::sha256::Engine256::update (6 samples, 0.67%)</title><rect x="34.2697%" y="261" width="0.6742%" height="15" fill="rgb(245,148,34)" fg:x="305" fg:w="6"/><text x="34.5197%" y="271.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (6 samples, 0.67%)</title><rect x="34.2697%" y="245" width="0.6742%" height="15" fill="rgb(222,29,6)" fg:x="305" fg:w="6"/><text x="34.5197%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (6 samples, 0.67%)</title><rect x="34.2697%" y="229" width="0.6742%" height="15" fill="rgb(221,189,43)" fg:x="305" fg:w="6"/><text x="34.5197%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (6 samples, 0.67%)</title><rect x="34.2697%" y="213" width="0.6742%" height="15" fill="rgb(207,36,27)" fg:x="305" fg:w="6"/><text x="34.5197%" y="223.50"></text></g><g><title>sha2::sha256::x86::compress (6 samples, 0.67%)</title><rect x="34.2697%" y="197" width="0.6742%" height="15" fill="rgb(217,90,24)" fg:x="305" fg:w="6"/><text x="34.5197%" y="207.50"></text></g><g><title>sha2::sha256::soft::compress (6 samples, 0.67%)</title><rect x="34.2697%" y="181" width="0.6742%" height="15" fill="rgb(224,66,35)" fg:x="305" fg:w="6"/><text x="34.5197%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (6 samples, 0.67%)</title><rect x="34.2697%" y="165" width="0.6742%" height="15" fill="rgb(221,13,50)" fg:x="305" fg:w="6"/><text x="34.5197%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (4 samples, 0.45%)</title><rect x="34.4944%" y="149" width="0.4494%" height="15" fill="rgb(236,68,49)" fg:x="307" fg:w="4"/><text x="34.7444%" y="159.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="34.8315%" y="133" width="0.1124%" height="15" fill="rgb(229,146,28)" fg:x="310" fg:w="1"/><text x="35.0815%" y="143.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.11%)</title><rect x="34.9438%" y="117" width="0.1124%" height="15" fill="rgb(225,31,38)" fg:x="311" fg:w="1"/><text x="35.1938%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.11%)</title><rect x="34.9438%" y="101" width="0.1124%" height="15" fill="rgb(250,208,3)" fg:x="311" fg:w="1"/><text x="35.1938%" y="111.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.11%)</title><rect x="34.9438%" y="85" width="0.1124%" height="15" fill="rgb(246,54,23)" fg:x="311" fg:w="1"/><text x="35.1938%" y="95.50"></text></g><g><title>sha2::sha256::soft::xor (1 samples, 0.11%)</title><rect x="34.9438%" y="69" width="0.1124%" height="15" fill="rgb(243,76,11)" fg:x="311" fg:w="1"/><text x="35.1938%" y="79.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (2 samples, 0.22%)</title><rect x="35.2809%" y="101" width="0.2247%" height="15" fill="rgb(245,21,50)" fg:x="314" fg:w="2"/><text x="35.5309%" y="111.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (7 samples, 0.79%)</title><rect x="34.9438%" y="293" width="0.7865%" height="15" fill="rgb(228,9,43)" fg:x="311" fg:w="7"/><text x="35.1938%" y="303.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (7 samples, 0.79%)</title><rect x="34.9438%" y="277" width="0.7865%" height="15" fill="rgb(208,100,47)" fg:x="311" fg:w="7"/><text x="35.1938%" y="287.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (7 samples, 0.79%)</title><rect x="34.9438%" y="261" width="0.7865%" height="15" fill="rgb(232,26,8)" fg:x="311" fg:w="7"/><text x="35.1938%" y="271.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (7 samples, 0.79%)</title><rect x="34.9438%" y="245" width="0.7865%" height="15" fill="rgb(216,166,38)" fg:x="311" fg:w="7"/><text x="35.1938%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::finish (7 samples, 0.79%)</title><rect x="34.9438%" y="229" width="0.7865%" height="15" fill="rgb(251,202,51)" fg:x="311" fg:w="7"/><text x="35.1938%" y="239.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (7 samples, 0.79%)</title><rect x="34.9438%" y="213" width="0.7865%" height="15" fill="rgb(254,216,34)" fg:x="311" fg:w="7"/><text x="35.1938%" y="223.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (7 samples, 0.79%)</title><rect x="34.9438%" y="197" width="0.7865%" height="15" fill="rgb(251,32,27)" fg:x="311" fg:w="7"/><text x="35.1938%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (7 samples, 0.79%)</title><rect x="34.9438%" y="181" width="0.7865%" height="15" fill="rgb(208,127,28)" fg:x="311" fg:w="7"/><text x="35.1938%" y="191.50"></text></g><g><title>sha2::sha256::x86::compress (7 samples, 0.79%)</title><rect x="34.9438%" y="165" width="0.7865%" height="15" fill="rgb(224,137,22)" fg:x="311" fg:w="7"/><text x="35.1938%" y="175.50"></text></g><g><title>sha2::sha256::soft::compress (7 samples, 0.79%)</title><rect x="34.9438%" y="149" width="0.7865%" height="15" fill="rgb(254,70,32)" fg:x="311" fg:w="7"/><text x="35.1938%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (7 samples, 0.79%)</title><rect x="34.9438%" y="133" width="0.7865%" height="15" fill="rgb(229,75,37)" fg:x="311" fg:w="7"/><text x="35.1938%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (6 samples, 0.67%)</title><rect x="35.0562%" y="117" width="0.6742%" height="15" fill="rgb(252,64,23)" fg:x="312" fg:w="6"/><text x="35.3062%" y="127.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.22%)</title><rect x="35.5056%" y="101" width="0.2247%" height="15" fill="rgb(232,162,48)" fg:x="316" fg:w="2"/><text x="35.7556%" y="111.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.11%)</title><rect x="35.7303%" y="149" width="0.1124%" height="15" fill="rgb(246,160,12)" fg:x="318" fg:w="1"/><text x="35.9803%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.11%)</title><rect x="35.7303%" y="133" width="0.1124%" height="15" fill="rgb(247,166,0)" fg:x="318" fg:w="1"/><text x="35.9803%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.11%)</title><rect x="35.7303%" y="117" width="0.1124%" height="15" fill="rgb(249,219,21)" fg:x="318" fg:w="1"/><text x="35.9803%" y="127.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.11%)</title><rect x="35.8427%" y="133" width="0.1124%" height="15" fill="rgb(205,209,3)" fg:x="319" fg:w="1"/><text x="36.0927%" y="143.50"></text></g><g><title>poksho::shoapi::ShoApi::absorb_and_ratchet (17 samples, 1.91%)</title><rect x="34.1573%" y="325" width="1.9101%" height="15" fill="rgb(243,44,1)" fg:x="304" fg:w="17"/><text x="34.4073%" y="335.50">p..</text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::ratchet (10 samples, 1.12%)</title><rect x="34.9438%" y="309" width="1.1236%" height="15" fill="rgb(206,159,16)" fg:x="311" fg:w="10"/><text x="35.1938%" y="319.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::reset (3 samples, 0.34%)</title><rect x="35.7303%" y="293" width="0.3371%" height="15" fill="rgb(244,77,30)" fg:x="318" fg:w="3"/><text x="35.9803%" y="303.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (3 samples, 0.34%)</title><rect x="35.7303%" y="277" width="0.3371%" height="15" fill="rgb(218,69,12)" fg:x="318" fg:w="3"/><text x="35.9803%" y="287.50"></text></g><g><title>sha2::sha256::Engine256::update (3 samples, 0.34%)</title><rect x="35.7303%" y="261" width="0.3371%" height="15" fill="rgb(212,87,7)" fg:x="318" fg:w="3"/><text x="35.9803%" y="271.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (3 samples, 0.34%)</title><rect x="35.7303%" y="245" width="0.3371%" height="15" fill="rgb(245,114,25)" fg:x="318" fg:w="3"/><text x="35.9803%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (3 samples, 0.34%)</title><rect x="35.7303%" y="229" width="0.3371%" height="15" fill="rgb(210,61,42)" fg:x="318" fg:w="3"/><text x="35.9803%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (3 samples, 0.34%)</title><rect x="35.7303%" y="213" width="0.3371%" height="15" fill="rgb(211,52,33)" fg:x="318" fg:w="3"/><text x="35.9803%" y="223.50"></text></g><g><title>sha2::sha256::x86::compress (3 samples, 0.34%)</title><rect x="35.7303%" y="197" width="0.3371%" height="15" fill="rgb(234,58,33)" fg:x="318" fg:w="3"/><text x="35.9803%" y="207.50"></text></g><g><title>sha2::sha256::soft::compress (3 samples, 0.34%)</title><rect x="35.7303%" y="181" width="0.3371%" height="15" fill="rgb(220,115,36)" fg:x="318" fg:w="3"/><text x="35.9803%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (3 samples, 0.34%)</title><rect x="35.7303%" y="165" width="0.3371%" height="15" fill="rgb(243,153,54)" fg:x="318" fg:w="3"/><text x="35.9803%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (2 samples, 0.22%)</title><rect x="35.8427%" y="149" width="0.2247%" height="15" fill="rgb(251,47,18)" fg:x="319" fg:w="2"/><text x="36.0927%" y="159.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="35.9551%" y="133" width="0.1124%" height="15" fill="rgb(242,102,42)" fg:x="320" fg:w="1"/><text x="36.2051%" y="143.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.11%)</title><rect x="36.0674%" y="277" width="0.1124%" height="15" fill="rgb(234,31,38)" fg:x="321" fg:w="1"/><text x="36.3174%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.11%)</title><rect x="36.0674%" y="261" width="0.1124%" height="15" fill="rgb(221,117,51)" fg:x="321" fg:w="1"/><text x="36.3174%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.11%)</title><rect x="36.0674%" y="245" width="0.1124%" height="15" fill="rgb(212,20,18)" fg:x="321" fg:w="1"/><text x="36.3174%" y="255.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.11%)</title><rect x="36.0674%" y="229" width="0.1124%" height="15" fill="rgb(245,133,36)" fg:x="321" fg:w="1"/><text x="36.3174%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (1 samples, 0.11%)</title><rect x="36.0674%" y="213" width="0.1124%" height="15" fill="rgb(212,6,19)" fg:x="321" fg:w="1"/><text x="36.3174%" y="223.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="36.1798%" y="261" width="0.1124%" height="15" fill="rgb(218,1,36)" fg:x="322" fg:w="1"/><text x="36.4298%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.11%)</title><rect x="36.2921%" y="261" width="0.1124%" height="15" fill="rgb(246,84,54)" fg:x="323" fg:w="1"/><text x="36.5421%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="36.2921%" y="245" width="0.1124%" height="15" fill="rgb(242,110,6)" fg:x="323" fg:w="1"/><text x="36.5421%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="36.2921%" y="229" width="0.1124%" height="15" fill="rgb(214,47,5)" fg:x="323" fg:w="1"/><text x="36.5421%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="36.2921%" y="213" width="0.1124%" height="15" fill="rgb(218,159,25)" fg:x="323" fg:w="1"/><text x="36.5421%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="36.2921%" y="197" width="0.1124%" height="15" fill="rgb(215,211,28)" fg:x="323" fg:w="1"/><text x="36.5421%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="36.2921%" y="181" width="0.1124%" height="15" fill="rgb(238,59,32)" fg:x="323" fg:w="1"/><text x="36.5421%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="36.2921%" y="165" width="0.1124%" height="15" fill="rgb(226,82,3)" fg:x="323" fg:w="1"/><text x="36.5421%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="36.2921%" y="149" width="0.1124%" height="15" fill="rgb(240,164,32)" fg:x="323" fg:w="1"/><text x="36.5421%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="36.2921%" y="133" width="0.1124%" height="15" fill="rgb(232,46,7)" fg:x="323" fg:w="1"/><text x="36.5421%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="36.2921%" y="117" width="0.1124%" height="15" fill="rgb(229,129,53)" fg:x="323" fg:w="1"/><text x="36.5421%" y="127.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.11%)</title><rect x="36.2921%" y="101" width="0.1124%" height="15" fill="rgb(234,188,29)" fg:x="323" fg:w="1"/><text x="36.5421%" y="111.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.11%)</title><rect x="36.2921%" y="85" width="0.1124%" height="15" fill="rgb(246,141,4)" fg:x="323" fg:w="1"/><text x="36.5421%" y="95.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.11%)</title><rect x="36.2921%" y="69" width="0.1124%" height="15" fill="rgb(229,23,39)" fg:x="323" fg:w="1"/><text x="36.5421%" y="79.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul::{{closure}} (1 samples, 0.11%)</title><rect x="36.2921%" y="53" width="0.1124%" height="15" fill="rgb(206,12,3)" fg:x="323" fg:w="1"/><text x="36.5421%" y="63.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::to_radix_16 (1 samples, 0.11%)</title><rect x="36.2921%" y="37" width="0.1124%" height="15" fill="rgb(252,226,20)" fg:x="323" fg:w="1"/><text x="36.5421%" y="47.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (23 samples, 2.58%)</title><rect x="36.4045%" y="245" width="2.5843%" height="15" fill="rgb(216,123,35)" fg:x="324" fg:w="23"/><text x="36.6545%" y="255.50">&lt;&amp;..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (15 samples, 1.69%)</title><rect x="37.3034%" y="229" width="1.6854%" height="15" fill="rgb(212,68,40)" fg:x="332" fg:w="15"/><text x="37.5534%" y="239.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (25 samples, 2.81%)</title><rect x="36.4045%" y="261" width="2.8090%" height="15" fill="rgb(254,125,32)" fg:x="324" fg:w="25"/><text x="36.6545%" y="271.50">cu..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (2 samples, 0.22%)</title><rect x="38.9888%" y="245" width="0.2247%" height="15" fill="rgb(253,97,22)" fg:x="347" fg:w="2"/><text x="39.2388%" y="255.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (19 samples, 2.13%)</title><rect x="39.2135%" y="261" width="2.1348%" height="15" fill="rgb(241,101,14)" fg:x="349" fg:w="19"/><text x="39.4635%" y="271.50">c..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (17 samples, 1.91%)</title><rect x="39.4382%" y="245" width="1.9101%" height="15" fill="rgb(238,103,29)" fg:x="351" fg:w="17"/><text x="39.6882%" y="255.50">&lt;..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (12 samples, 1.35%)</title><rect x="40.0000%" y="229" width="1.3483%" height="15" fill="rgb(233,195,47)" fg:x="356" fg:w="12"/><text x="40.2500%" y="239.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.90%)</title><rect x="42.0225%" y="245" width="0.8989%" height="15" fill="rgb(246,218,30)" fg:x="374" fg:w="8"/><text x="42.2725%" y="255.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (23 samples, 2.58%)</title><rect x="42.9213%" y="245" width="2.5843%" height="15" fill="rgb(219,145,47)" fg:x="382" fg:w="23"/><text x="43.1713%" y="255.50">cu..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (21 samples, 2.36%)</title><rect x="43.1461%" y="229" width="2.3596%" height="15" fill="rgb(243,12,26)" fg:x="384" fg:w="21"/><text x="43.3961%" y="239.50">&lt;..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (13 samples, 1.46%)</title><rect x="44.0449%" y="213" width="1.4607%" height="15" fill="rgb(214,87,16)" fg:x="392" fg:w="13"/><text x="44.2949%" y="223.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (54 samples, 6.07%)</title><rect x="45.5056%" y="245" width="6.0674%" height="15" fill="rgb(208,99,42)" fg:x="405" fg:w="54"/><text x="45.7556%" y="255.50">curve255..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (54 samples, 6.07%)</title><rect x="45.5056%" y="229" width="6.0674%" height="15" fill="rgb(253,99,2)" fg:x="405" fg:w="54"/><text x="45.7556%" y="239.50">&lt;&amp;curve2..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (32 samples, 3.60%)</title><rect x="47.9775%" y="213" width="3.5955%" height="15" fill="rgb(220,168,23)" fg:x="427" fg:w="32"/><text x="48.2275%" y="223.50">&lt;&amp;cu..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (4 samples, 0.45%)</title><rect x="52.0225%" y="229" width="0.4494%" height="15" fill="rgb(242,38,24)" fg:x="463" fg:w="4"/><text x="52.2725%" y="239.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (4 samples, 0.45%)</title><rect x="52.0225%" y="213" width="0.4494%" height="15" fill="rgb(225,182,9)" fg:x="463" fg:w="4"/><text x="52.2725%" y="223.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (13 samples, 1.46%)</title><rect x="52.4719%" y="229" width="1.4607%" height="15" fill="rgb(243,178,37)" fg:x="467" fg:w="13"/><text x="52.7219%" y="239.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (10 samples, 1.12%)</title><rect x="52.8090%" y="213" width="1.1236%" height="15" fill="rgb(232,139,19)" fg:x="470" fg:w="10"/><text x="53.0590%" y="223.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square2 (10 samples, 1.12%)</title><rect x="53.9326%" y="229" width="1.1236%" height="15" fill="rgb(225,201,24)" fg:x="480" fg:w="10"/><text x="54.1826%" y="239.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (10 samples, 1.12%)</title><rect x="53.9326%" y="213" width="1.1236%" height="15" fill="rgb(221,47,46)" fg:x="480" fg:w="10"/><text x="54.1826%" y="223.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (4 samples, 0.45%)</title><rect x="54.6067%" y="197" width="0.4494%" height="15" fill="rgb(249,23,13)" fg:x="486" fg:w="4"/><text x="54.8567%" y="207.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (161 samples, 18.09%)</title><rect x="41.3483%" y="261" width="18.0899%" height="15" fill="rgb(219,9,5)" fg:x="368" fg:w="161"/><text x="41.5983%" y="271.50">curve25519_dalek::edwards::E..</text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (70 samples, 7.87%)</title><rect x="51.5730%" y="245" width="7.8652%" height="15" fill="rgb(254,171,16)" fg:x="459" fg:w="70"/><text x="51.8230%" y="255.50">curve25519_..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (39 samples, 4.38%)</title><rect x="55.0562%" y="229" width="4.3820%" height="15" fill="rgb(230,171,20)" fg:x="490" fg:w="39"/><text x="55.3062%" y="239.50">curve..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (39 samples, 4.38%)</title><rect x="55.0562%" y="213" width="4.3820%" height="15" fill="rgb(210,71,41)" fg:x="490" fg:w="39"/><text x="55.3062%" y="223.50">curve..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (15 samples, 1.69%)</title><rect x="57.7528%" y="197" width="1.6854%" height="15" fill="rgb(206,173,20)" fg:x="514" fg:w="15"/><text x="58.0028%" y="207.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint as core::ops::arith::Neg&gt;::neg (3 samples, 0.34%)</title><rect x="59.4382%" y="229" width="0.3371%" height="15" fill="rgb(233,88,34)" fg:x="529" fg:w="3"/><text x="59.6882%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Neg&gt;::neg (2 samples, 0.22%)</title><rect x="59.5506%" y="213" width="0.2247%" height="15" fill="rgb(223,209,46)" fg:x="530" fg:w="2"/><text x="59.8006%" y="223.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::negate (2 samples, 0.22%)</title><rect x="59.5506%" y="197" width="0.2247%" height="15" fill="rgb(250,43,18)" fg:x="530" fg:w="2"/><text x="59.8006%" y="207.50"></text></g><g><title>&lt;T as subtle::ConditionallyNegatable&gt;::conditional_negate (6 samples, 0.67%)</title><rect x="59.4382%" y="245" width="0.6742%" height="15" fill="rgb(208,13,10)" fg:x="529" fg:w="6"/><text x="59.6882%" y="255.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (3 samples, 0.34%)</title><rect x="59.7753%" y="229" width="0.3371%" height="15" fill="rgb(212,200,36)" fg:x="532" fg:w="3"/><text x="60.0253%" y="239.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (3 samples, 0.34%)</title><rect x="59.7753%" y="213" width="0.3371%" height="15" fill="rgb(225,90,30)" fg:x="532" fg:w="3"/><text x="60.0253%" y="223.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (2 samples, 0.22%)</title><rect x="59.8876%" y="197" width="0.2247%" height="15" fill="rgb(236,182,39)" fg:x="533" fg:w="2"/><text x="60.1376%" y="207.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (16 samples, 1.80%)</title><rect x="60.1124%" y="245" width="1.7978%" height="15" fill="rgb(212,144,35)" fg:x="535" fg:w="16"/><text x="60.3624%" y="255.50">&lt;..</text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (16 samples, 1.80%)</title><rect x="60.1124%" y="229" width="1.7978%" height="15" fill="rgb(228,63,44)" fg:x="535" fg:w="16"/><text x="60.3624%" y="239.50">&lt;..</text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (14 samples, 1.57%)</title><rect x="60.3371%" y="213" width="1.5730%" height="15" fill="rgb(228,109,6)" fg:x="537" fg:w="14"/><text x="60.5871%" y="223.50"></text></g><g><title>poksho::statement::Statement::homomorphism_with_subtraction (232 samples, 26.07%)</title><rect x="36.0674%" y="325" width="26.0674%" height="15" fill="rgb(238,117,24)" fg:x="321" fg:w="232"/><text x="36.3174%" y="335.50">poksho::statement::Statement::homomorphism..</text></g><g><title>&lt;curve25519_dalek::ristretto::RistrettoPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (232 samples, 26.07%)</title><rect x="36.0674%" y="309" width="26.0674%" height="15" fill="rgb(242,26,26)" fg:x="321" fg:w="232"/><text x="36.3174%" y="319.50">&lt;curve25519_dalek::ristretto::RistrettoPoi..</text></g><g><title>&lt;curve25519_dalek::edwards::EdwardsPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (232 samples, 26.07%)</title><rect x="36.0674%" y="293" width="26.0674%" height="15" fill="rgb(221,92,48)" fg:x="321" fg:w="232"/><text x="36.3174%" y="303.50">&lt;curve25519_dalek::edwards::EdwardsPoint a..</text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (231 samples, 25.96%)</title><rect x="36.1798%" y="277" width="25.9551%" height="15" fill="rgb(209,209,32)" fg:x="322" fg:w="231"/><text x="36.4298%" y="287.50">&lt;curve25519_dalek::backend::serial::scala..</text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (24 samples, 2.70%)</title><rect x="59.4382%" y="261" width="2.6966%" height="15" fill="rgb(221,70,22)" fg:x="529" fg:w="24"/><text x="59.6882%" y="271.50">cu..</text></g><g><title>&lt;u16 as subtle::ConstantTimeEq&gt;::ct_eq (2 samples, 0.22%)</title><rect x="61.9101%" y="245" width="0.2247%" height="15" fill="rgb(248,145,5)" fg:x="551" fg:w="2"/><text x="62.1601%" y="255.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.22%)</title><rect x="61.9101%" y="229" width="0.2247%" height="15" fill="rgb(226,116,26)" fg:x="551" fg:w="2"/><text x="62.1601%" y="239.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (2 samples, 0.22%)</title><rect x="61.9101%" y="213" width="0.2247%" height="15" fill="rgb(244,5,17)" fg:x="551" fg:w="2"/><text x="62.1601%" y="223.50"></text></g><g><title>subtle::black_box (2 samples, 0.22%)</title><rect x="61.9101%" y="197" width="0.2247%" height="15" fill="rgb(252,159,33)" fg:x="551" fg:w="2"/><text x="62.1601%" y="207.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.22%)</title><rect x="61.9101%" y="181" width="0.2247%" height="15" fill="rgb(206,71,0)" fg:x="551" fg:w="2"/><text x="62.1601%" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.11%)</title><rect x="62.1348%" y="229" width="0.1124%" height="15" fill="rgb(233,118,54)" fg:x="553" fg:w="1"/><text x="62.3848%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="62.1348%" y="213" width="0.1124%" height="15" fill="rgb(234,83,48)" fg:x="553" fg:w="1"/><text x="62.3848%" y="223.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="62.1348%" y="197" width="0.1124%" height="15" fill="rgb(228,3,54)" fg:x="553" fg:w="1"/><text x="62.3848%" y="207.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.11%)</title><rect x="62.2472%" y="149" width="0.1124%" height="15" fill="rgb(226,155,13)" fg:x="554" fg:w="1"/><text x="62.4972%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.11%)</title><rect x="62.2472%" y="133" width="0.1124%" height="15" fill="rgb(241,28,37)" fg:x="554" fg:w="1"/><text x="62.4972%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.11%)</title><rect x="62.2472%" y="117" width="0.1124%" height="15" fill="rgb(233,93,10)" fg:x="554" fg:w="1"/><text x="62.4972%" y="127.50"></text></g><g><title>sha2::sha256::soft::shl (1 samples, 0.11%)</title><rect x="62.2472%" y="101" width="0.1124%" height="15" fill="rgb(225,113,19)" fg:x="554" fg:w="1"/><text x="62.4972%" y="111.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::update (3 samples, 0.34%)</title><rect x="62.1348%" y="293" width="0.3371%" height="15" fill="rgb(241,2,18)" fg:x="553" fg:w="3"/><text x="62.3848%" y="303.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (3 samples, 0.34%)</title><rect x="62.1348%" y="277" width="0.3371%" height="15" fill="rgb(228,207,21)" fg:x="553" fg:w="3"/><text x="62.3848%" y="287.50"></text></g><g><title>sha2::sha256::Engine256::update (3 samples, 0.34%)</title><rect x="62.1348%" y="261" width="0.3371%" height="15" fill="rgb(213,211,35)" fg:x="553" fg:w="3"/><text x="62.3848%" y="271.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (3 samples, 0.34%)</title><rect x="62.1348%" y="245" width="0.3371%" height="15" fill="rgb(209,83,10)" fg:x="553" fg:w="3"/><text x="62.3848%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (2 samples, 0.22%)</title><rect x="62.2472%" y="229" width="0.2247%" height="15" fill="rgb(209,164,1)" fg:x="554" fg:w="2"/><text x="62.4972%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (2 samples, 0.22%)</title><rect x="62.2472%" y="213" width="0.2247%" height="15" fill="rgb(213,184,43)" fg:x="554" fg:w="2"/><text x="62.4972%" y="223.50"></text></g><g><title>sha2::sha256::x86::compress (2 samples, 0.22%)</title><rect x="62.2472%" y="197" width="0.2247%" height="15" fill="rgb(231,61,34)" fg:x="554" fg:w="2"/><text x="62.4972%" y="207.50"></text></g><g><title>sha2::sha256::soft::compress (2 samples, 0.22%)</title><rect x="62.2472%" y="181" width="0.2247%" height="15" fill="rgb(235,75,3)" fg:x="554" fg:w="2"/><text x="62.4972%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 0.22%)</title><rect x="62.2472%" y="165" width="0.2247%" height="15" fill="rgb(220,106,47)" fg:x="554" fg:w="2"/><text x="62.4972%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.11%)</title><rect x="62.3596%" y="149" width="0.1124%" height="15" fill="rgb(210,196,33)" fg:x="555" fg:w="1"/><text x="62.6096%" y="159.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.11%)</title><rect x="62.4719%" y="149" width="0.1124%" height="15" fill="rgb(229,154,42)" fg:x="556" fg:w="1"/><text x="62.7219%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.11%)</title><rect x="62.4719%" y="133" width="0.1124%" height="15" fill="rgb(228,114,26)" fg:x="556" fg:w="1"/><text x="62.7219%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.11%)</title><rect x="62.4719%" y="117" width="0.1124%" height="15" fill="rgb(208,144,1)" fg:x="556" fg:w="1"/><text x="62.7219%" y="127.50"></text></g><g><title>sha2::sha256::soft::shl (1 samples, 0.11%)</title><rect x="62.4719%" y="101" width="0.1124%" height="15" fill="rgb(239,112,37)" fg:x="556" fg:w="1"/><text x="62.7219%" y="111.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::absorb (5 samples, 0.56%)</title><rect x="62.1348%" y="309" width="0.5618%" height="15" fill="rgb(210,96,50)" fg:x="553" fg:w="5"/><text x="62.3848%" y="319.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (2 samples, 0.22%)</title><rect x="62.4719%" y="293" width="0.2247%" height="15" fill="rgb(222,178,2)" fg:x="556" fg:w="2"/><text x="62.7219%" y="303.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (2 samples, 0.22%)</title><rect x="62.4719%" y="277" width="0.2247%" height="15" fill="rgb(226,74,18)" fg:x="556" fg:w="2"/><text x="62.7219%" y="287.50"></text></g><g><title>sha2::sha256::Engine256::update (2 samples, 0.22%)</title><rect x="62.4719%" y="261" width="0.2247%" height="15" fill="rgb(225,67,54)" fg:x="556" fg:w="2"/><text x="62.7219%" y="271.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (2 samples, 0.22%)</title><rect x="62.4719%" y="245" width="0.2247%" height="15" fill="rgb(251,92,32)" fg:x="556" fg:w="2"/><text x="62.7219%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (2 samples, 0.22%)</title><rect x="62.4719%" y="229" width="0.2247%" height="15" fill="rgb(228,149,22)" fg:x="556" fg:w="2"/><text x="62.7219%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (2 samples, 0.22%)</title><rect x="62.4719%" y="213" width="0.2247%" height="15" fill="rgb(243,54,13)" fg:x="556" fg:w="2"/><text x="62.7219%" y="223.50"></text></g><g><title>sha2::sha256::x86::compress (2 samples, 0.22%)</title><rect x="62.4719%" y="197" width="0.2247%" height="15" fill="rgb(243,180,28)" fg:x="556" fg:w="2"/><text x="62.7219%" y="207.50"></text></g><g><title>sha2::sha256::soft::compress (2 samples, 0.22%)</title><rect x="62.4719%" y="181" width="0.2247%" height="15" fill="rgb(208,167,24)" fg:x="556" fg:w="2"/><text x="62.7219%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 0.22%)</title><rect x="62.4719%" y="165" width="0.2247%" height="15" fill="rgb(245,73,45)" fg:x="556" fg:w="2"/><text x="62.7219%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.11%)</title><rect x="62.5843%" y="149" width="0.1124%" height="15" fill="rgb(237,203,48)" fg:x="557" fg:w="1"/><text x="62.8343%" y="159.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (1 samples, 0.11%)</title><rect x="62.6966%" y="165" width="0.1124%" height="15" fill="rgb(211,197,16)" fg:x="558" fg:w="1"/><text x="62.9466%" y="175.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (1 samples, 0.11%)</title><rect x="62.6966%" y="149" width="0.1124%" height="15" fill="rgb(243,99,51)" fg:x="558" fg:w="1"/><text x="62.9466%" y="159.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (1 samples, 0.11%)</title><rect x="62.6966%" y="133" width="0.1124%" height="15" fill="rgb(215,123,29)" fg:x="558" fg:w="1"/><text x="62.9466%" y="143.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.11%)</title><rect x="62.8090%" y="149" width="0.1124%" height="15" fill="rgb(239,186,37)" fg:x="559" fg:w="1"/><text x="63.0590%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.11%)</title><rect x="62.8090%" y="133" width="0.1124%" height="15" fill="rgb(252,136,39)" fg:x="559" fg:w="1"/><text x="63.0590%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.11%)</title><rect x="62.8090%" y="117" width="0.1124%" height="15" fill="rgb(223,213,32)" fg:x="559" fg:w="1"/><text x="63.0590%" y="127.50"></text></g><g><title>sha2::sha256::soft::shl (1 samples, 0.11%)</title><rect x="62.8090%" y="101" width="0.1124%" height="15" fill="rgb(233,115,5)" fg:x="559" fg:w="1"/><text x="63.0590%" y="111.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (5 samples, 0.56%)</title><rect x="62.6966%" y="293" width="0.5618%" height="15" fill="rgb(207,226,44)" fg:x="558" fg:w="5"/><text x="62.9466%" y="303.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (5 samples, 0.56%)</title><rect x="62.6966%" y="277" width="0.5618%" height="15" fill="rgb(208,126,0)" fg:x="558" fg:w="5"/><text x="62.9466%" y="287.50"></text></g><g><title>sha2::sha256::Engine256::update (5 samples, 0.56%)</title><rect x="62.6966%" y="261" width="0.5618%" height="15" fill="rgb(244,66,21)" fg:x="558" fg:w="5"/><text x="62.9466%" y="271.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (5 samples, 0.56%)</title><rect x="62.6966%" y="245" width="0.5618%" height="15" fill="rgb(222,97,12)" fg:x="558" fg:w="5"/><text x="62.9466%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (5 samples, 0.56%)</title><rect x="62.6966%" y="229" width="0.5618%" height="15" fill="rgb(219,213,19)" fg:x="558" fg:w="5"/><text x="62.9466%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (5 samples, 0.56%)</title><rect x="62.6966%" y="213" width="0.5618%" height="15" fill="rgb(252,169,30)" fg:x="558" fg:w="5"/><text x="62.9466%" y="223.50"></text></g><g><title>sha2::sha256::x86::compress (5 samples, 0.56%)</title><rect x="62.6966%" y="197" width="0.5618%" height="15" fill="rgb(206,32,51)" fg:x="558" fg:w="5"/><text x="62.9466%" y="207.50"></text></g><g><title>sha2::sha256::soft::compress (5 samples, 0.56%)</title><rect x="62.6966%" y="181" width="0.5618%" height="15" fill="rgb(250,172,42)" fg:x="558" fg:w="5"/><text x="62.9466%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (4 samples, 0.45%)</title><rect x="62.8090%" y="165" width="0.4494%" height="15" fill="rgb(209,34,43)" fg:x="559" fg:w="4"/><text x="63.0590%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (3 samples, 0.34%)</title><rect x="62.9213%" y="149" width="0.3371%" height="15" fill="rgb(223,11,35)" fg:x="560" fg:w="3"/><text x="63.1713%" y="159.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.22%)</title><rect x="63.0337%" y="133" width="0.2247%" height="15" fill="rgb(251,219,26)" fg:x="561" fg:w="2"/><text x="63.2837%" y="143.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.11%)</title><rect x="63.2584%" y="85" width="0.1124%" height="15" fill="rgb(231,119,3)" fg:x="563" fg:w="1"/><text x="63.5084%" y="95.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="63.2584%" y="69" width="0.1124%" height="15" fill="rgb(216,97,11)" fg:x="563" fg:w="1"/><text x="63.5084%" y="79.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::absorb (2 samples, 0.22%)</title><rect x="63.2584%" y="277" width="0.2247%" height="15" fill="rgb(223,59,9)" fg:x="563" fg:w="2"/><text x="63.5084%" y="287.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (2 samples, 0.22%)</title><rect x="63.2584%" y="261" width="0.2247%" height="15" fill="rgb(233,93,31)" fg:x="563" fg:w="2"/><text x="63.5084%" y="271.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (2 samples, 0.22%)</title><rect x="63.2584%" y="245" width="0.2247%" height="15" fill="rgb(239,81,33)" fg:x="563" fg:w="2"/><text x="63.5084%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::update (2 samples, 0.22%)</title><rect x="63.2584%" y="229" width="0.2247%" height="15" fill="rgb(213,120,34)" fg:x="563" fg:w="2"/><text x="63.5084%" y="239.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (2 samples, 0.22%)</title><rect x="63.2584%" y="213" width="0.2247%" height="15" fill="rgb(243,49,53)" fg:x="563" fg:w="2"/><text x="63.5084%" y="223.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (2 samples, 0.22%)</title><rect x="63.2584%" y="197" width="0.2247%" height="15" fill="rgb(247,216,33)" fg:x="563" fg:w="2"/><text x="63.5084%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (2 samples, 0.22%)</title><rect x="63.2584%" y="181" width="0.2247%" height="15" fill="rgb(226,26,14)" fg:x="563" fg:w="2"/><text x="63.5084%" y="191.50"></text></g><g><title>sha2::sha256::x86::compress (2 samples, 0.22%)</title><rect x="63.2584%" y="165" width="0.2247%" height="15" fill="rgb(215,49,53)" fg:x="563" fg:w="2"/><text x="63.5084%" y="175.50"></text></g><g><title>sha2::sha256::soft::compress (2 samples, 0.22%)</title><rect x="63.2584%" y="149" width="0.2247%" height="15" fill="rgb(245,162,40)" fg:x="563" fg:w="2"/><text x="63.5084%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 0.22%)</title><rect x="63.2584%" y="133" width="0.2247%" height="15" fill="rgb(229,68,17)" fg:x="563" fg:w="2"/><text x="63.5084%" y="143.50"></text></g><g><title>sha2::sha256::soft::schedule (2 samples, 0.22%)</title><rect x="63.2584%" y="117" width="0.2247%" height="15" fill="rgb(213,182,10)" fg:x="563" fg:w="2"/><text x="63.5084%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (2 samples, 0.22%)</title><rect x="63.2584%" y="101" width="0.2247%" height="15" fill="rgb(245,125,30)" fg:x="563" fg:w="2"/><text x="63.5084%" y="111.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.11%)</title><rect x="63.3708%" y="85" width="0.1124%" height="15" fill="rgb(232,202,2)" fg:x="564" fg:w="1"/><text x="63.6208%" y="95.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.11%)</title><rect x="63.4831%" y="69" width="0.1124%" height="15" fill="rgb(237,140,51)" fg:x="565" fg:w="1"/><text x="63.7331%" y="79.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.11%)</title><rect x="63.4831%" y="53" width="0.1124%" height="15" fill="rgb(236,157,25)" fg:x="565" fg:w="1"/><text x="63.7331%" y="63.50"></text></g><g><title>sha2::sha256::soft::shl (1 samples, 0.11%)</title><rect x="63.4831%" y="37" width="0.1124%" height="15" fill="rgb(219,209,0)" fg:x="565" fg:w="1"/><text x="63.7331%" y="47.50"></text></g><g><title>sha2::sha256::soft::schedule (2 samples, 0.22%)</title><rect x="63.4831%" y="85" width="0.2247%" height="15" fill="rgb(240,116,54)" fg:x="565" fg:w="2"/><text x="63.7331%" y="95.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (1 samples, 0.11%)</title><rect x="63.5955%" y="69" width="0.1124%" height="15" fill="rgb(216,10,36)" fg:x="566" fg:w="1"/><text x="63.8455%" y="79.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.11%)</title><rect x="63.5955%" y="53" width="0.1124%" height="15" fill="rgb(222,72,44)" fg:x="566" fg:w="1"/><text x="63.8455%" y="63.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (3 samples, 0.34%)</title><rect x="63.4831%" y="261" width="0.3371%" height="15" fill="rgb(232,159,9)" fg:x="565" fg:w="3"/><text x="63.7331%" y="271.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (3 samples, 0.34%)</title><rect x="63.4831%" y="245" width="0.3371%" height="15" fill="rgb(210,39,32)" fg:x="565" fg:w="3"/><text x="63.7331%" y="255.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (3 samples, 0.34%)</title><rect x="63.4831%" y="229" width="0.3371%" height="15" fill="rgb(216,194,45)" fg:x="565" fg:w="3"/><text x="63.7331%" y="239.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (3 samples, 0.34%)</title><rect x="63.4831%" y="213" width="0.3371%" height="15" fill="rgb(218,18,35)" fg:x="565" fg:w="3"/><text x="63.7331%" y="223.50"></text></g><g><title>sha2::sha256::Engine256::finish (3 samples, 0.34%)</title><rect x="63.4831%" y="197" width="0.3371%" height="15" fill="rgb(207,83,51)" fg:x="565" fg:w="3"/><text x="63.7331%" y="207.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (3 samples, 0.34%)</title><rect x="63.4831%" y="181" width="0.3371%" height="15" fill="rgb(225,63,43)" fg:x="565" fg:w="3"/><text x="63.7331%" y="191.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (3 samples, 0.34%)</title><rect x="63.4831%" y="165" width="0.3371%" height="15" fill="rgb(207,57,36)" fg:x="565" fg:w="3"/><text x="63.7331%" y="175.50"></text></g><g><title>sha2::sha256::compress256 (3 samples, 0.34%)</title><rect x="63.4831%" y="149" width="0.3371%" height="15" fill="rgb(216,99,33)" fg:x="565" fg:w="3"/><text x="63.7331%" y="159.50"></text></g><g><title>sha2::sha256::x86::compress (3 samples, 0.34%)</title><rect x="63.4831%" y="133" width="0.3371%" height="15" fill="rgb(225,42,16)" fg:x="565" fg:w="3"/><text x="63.7331%" y="143.50"></text></g><g><title>sha2::sha256::soft::compress (3 samples, 0.34%)</title><rect x="63.4831%" y="117" width="0.3371%" height="15" fill="rgb(220,201,45)" fg:x="565" fg:w="3"/><text x="63.7331%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (3 samples, 0.34%)</title><rect x="63.4831%" y="101" width="0.3371%" height="15" fill="rgb(225,33,4)" fg:x="565" fg:w="3"/><text x="63.7331%" y="111.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.11%)</title><rect x="63.7079%" y="85" width="0.1124%" height="15" fill="rgb(224,33,50)" fg:x="567" fg:w="1"/><text x="63.9579%" y="95.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="63.7079%" y="69" width="0.1124%" height="15" fill="rgb(246,198,51)" fg:x="567" fg:w="1"/><text x="63.9579%" y="79.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::new (12 samples, 1.35%)</title><rect x="62.6966%" y="309" width="1.3483%" height="15" fill="rgb(205,22,4)" fg:x="558" fg:w="12"/><text x="62.9466%" y="319.50"></text></g><g><title>poksho::shoapi::ShoApi::absorb_and_ratchet (7 samples, 0.79%)</title><rect x="63.2584%" y="293" width="0.7865%" height="15" fill="rgb(206,3,8)" fg:x="563" fg:w="7"/><text x="63.5084%" y="303.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::ratchet (5 samples, 0.56%)</title><rect x="63.4831%" y="277" width="0.5618%" height="15" fill="rgb(251,23,15)" fg:x="565" fg:w="5"/><text x="63.7331%" y="287.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::reset (2 samples, 0.22%)</title><rect x="63.8202%" y="261" width="0.2247%" height="15" fill="rgb(252,88,28)" fg:x="568" fg:w="2"/><text x="64.0702%" y="271.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (2 samples, 0.22%)</title><rect x="63.8202%" y="245" width="0.2247%" height="15" fill="rgb(212,127,14)" fg:x="568" fg:w="2"/><text x="64.0702%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::update (2 samples, 0.22%)</title><rect x="63.8202%" y="229" width="0.2247%" height="15" fill="rgb(247,145,37)" fg:x="568" fg:w="2"/><text x="64.0702%" y="239.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (2 samples, 0.22%)</title><rect x="63.8202%" y="213" width="0.2247%" height="15" fill="rgb(209,117,53)" fg:x="568" fg:w="2"/><text x="64.0702%" y="223.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (2 samples, 0.22%)</title><rect x="63.8202%" y="197" width="0.2247%" height="15" fill="rgb(212,90,42)" fg:x="568" fg:w="2"/><text x="64.0702%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (2 samples, 0.22%)</title><rect x="63.8202%" y="181" width="0.2247%" height="15" fill="rgb(218,164,37)" fg:x="568" fg:w="2"/><text x="64.0702%" y="191.50"></text></g><g><title>sha2::sha256::x86::compress (2 samples, 0.22%)</title><rect x="63.8202%" y="165" width="0.2247%" height="15" fill="rgb(246,65,34)" fg:x="568" fg:w="2"/><text x="64.0702%" y="175.50"></text></g><g><title>sha2::sha256::soft::compress (2 samples, 0.22%)</title><rect x="63.8202%" y="149" width="0.2247%" height="15" fill="rgb(231,100,33)" fg:x="568" fg:w="2"/><text x="64.0702%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 0.22%)</title><rect x="63.8202%" y="133" width="0.2247%" height="15" fill="rgb(228,126,14)" fg:x="568" fg:w="2"/><text x="64.0702%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (2 samples, 0.22%)</title><rect x="63.8202%" y="117" width="0.2247%" height="15" fill="rgb(215,173,21)" fg:x="568" fg:w="2"/><text x="64.0702%" y="127.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.11%)</title><rect x="63.9326%" y="101" width="0.1124%" height="15" fill="rgb(210,6,40)" fg:x="569" fg:w="1"/><text x="64.1826%" y="111.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.11%)</title><rect x="64.0449%" y="101" width="0.1124%" height="15" fill="rgb(212,48,18)" fg:x="570" fg:w="1"/><text x="64.2949%" y="111.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="64.0449%" y="85" width="0.1124%" height="15" fill="rgb(230,214,11)" fg:x="570" fg:w="1"/><text x="64.2949%" y="95.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.11%)</title><rect x="64.1573%" y="85" width="0.1124%" height="15" fill="rgb(254,105,39)" fg:x="571" fg:w="1"/><text x="64.4073%" y="95.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="64.1573%" y="69" width="0.1124%" height="15" fill="rgb(245,158,5)" fg:x="571" fg:w="1"/><text x="64.4073%" y="79.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (2 samples, 0.22%)</title><rect x="64.1573%" y="101" width="0.2247%" height="15" fill="rgb(249,208,11)" fg:x="571" fg:w="2"/><text x="64.4073%" y="111.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.11%)</title><rect x="64.2697%" y="85" width="0.1124%" height="15" fill="rgb(210,39,28)" fg:x="572" fg:w="1"/><text x="64.5197%" y="95.50"></text></g><g><title>sha2::sha256::soft::schedule (4 samples, 0.45%)</title><rect x="64.0449%" y="117" width="0.4494%" height="15" fill="rgb(211,56,53)" fg:x="570" fg:w="4"/><text x="64.2949%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (1 samples, 0.11%)</title><rect x="64.3820%" y="101" width="0.1124%" height="15" fill="rgb(226,201,30)" fg:x="573" fg:w="1"/><text x="64.6320%" y="111.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="64.3820%" y="85" width="0.1124%" height="15" fill="rgb(239,101,34)" fg:x="573" fg:w="1"/><text x="64.6320%" y="95.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (5 samples, 0.56%)</title><rect x="64.0449%" y="293" width="0.5618%" height="15" fill="rgb(226,209,5)" fg:x="570" fg:w="5"/><text x="64.2949%" y="303.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (5 samples, 0.56%)</title><rect x="64.0449%" y="277" width="0.5618%" height="15" fill="rgb(250,105,47)" fg:x="570" fg:w="5"/><text x="64.2949%" y="287.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (5 samples, 0.56%)</title><rect x="64.0449%" y="261" width="0.5618%" height="15" fill="rgb(230,72,3)" fg:x="570" fg:w="5"/><text x="64.2949%" y="271.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (5 samples, 0.56%)</title><rect x="64.0449%" y="245" width="0.5618%" height="15" fill="rgb(232,218,39)" fg:x="570" fg:w="5"/><text x="64.2949%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::finish (5 samples, 0.56%)</title><rect x="64.0449%" y="229" width="0.5618%" height="15" fill="rgb(248,166,6)" fg:x="570" fg:w="5"/><text x="64.2949%" y="239.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (5 samples, 0.56%)</title><rect x="64.0449%" y="213" width="0.5618%" height="15" fill="rgb(247,89,20)" fg:x="570" fg:w="5"/><text x="64.2949%" y="223.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (5 samples, 0.56%)</title><rect x="64.0449%" y="197" width="0.5618%" height="15" fill="rgb(248,130,54)" fg:x="570" fg:w="5"/><text x="64.2949%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (5 samples, 0.56%)</title><rect x="64.0449%" y="181" width="0.5618%" height="15" fill="rgb(234,196,4)" fg:x="570" fg:w="5"/><text x="64.2949%" y="191.50"></text></g><g><title>sha2::sha256::x86::compress (5 samples, 0.56%)</title><rect x="64.0449%" y="165" width="0.5618%" height="15" fill="rgb(250,143,31)" fg:x="570" fg:w="5"/><text x="64.2949%" y="175.50"></text></g><g><title>sha2::sha256::soft::compress (5 samples, 0.56%)</title><rect x="64.0449%" y="149" width="0.5618%" height="15" fill="rgb(211,110,34)" fg:x="570" fg:w="5"/><text x="64.2949%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (5 samples, 0.56%)</title><rect x="64.0449%" y="133" width="0.5618%" height="15" fill="rgb(215,124,48)" fg:x="570" fg:w="5"/><text x="64.2949%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.11%)</title><rect x="64.4944%" y="117" width="0.1124%" height="15" fill="rgb(216,46,13)" fg:x="574" fg:w="1"/><text x="64.7444%" y="127.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="64.4944%" y="101" width="0.1124%" height="15" fill="rgb(205,184,25)" fg:x="574" fg:w="1"/><text x="64.7444%" y="111.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::ratchet (6 samples, 0.67%)</title><rect x="64.0449%" y="309" width="0.6742%" height="15" fill="rgb(228,1,10)" fg:x="570" fg:w="6"/><text x="64.2949%" y="319.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::reset (1 samples, 0.11%)</title><rect x="64.6067%" y="293" width="0.1124%" height="15" fill="rgb(213,116,27)" fg:x="575" fg:w="1"/><text x="64.8567%" y="303.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.11%)</title><rect x="64.6067%" y="277" width="0.1124%" height="15" fill="rgb(241,95,50)" fg:x="575" fg:w="1"/><text x="64.8567%" y="287.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.11%)</title><rect x="64.6067%" y="261" width="0.1124%" height="15" fill="rgb(238,48,32)" fg:x="575" fg:w="1"/><text x="64.8567%" y="271.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.11%)</title><rect x="64.6067%" y="245" width="0.1124%" height="15" fill="rgb(235,113,49)" fg:x="575" fg:w="1"/><text x="64.8567%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (1 samples, 0.11%)</title><rect x="64.6067%" y="229" width="0.1124%" height="15" fill="rgb(205,127,43)" fg:x="575" fg:w="1"/><text x="64.8567%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (1 samples, 0.11%)</title><rect x="64.6067%" y="213" width="0.1124%" height="15" fill="rgb(250,162,2)" fg:x="575" fg:w="1"/><text x="64.8567%" y="223.50"></text></g><g><title>sha2::sha256::x86::compress (1 samples, 0.11%)</title><rect x="64.6067%" y="197" width="0.1124%" height="15" fill="rgb(220,13,41)" fg:x="575" fg:w="1"/><text x="64.8567%" y="207.50"></text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.11%)</title><rect x="64.6067%" y="181" width="0.1124%" height="15" fill="rgb(249,221,25)" fg:x="575" fg:w="1"/><text x="64.8567%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.11%)</title><rect x="64.6067%" y="165" width="0.1124%" height="15" fill="rgb(215,208,19)" fg:x="575" fg:w="1"/><text x="64.8567%" y="175.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.11%)</title><rect x="64.6067%" y="149" width="0.1124%" height="15" fill="rgb(236,175,2)" fg:x="575" fg:w="1"/><text x="64.8567%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.11%)</title><rect x="64.6067%" y="133" width="0.1124%" height="15" fill="rgb(241,52,2)" fg:x="575" fg:w="1"/><text x="64.8567%" y="143.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (1 samples, 0.11%)</title><rect x="64.7191%" y="229" width="0.1124%" height="15" fill="rgb(248,140,14)" fg:x="576" fg:w="1"/><text x="64.9691%" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (1 samples, 0.11%)</title><rect x="64.7191%" y="213" width="0.1124%" height="15" fill="rgb(253,22,42)" fg:x="576" fg:w="1"/><text x="64.9691%" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (1 samples, 0.11%)</title><rect x="64.7191%" y="197" width="0.1124%" height="15" fill="rgb(234,61,47)" fg:x="576" fg:w="1"/><text x="64.9691%" y="207.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::digest_pad (1 samples, 0.11%)</title><rect x="64.8315%" y="197" width="0.1124%" height="15" fill="rgb(208,226,15)" fg:x="577" fg:w="1"/><text x="65.0815%" y="207.50"></text></g><g><title>block_buffer::set_zero (1 samples, 0.11%)</title><rect x="64.8315%" y="181" width="0.1124%" height="15" fill="rgb(217,221,4)" fg:x="577" fg:w="1"/><text x="65.0815%" y="191.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.11%)</title><rect x="64.8315%" y="165" width="0.1124%" height="15" fill="rgb(212,174,34)" fg:x="577" fg:w="1"/><text x="65.0815%" y="175.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.11%)</title><rect x="64.8315%" y="149" width="0.1124%" height="15" fill="rgb(253,83,4)" fg:x="577" fg:w="1"/><text x="65.0815%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256load (1 samples, 0.11%)</title><rect x="64.9438%" y="101" width="0.1124%" height="15" fill="rgb(250,195,49)" fg:x="578" fg:w="1"/><text x="65.1938%" y="111.50"></text></g><g><title>sha2::sha256::soft::shr (1 samples, 0.11%)</title><rect x="65.0562%" y="69" width="0.1124%" height="15" fill="rgb(241,192,25)" fg:x="579" fg:w="1"/><text x="65.3062%" y="79.50"></text></g><g><title>sha2::sha256::soft::schedule (3 samples, 0.34%)</title><rect x="64.9438%" y="117" width="0.3371%" height="15" fill="rgb(208,124,10)" fg:x="578" fg:w="3"/><text x="65.1938%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (2 samples, 0.22%)</title><rect x="65.0562%" y="101" width="0.2247%" height="15" fill="rgb(222,33,0)" fg:x="579" fg:w="2"/><text x="65.3062%" y="111.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (2 samples, 0.22%)</title><rect x="65.0562%" y="85" width="0.2247%" height="15" fill="rgb(234,209,28)" fg:x="579" fg:w="2"/><text x="65.3062%" y="95.50"></text></g><g><title>sha2::sha256::soft::xor (1 samples, 0.11%)</title><rect x="65.1685%" y="69" width="0.1124%" height="15" fill="rgb(224,11,23)" fg:x="580" fg:w="1"/><text x="65.4185%" y="79.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (7 samples, 0.79%)</title><rect x="64.7191%" y="293" width="0.7865%" height="15" fill="rgb(232,99,1)" fg:x="576" fg:w="7"/><text x="64.9691%" y="303.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (7 samples, 0.79%)</title><rect x="64.7191%" y="277" width="0.7865%" height="15" fill="rgb(237,95,45)" fg:x="576" fg:w="7"/><text x="64.9691%" y="287.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (7 samples, 0.79%)</title><rect x="64.7191%" y="261" width="0.7865%" height="15" fill="rgb(208,109,11)" fg:x="576" fg:w="7"/><text x="64.9691%" y="271.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (7 samples, 0.79%)</title><rect x="64.7191%" y="245" width="0.7865%" height="15" fill="rgb(216,190,48)" fg:x="576" fg:w="7"/><text x="64.9691%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::finish (6 samples, 0.67%)</title><rect x="64.8315%" y="229" width="0.6742%" height="15" fill="rgb(251,171,36)" fg:x="577" fg:w="6"/><text x="65.0815%" y="239.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (6 samples, 0.67%)</title><rect x="64.8315%" y="213" width="0.6742%" height="15" fill="rgb(230,62,22)" fg:x="577" fg:w="6"/><text x="65.0815%" y="223.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (5 samples, 0.56%)</title><rect x="64.9438%" y="197" width="0.5618%" height="15" fill="rgb(225,114,35)" fg:x="578" fg:w="5"/><text x="65.1938%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (5 samples, 0.56%)</title><rect x="64.9438%" y="181" width="0.5618%" height="15" fill="rgb(215,118,42)" fg:x="578" fg:w="5"/><text x="65.1938%" y="191.50"></text></g><g><title>sha2::sha256::x86::compress (5 samples, 0.56%)</title><rect x="64.9438%" y="165" width="0.5618%" height="15" fill="rgb(243,119,21)" fg:x="578" fg:w="5"/><text x="65.1938%" y="175.50"></text></g><g><title>sha2::sha256::soft::compress (5 samples, 0.56%)</title><rect x="64.9438%" y="149" width="0.5618%" height="15" fill="rgb(252,177,53)" fg:x="578" fg:w="5"/><text x="65.1938%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (5 samples, 0.56%)</title><rect x="64.9438%" y="133" width="0.5618%" height="15" fill="rgb(237,209,29)" fg:x="578" fg:w="5"/><text x="65.1938%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (2 samples, 0.22%)</title><rect x="65.2809%" y="117" width="0.2247%" height="15" fill="rgb(212,65,23)" fg:x="581" fg:w="2"/><text x="65.5309%" y="127.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (2 samples, 0.22%)</title><rect x="65.5056%" y="293" width="0.2247%" height="15" fill="rgb(230,222,46)" fg:x="583" fg:w="2"/><text x="65.7556%" y="303.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (2 samples, 0.22%)</title><rect x="65.5056%" y="277" width="0.2247%" height="15" fill="rgb(215,135,32)" fg:x="583" fg:w="2"/><text x="65.7556%" y="287.50"></text></g><g><title>sha2::sha256::Engine256::update (2 samples, 0.22%)</title><rect x="65.5056%" y="261" width="0.2247%" height="15" fill="rgb(246,101,22)" fg:x="583" fg:w="2"/><text x="65.7556%" y="271.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (2 samples, 0.22%)</title><rect x="65.5056%" y="245" width="0.2247%" height="15" fill="rgb(206,107,13)" fg:x="583" fg:w="2"/><text x="65.7556%" y="255.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (2 samples, 0.22%)</title><rect x="65.5056%" y="229" width="0.2247%" height="15" fill="rgb(250,100,44)" fg:x="583" fg:w="2"/><text x="65.7556%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (2 samples, 0.22%)</title><rect x="65.5056%" y="213" width="0.2247%" height="15" fill="rgb(231,147,38)" fg:x="583" fg:w="2"/><text x="65.7556%" y="223.50"></text></g><g><title>sha2::sha256::x86::compress (2 samples, 0.22%)</title><rect x="65.5056%" y="197" width="0.2247%" height="15" fill="rgb(229,8,40)" fg:x="583" fg:w="2"/><text x="65.7556%" y="207.50"></text></g><g><title>sha2::sha256::soft::compress (2 samples, 0.22%)</title><rect x="65.5056%" y="181" width="0.2247%" height="15" fill="rgb(221,135,30)" fg:x="583" fg:w="2"/><text x="65.7556%" y="191.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 0.22%)</title><rect x="65.5056%" y="165" width="0.2247%" height="15" fill="rgb(249,193,18)" fg:x="583" fg:w="2"/><text x="65.7556%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.11%)</title><rect x="65.6180%" y="149" width="0.1124%" height="15" fill="rgb(209,133,39)" fg:x="584" fg:w="1"/><text x="65.8680%" y="159.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::squeeze_and_ratchet (10 samples, 1.12%)</title><rect x="64.7191%" y="309" width="1.1236%" height="15" fill="rgb(232,100,14)" fg:x="576" fg:w="10"/><text x="64.9691%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="65.7303%" y="293" width="0.1124%" height="15" fill="rgb(224,185,1)" fg:x="585" fg:w="1"/><text x="65.9803%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="65.7303%" y="277" width="0.1124%" height="15" fill="rgb(223,139,8)" fg:x="585" fg:w="1"/><text x="65.9803%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.11%)</title><rect x="65.7303%" y="261" width="0.1124%" height="15" fill="rgb(232,213,38)" fg:x="585" fg:w="1"/><text x="65.9803%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="65.7303%" y="245" width="0.1124%" height="15" fill="rgb(207,94,22)" fg:x="585" fg:w="1"/><text x="65.9803%" y="255.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="65.7303%" y="229" width="0.1124%" height="15" fill="rgb(219,183,54)" fg:x="585" fg:w="1"/><text x="65.9803%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.22%)</title><rect x="65.8427%" y="293" width="0.2247%" height="15" fill="rgb(216,185,54)" fg:x="586" fg:w="2"/><text x="66.0927%" y="303.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (1 samples, 0.11%)</title><rect x="65.9551%" y="277" width="0.1124%" height="15" fill="rgb(254,217,39)" fg:x="587" fg:w="1"/><text x="66.2051%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Neg&gt;::neg (1 samples, 0.11%)</title><rect x="66.0674%" y="261" width="0.1124%" height="15" fill="rgb(240,178,23)" fg:x="588" fg:w="1"/><text x="66.3174%" y="271.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.11%)</title><rect x="66.2921%" y="229" width="0.1124%" height="15" fill="rgb(218,11,47)" fg:x="590" fg:w="1"/><text x="66.5421%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (1 samples, 0.11%)</title><rect x="66.2921%" y="213" width="0.1124%" height="15" fill="rgb(218,51,51)" fg:x="590" fg:w="1"/><text x="66.5421%" y="223.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow_p58 (55 samples, 6.18%)</title><rect x="66.1798%" y="261" width="6.1798%" height="15" fill="rgb(238,126,27)" fg:x="589" fg:w="55"/><text x="66.4298%" y="271.50">curve255..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (54 samples, 6.07%)</title><rect x="66.2921%" y="245" width="6.0674%" height="15" fill="rgb(249,202,22)" fg:x="590" fg:w="54"/><text x="66.5421%" y="255.50">curve255..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (53 samples, 5.96%)</title><rect x="66.4045%" y="229" width="5.9551%" height="15" fill="rgb(254,195,49)" fg:x="591" fg:w="53"/><text x="66.6545%" y="239.50">curve255..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (24 samples, 2.70%)</title><rect x="69.6629%" y="213" width="2.6966%" height="15" fill="rgb(208,123,14)" fg:x="620" fg:w="24"/><text x="69.9129%" y="223.50">cu..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invsqrt (57 samples, 6.40%)</title><rect x="66.0674%" y="293" width="6.4045%" height="15" fill="rgb(224,200,8)" fg:x="588" fg:w="57"/><text x="66.3174%" y="303.50">curve255..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (57 samples, 6.40%)</title><rect x="66.0674%" y="277" width="6.4045%" height="15" fill="rgb(217,61,36)" fg:x="588" fg:w="57"/><text x="66.3174%" y="287.50">curve255..</text></g><g><title>curve25519_dalek::field::&lt;impl subtle::ConstantTimeEq for curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::ct_eq (1 samples, 0.11%)</title><rect x="72.3596%" y="261" width="0.1124%" height="15" fill="rgb(206,35,45)" fg:x="644" fg:w="1"/><text x="72.6096%" y="271.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::to_bytes (1 samples, 0.11%)</title><rect x="72.3596%" y="245" width="0.1124%" height="15" fill="rgb(217,65,33)" fg:x="644" fg:w="1"/><text x="72.6096%" y="255.50"></text></g><g><title>curve25519_dalek::ristretto::RistrettoPoint::compress (60 samples, 6.74%)</title><rect x="65.8427%" y="309" width="6.7416%" height="15" fill="rgb(222,158,48)" fg:x="586" fg:w="60"/><text x="66.0927%" y="319.50">curve2551..</text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::is_negative (1 samples, 0.11%)</title><rect x="72.4719%" y="293" width="0.1124%" height="15" fill="rgb(254,2,54)" fg:x="645" fg:w="1"/><text x="72.7219%" y="303.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::to_bytes (1 samples, 0.11%)</title><rect x="72.4719%" y="277" width="0.1124%" height="15" fill="rgb(250,143,38)" fg:x="645" fg:w="1"/><text x="72.7219%" y="287.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.11%)</title><rect x="72.5843%" y="293" width="0.1124%" height="15" fill="rgb(248,25,0)" fg:x="646" fg:w="1"/><text x="72.8343%" y="303.50"></text></g><g><title>&lt;curve25519_dalek::scalar::Scalar as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="72.6966%" y="245" width="0.1124%" height="15" fill="rgb(206,152,27)" fg:x="647" fg:w="1"/><text x="72.9466%" y="255.50"></text></g><g><title>&lt;curve25519_dalek::scalar::Scalar as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.11%)</title><rect x="72.6966%" y="229" width="0.1124%" height="15" fill="rgb(240,77,30)" fg:x="647" fg:w="1"/><text x="72.9466%" y="239.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.11%)</title><rect x="72.6966%" y="213" width="0.1124%" height="15" fill="rgb(231,5,3)" fg:x="647" fg:w="1"/><text x="72.9466%" y="223.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.11%)</title><rect x="72.6966%" y="197" width="0.1124%" height="15" fill="rgb(207,226,32)" fg:x="647" fg:w="1"/><text x="72.9466%" y="207.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="72.6966%" y="181" width="0.1124%" height="15" fill="rgb(222,207,47)" fg:x="647" fg:w="1"/><text x="72.9466%" y="191.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (1 samples, 0.11%)</title><rect x="72.6966%" y="165" width="0.1124%" height="15" fill="rgb(229,115,45)" fg:x="647" fg:w="1"/><text x="72.9466%" y="175.50"></text></g><g><title>subtle::black_box (1 samples, 0.11%)</title><rect x="72.6966%" y="149" width="0.1124%" height="15" fill="rgb(224,191,6)" fg:x="647" fg:w="1"/><text x="72.9466%" y="159.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.11%)</title><rect x="72.6966%" y="133" width="0.1124%" height="15" fill="rgb(230,227,24)" fg:x="647" fg:w="1"/><text x="72.9466%" y="143.50"></text></g><g><title>poksho::proof::Proof::from_slice (3 samples, 0.34%)</title><rect x="72.5843%" y="309" width="0.3371%" height="15" fill="rgb(228,80,19)" fg:x="646" fg:w="3"/><text x="72.8343%" y="319.50"></text></g><g><title>poksho::scalar::scalar_from_slice_canonical (2 samples, 0.22%)</title><rect x="72.6966%" y="293" width="0.2247%" height="15" fill="rgb(247,229,0)" fg:x="647" fg:w="2"/><text x="72.9466%" y="303.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::from_canonical_bytes (2 samples, 0.22%)</title><rect x="72.6966%" y="277" width="0.2247%" height="15" fill="rgb(237,194,15)" fg:x="647" fg:w="2"/><text x="72.9466%" y="287.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::is_canonical (2 samples, 0.22%)</title><rect x="72.6966%" y="261" width="0.2247%" height="15" fill="rgb(219,203,20)" fg:x="647" fg:w="2"/><text x="72.9466%" y="271.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::reduce (1 samples, 0.11%)</title><rect x="72.8090%" y="245" width="0.1124%" height="15" fill="rgb(234,128,8)" fg:x="648" fg:w="1"/><text x="73.0590%" y="255.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_reduce (1 samples, 0.11%)</title><rect x="72.8090%" y="229" width="0.1124%" height="15" fill="rgb(248,202,8)" fg:x="648" fg:w="1"/><text x="73.0590%" y="239.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::sub (1 samples, 0.11%)</title><rect x="72.8090%" y="213" width="0.1124%" height="15" fill="rgb(206,104,37)" fg:x="648" fg:w="1"/><text x="73.0590%" y="223.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::absorb (1 samples, 0.11%)</title><rect x="72.9213%" y="293" width="0.1124%" height="15" fill="rgb(223,8,27)" fg:x="649" fg:w="1"/><text x="73.1713%" y="303.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::update (1 samples, 0.11%)</title><rect x="72.9213%" y="277" width="0.1124%" height="15" fill="rgb(216,217,28)" fg:x="649" fg:w="1"/><text x="73.1713%" y="287.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.11%)</title><rect x="72.9213%" y="261" width="0.1124%" height="15" fill="rgb(249,199,1)" fg:x="649" fg:w="1"/><text x="73.1713%" y="271.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.11%)</title><rect x="72.9213%" y="245" width="0.1124%" height="15" fill="rgb(240,85,17)" fg:x="649" fg:w="1"/><text x="73.1713%" y="255.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.11%)</title><rect x="72.9213%" y="229" width="0.1124%" height="15" fill="rgb(206,108,45)" fg:x="649" fg:w="1"/><text x="73.1713%" y="239.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (1 samples, 0.11%)</title><rect x="72.9213%" y="213" width="0.1124%" height="15" fill="rgb(245,210,41)" fg:x="649" fg:w="1"/><text x="73.1713%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (1 samples, 0.11%)</title><rect x="72.9213%" y="197" width="0.1124%" height="15" fill="rgb(206,13,37)" fg:x="649" fg:w="1"/><text x="73.1713%" y="207.50"></text></g><g><title>sha2::sha256::x86::compress (1 samples, 0.11%)</title><rect x="72.9213%" y="181" width="0.1124%" height="15" fill="rgb(250,61,18)" fg:x="649" fg:w="1"/><text x="73.1713%" y="191.50"></text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.11%)</title><rect x="72.9213%" y="165" width="0.1124%" height="15" fill="rgb(235,172,48)" fg:x="649" fg:w="1"/><text x="73.1713%" y="175.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.11%)</title><rect x="72.9213%" y="149" width="0.1124%" height="15" fill="rgb(249,201,17)" fg:x="649" fg:w="1"/><text x="73.1713%" y="159.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.11%)</title><rect x="72.9213%" y="133" width="0.1124%" height="15" fill="rgb(219,208,6)" fg:x="649" fg:w="1"/><text x="73.1713%" y="143.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.11%)</title><rect x="72.9213%" y="117" width="0.1124%" height="15" fill="rgb(248,31,23)" fg:x="649" fg:w="1"/><text x="73.1713%" y="127.50"></text></g><g><title>poksho::shoapi::ShoApi::absorb_and_ratchet (2 samples, 0.22%)</title><rect x="72.9213%" y="309" width="0.2247%" height="15" fill="rgb(245,15,42)" fg:x="649" fg:w="2"/><text x="73.1713%" y="319.50"></text></g><g><title>&lt;poksho::shohmacsha256::ShoHmacSha256 as poksho::shoapi::ShoApi&gt;::ratchet (1 samples, 0.11%)</title><rect x="73.0337%" y="293" width="0.1124%" height="15" fill="rgb(222,217,39)" fg:x="650" fg:w="1"/><text x="73.2837%" y="303.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (1 samples, 0.11%)</title><rect x="73.0337%" y="277" width="0.1124%" height="15" fill="rgb(210,219,27)" fg:x="650" fg:w="1"/><text x="73.2837%" y="287.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (1 samples, 0.11%)</title><rect x="73.0337%" y="261" width="0.1124%" height="15" fill="rgb(252,166,36)" fg:x="650" fg:w="1"/><text x="73.2837%" y="271.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (1 samples, 0.11%)</title><rect x="73.0337%" y="245" width="0.1124%" height="15" fill="rgb(245,132,34)" fg:x="650" fg:w="1"/><text x="73.2837%" y="255.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (1 samples, 0.11%)</title><rect x="73.0337%" y="229" width="0.1124%" height="15" fill="rgb(236,54,3)" fg:x="650" fg:w="1"/><text x="73.2837%" y="239.50"></text></g><g><title>sha2::sha256::Engine256::finish (1 samples, 0.11%)</title><rect x="73.0337%" y="213" width="0.1124%" height="15" fill="rgb(241,173,43)" fg:x="650" fg:w="1"/><text x="73.2837%" y="223.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (1 samples, 0.11%)</title><rect x="73.0337%" y="197" width="0.1124%" height="15" fill="rgb(215,190,9)" fg:x="650" fg:w="1"/><text x="73.2837%" y="207.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (1 samples, 0.11%)</title><rect x="73.0337%" y="181" width="0.1124%" height="15" fill="rgb(242,101,16)" fg:x="650" fg:w="1"/><text x="73.2837%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (1 samples, 0.11%)</title><rect x="73.0337%" y="165" width="0.1124%" height="15" fill="rgb(223,190,21)" fg:x="650" fg:w="1"/><text x="73.2837%" y="175.50"></text></g><g><title>sha2::sha256::x86::compress (1 samples, 0.11%)</title><rect x="73.0337%" y="149" width="0.1124%" height="15" fill="rgb(215,228,25)" fg:x="650" fg:w="1"/><text x="73.2837%" y="159.50"></text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.11%)</title><rect x="73.0337%" y="133" width="0.1124%" height="15" fill="rgb(225,36,22)" fg:x="650" fg:w="1"/><text x="73.2837%" y="143.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.11%)</title><rect x="73.0337%" y="117" width="0.1124%" height="15" fill="rgb(251,106,46)" fg:x="650" fg:w="1"/><text x="73.2837%" y="127.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.11%)</title><rect x="73.0337%" y="101" width="0.1124%" height="15" fill="rgb(208,90,1)" fg:x="650" fg:w="1"/><text x="73.2837%" y="111.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.67%)</title><rect x="73.2584%" y="245" width="0.6742%" height="15" fill="rgb(243,10,4)" fg:x="652" fg:w="6"/><text x="73.5084%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.11%)</title><rect x="73.9326%" y="245" width="0.1124%" height="15" fill="rgb(212,137,27)" fg:x="658" fg:w="1"/><text x="74.1826%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="73.9326%" y="229" width="0.1124%" height="15" fill="rgb(231,220,49)" fg:x="658" fg:w="1"/><text x="74.1826%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="73.9326%" y="213" width="0.1124%" height="15" fill="rgb(237,96,20)" fg:x="658" fg:w="1"/><text x="74.1826%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="73.9326%" y="197" width="0.1124%" height="15" fill="rgb(239,229,30)" fg:x="658" fg:w="1"/><text x="74.1826%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="73.9326%" y="181" width="0.1124%" height="15" fill="rgb(219,65,33)" fg:x="658" fg:w="1"/><text x="74.1826%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="73.9326%" y="165" width="0.1124%" height="15" fill="rgb(243,134,7)" fg:x="658" fg:w="1"/><text x="74.1826%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="73.9326%" y="149" width="0.1124%" height="15" fill="rgb(216,177,54)" fg:x="658" fg:w="1"/><text x="74.1826%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="73.9326%" y="133" width="0.1124%" height="15" fill="rgb(211,160,20)" fg:x="658" fg:w="1"/><text x="74.1826%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="73.9326%" y="117" width="0.1124%" height="15" fill="rgb(239,85,39)" fg:x="658" fg:w="1"/><text x="74.1826%" y="127.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.11%)</title><rect x="73.9326%" y="101" width="0.1124%" height="15" fill="rgb(232,125,22)" fg:x="658" fg:w="1"/><text x="74.1826%" y="111.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul::{{closure}} (1 samples, 0.11%)</title><rect x="73.9326%" y="85" width="0.1124%" height="15" fill="rgb(244,57,34)" fg:x="658" fg:w="1"/><text x="74.1826%" y="95.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::to_radix_16 (1 samples, 0.11%)</title><rect x="73.9326%" y="69" width="0.1124%" height="15" fill="rgb(214,203,32)" fg:x="658" fg:w="1"/><text x="74.1826%" y="79.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (1 samples, 0.11%)</title><rect x="74.2697%" y="229" width="0.1124%" height="15" fill="rgb(207,58,43)" fg:x="661" fg:w="1"/><text x="74.5197%" y="239.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (1 samples, 0.11%)</title><rect x="74.2697%" y="213" width="0.1124%" height="15" fill="rgb(215,193,15)" fg:x="661" fg:w="1"/><text x="74.5197%" y="223.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (32 samples, 3.60%)</title><rect x="74.3820%" y="229" width="3.5955%" height="15" fill="rgb(232,15,44)" fg:x="662" fg:w="32"/><text x="74.6320%" y="239.50">&lt;&amp;cu..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (19 samples, 2.13%)</title><rect x="75.8427%" y="213" width="2.1348%" height="15" fill="rgb(212,3,48)" fg:x="675" fg:w="19"/><text x="76.0927%" y="223.50">&lt;..</text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (44 samples, 4.94%)</title><rect x="74.0449%" y="245" width="4.9438%" height="15" fill="rgb(218,128,7)" fg:x="659" fg:w="44"/><text x="74.2949%" y="255.50">curve2..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (9 samples, 1.01%)</title><rect x="77.9775%" y="229" width="1.0112%" height="15" fill="rgb(226,216,39)" fg:x="694" fg:w="9"/><text x="78.2275%" y="239.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (8 samples, 0.90%)</title><rect x="78.0899%" y="213" width="0.8989%" height="15" fill="rgb(243,47,51)" fg:x="695" fg:w="8"/><text x="78.3399%" y="223.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (33 samples, 3.71%)</title><rect x="79.4382%" y="229" width="3.7079%" height="15" fill="rgb(241,183,40)" fg:x="707" fg:w="33"/><text x="79.6882%" y="239.50">&lt;&amp;cu..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (19 samples, 2.13%)</title><rect x="81.0112%" y="213" width="2.1348%" height="15" fill="rgb(231,217,32)" fg:x="721" fg:w="19"/><text x="81.2612%" y="223.50">&lt;..</text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (38 samples, 4.27%)</title><rect x="78.9888%" y="245" width="4.2697%" height="15" fill="rgb(229,61,38)" fg:x="703" fg:w="38"/><text x="79.2388%" y="255.50">curve..</text></g><g><title>[sender_send] (1 samples, 0.11%)</title><rect x="83.1461%" y="229" width="0.1124%" height="15" fill="rgb(225,210,5)" fg:x="740" fg:w="1"/><text x="83.3961%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.11%)</title><rect x="83.1461%" y="213" width="0.1124%" height="15" fill="rgb(231,79,45)" fg:x="740" fg:w="1"/><text x="83.3961%" y="223.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.90%)</title><rect x="84.0449%" y="229" width="0.8989%" height="15" fill="rgb(224,100,7)" fg:x="748" fg:w="8"/><text x="84.2949%" y="239.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (20 samples, 2.25%)</title><rect x="84.9438%" y="229" width="2.2472%" height="15" fill="rgb(241,198,18)" fg:x="756" fg:w="20"/><text x="85.1938%" y="239.50">c..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (17 samples, 1.91%)</title><rect x="85.2809%" y="213" width="1.9101%" height="15" fill="rgb(252,97,53)" fg:x="759" fg:w="17"/><text x="85.5309%" y="223.50">&lt;..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (11 samples, 1.24%)</title><rect x="85.9551%" y="197" width="1.2360%" height="15" fill="rgb(220,88,7)" fg:x="765" fg:w="11"/><text x="86.2051%" y="207.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (46 samples, 5.17%)</title><rect x="87.1910%" y="229" width="5.1685%" height="15" fill="rgb(213,176,14)" fg:x="776" fg:w="46"/><text x="87.4410%" y="239.50">curve2..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (45 samples, 5.06%)</title><rect x="87.3034%" y="213" width="5.0562%" height="15" fill="rgb(246,73,7)" fg:x="777" fg:w="45"/><text x="87.5534%" y="223.50">&lt;&amp;curv..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (26 samples, 2.92%)</title><rect x="89.4382%" y="197" width="2.9213%" height="15" fill="rgb(245,64,36)" fg:x="796" fg:w="26"/><text x="89.6882%" y="207.50">&lt;&amp;..</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (3 samples, 0.34%)</title><rect x="92.6966%" y="213" width="0.3371%" height="15" fill="rgb(245,80,10)" fg:x="825" fg:w="3"/><text x="92.9466%" y="223.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (3 samples, 0.34%)</title><rect x="92.6966%" y="197" width="0.3371%" height="15" fill="rgb(232,107,50)" fg:x="825" fg:w="3"/><text x="92.9466%" y="207.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (6 samples, 0.67%)</title><rect x="93.0337%" y="213" width="0.6742%" height="15" fill="rgb(253,3,0)" fg:x="828" fg:w="6"/><text x="93.2837%" y="223.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (5 samples, 0.56%)</title><rect x="93.1461%" y="197" width="0.5618%" height="15" fill="rgb(212,99,53)" fg:x="829" fg:w="5"/><text x="93.3961%" y="207.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (14 samples, 1.57%)</title><rect x="92.3596%" y="229" width="1.5730%" height="15" fill="rgb(249,111,54)" fg:x="822" fg:w="14"/><text x="92.6096%" y="239.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square2 (2 samples, 0.22%)</title><rect x="93.7079%" y="213" width="0.2247%" height="15" fill="rgb(249,55,30)" fg:x="834" fg:w="2"/><text x="93.9579%" y="223.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (97 samples, 10.90%)</title><rect x="83.2584%" y="245" width="10.8989%" height="15" fill="rgb(237,47,42)" fg:x="741" fg:w="97"/><text x="83.5084%" y="255.50">curve25519_dalek..</text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::to_projective (2 samples, 0.22%)</title><rect x="93.9326%" y="229" width="0.2247%" height="15" fill="rgb(211,20,18)" fg:x="836" fg:w="2"/><text x="94.1826%" y="239.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint as core::ops::arith::Neg&gt;::neg (5 samples, 0.56%)</title><rect x="94.3820%" y="213" width="0.5618%" height="15" fill="rgb(231,203,46)" fg:x="840" fg:w="5"/><text x="94.6320%" y="223.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Neg&gt;::neg (3 samples, 0.34%)</title><rect x="94.6067%" y="197" width="0.3371%" height="15" fill="rgb(237,142,3)" fg:x="842" fg:w="3"/><text x="94.8567%" y="207.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::negate (2 samples, 0.22%)</title><rect x="94.7191%" y="181" width="0.2247%" height="15" fill="rgb(241,107,1)" fg:x="843" fg:w="2"/><text x="94.9691%" y="191.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (2 samples, 0.22%)</title><rect x="94.7191%" y="165" width="0.2247%" height="15" fill="rgb(229,83,13)" fg:x="843" fg:w="2"/><text x="94.9691%" y="175.50"></text></g><g><title>&lt;T as subtle::ConditionallyNegatable&gt;::conditional_negate (10 samples, 1.12%)</title><rect x="94.2697%" y="229" width="1.1236%" height="15" fill="rgb(241,91,40)" fg:x="839" fg:w="10"/><text x="94.5197%" y="239.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (4 samples, 0.45%)</title><rect x="94.9438%" y="213" width="0.4494%" height="15" fill="rgb(225,3,45)" fg:x="845" fg:w="4"/><text x="95.1938%" y="223.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (4 samples, 0.45%)</title><rect x="94.9438%" y="197" width="0.4494%" height="15" fill="rgb(244,223,14)" fg:x="845" fg:w="4"/><text x="95.1938%" y="207.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (3 samples, 0.34%)</title><rect x="95.0562%" y="181" width="0.3371%" height="15" fill="rgb(224,124,37)" fg:x="846" fg:w="3"/><text x="95.3062%" y="191.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (35 samples, 3.93%)</title><rect x="95.3933%" y="229" width="3.9326%" height="15" fill="rgb(251,171,30)" fg:x="849" fg:w="35"/><text x="95.6433%" y="239.50">&lt;cur..</text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (35 samples, 3.93%)</title><rect x="95.3933%" y="213" width="3.9326%" height="15" fill="rgb(236,46,54)" fg:x="849" fg:w="35"/><text x="95.6433%" y="223.50">&lt;cur..</text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (31 samples, 3.48%)</title><rect x="95.8427%" y="197" width="3.4831%" height="15" fill="rgb(245,213,5)" fg:x="853" fg:w="31"/><text x="96.0927%" y="207.50">&lt;u6..</text></g><g><title>__libc_start_main (747 samples, 83.93%)</title><rect x="15.8427%" y="613" width="83.9326%" height="15" fill="rgb(230,144,27)" fg:x="141" fg:w="747"/><text x="16.0927%" y="623.50">__libc_start_main</text></g><g><title>main (747 samples, 83.93%)</title><rect x="15.8427%" y="597" width="83.9326%" height="15" fill="rgb(220,86,6)" fg:x="141" fg:w="747"/><text x="16.0927%" y="607.50">main</text></g><g><title>std::rt::lang_start_internal (747 samples, 83.93%)</title><rect x="15.8427%" y="581" width="83.9326%" height="15" fill="rgb(240,20,13)" fg:x="141" fg:w="747"/><text x="16.0927%" y="591.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (747 samples, 83.93%)</title><rect x="15.8427%" y="565" width="83.9326%" height="15" fill="rgb(217,89,34)" fg:x="141" fg:w="747"/><text x="16.0927%" y="575.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (747 samples, 83.93%)</title><rect x="15.8427%" y="549" width="83.9326%" height="15" fill="rgb(229,13,5)" fg:x="141" fg:w="747"/><text x="16.0927%" y="559.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (747 samples, 83.93%)</title><rect x="15.8427%" y="533" width="83.9326%" height="15" fill="rgb(244,67,35)" fg:x="141" fg:w="747"/><text x="16.0927%" y="543.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (747 samples, 83.93%)</title><rect x="15.8427%" y="517" width="83.9326%" height="15" fill="rgb(221,40,2)" fg:x="141" fg:w="747"/><text x="16.0927%" y="527.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (747 samples, 83.93%)</title><rect x="15.8427%" y="501" width="83.9326%" height="15" fill="rgb(237,157,21)" fg:x="141" fg:w="747"/><text x="16.0927%" y="511.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (747 samples, 83.93%)</title><rect x="15.8427%" y="485" width="83.9326%" height="15" fill="rgb(222,94,11)" fg:x="141" fg:w="747"/><text x="16.0927%" y="495.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (747 samples, 83.93%)</title><rect x="15.8427%" y="469" width="83.9326%" height="15" fill="rgb(249,113,6)" fg:x="141" fg:w="747"/><text x="16.0927%" y="479.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (747 samples, 83.93%)</title><rect x="15.8427%" y="453" width="83.9326%" height="15" fill="rgb(238,137,36)" fg:x="141" fg:w="747"/><text x="16.0927%" y="463.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (747 samples, 83.93%)</title><rect x="15.8427%" y="437" width="83.9326%" height="15" fill="rgb(210,102,26)" fg:x="141" fg:w="747"/><text x="16.0927%" y="447.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (747 samples, 83.93%)</title><rect x="15.8427%" y="421" width="83.9326%" height="15" fill="rgb(218,30,30)" fg:x="141" fg:w="747"/><text x="16.0927%" y="431.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (747 samples, 83.93%)</title><rect x="15.8427%" y="405" width="83.9326%" height="15" fill="rgb(214,67,26)" fg:x="141" fg:w="747"/><text x="16.0927%" y="415.50">core::ops::function::FnOnce::call_once</text></g><g><title>sender_send::main (747 samples, 83.93%)</title><rect x="15.8427%" y="389" width="83.9326%" height="15" fill="rgb(251,9,53)" fg:x="141" fg:w="747"/><text x="16.0927%" y="399.50">sender_send::main</text></g><g><title>hecate::sender::generate_frank (747 samples, 83.93%)</title><rect x="15.8427%" y="373" width="83.9326%" height="15" fill="rgb(228,204,25)" fg:x="141" fg:w="747"/><text x="16.0927%" y="383.50">hecate::sender::generate_frank</text></g><g><title>poksho::sign::sign (715 samples, 80.34%)</title><rect x="19.4382%" y="357" width="80.3371%" height="15" fill="rgb(207,153,8)" fg:x="173" fg:w="715"/><text x="19.6882%" y="367.50">poksho::sign::sign</text></g><g><title>poksho::statement::Statement::prove (710 samples, 79.78%)</title><rect x="20.0000%" y="341" width="79.7753%" height="15" fill="rgb(242,9,16)" fg:x="178" fg:w="710"/><text x="20.2500%" y="351.50">poksho::statement::Statement::prove</text></g><g><title>poksho::statement::Statement::verify_proof (335 samples, 37.64%)</title><rect x="62.1348%" y="325" width="37.6404%" height="15" fill="rgb(217,211,10)" fg:x="553" fg:w="335"/><text x="62.3848%" y="335.50">poksho::statement::Statement::verify_proof</text></g><g><title>poksho::statement::Statement::homomorphism_with_subtraction (237 samples, 26.63%)</title><rect x="73.1461%" y="309" width="26.6292%" height="15" fill="rgb(219,228,52)" fg:x="651" fg:w="237"/><text x="73.3961%" y="319.50">poksho::statement::Statement::homomorphism_..</text></g><g><title>&lt;curve25519_dalek::ristretto::RistrettoPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (237 samples, 26.63%)</title><rect x="73.1461%" y="293" width="26.6292%" height="15" fill="rgb(231,92,29)" fg:x="651" fg:w="237"/><text x="73.3961%" y="303.50">&lt;curve25519_dalek::ristretto::RistrettoPoin..</text></g><g><title>&lt;curve25519_dalek::edwards::EdwardsPoint as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (237 samples, 26.63%)</title><rect x="73.1461%" y="277" width="26.6292%" height="15" fill="rgb(232,8,23)" fg:x="651" fg:w="237"/><text x="73.3961%" y="287.50">&lt;curve25519_dalek::edwards::EdwardsPoint as..</text></g><g><title>&lt;curve25519_dalek::backend::serial::scalar_mul::straus::Straus as curve25519_dalek::traits::MultiscalarMul&gt;::multiscalar_mul (237 samples, 26.63%)</title><rect x="73.1461%" y="261" width="26.6292%" height="15" fill="rgb(216,211,34)" fg:x="651" fg:w="237"/><text x="73.3961%" y="271.50">&lt;curve25519_dalek::backend::serial::scalar_..</text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (50 samples, 5.62%)</title><rect x="94.1573%" y="245" width="5.6180%" height="15" fill="rgb(236,151,0)" fg:x="838" fg:w="50"/><text x="94.4073%" y="255.50">curve25..</text></g><g><title>&lt;u16 as subtle::ConstantTimeEq&gt;::ct_eq (4 samples, 0.45%)</title><rect x="99.3258%" y="229" width="0.4494%" height="15" fill="rgb(209,168,3)" fg:x="884" fg:w="4"/><text x="99.5758%" y="239.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="99.6629%" y="213" width="0.1124%" height="15" fill="rgb(208,129,28)" fg:x="887" fg:w="1"/><text x="99.9129%" y="223.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (1 samples, 0.11%)</title><rect x="99.6629%" y="197" width="0.1124%" height="15" fill="rgb(229,78,22)" fg:x="887" fg:w="1"/><text x="99.9129%" y="207.50"></text></g><g><title>subtle::black_box (1 samples, 0.11%)</title><rect x="99.6629%" y="181" width="0.1124%" height="15" fill="rgb(228,187,13)" fg:x="887" fg:w="1"/><text x="99.9129%" y="191.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.11%)</title><rect x="99.6629%" y="165" width="0.1124%" height="15" fill="rgb(240,119,24)" fg:x="887" fg:w="1"/><text x="99.9129%" y="175.50"></text></g><g><title>_start (748 samples, 84.04%)</title><rect x="15.8427%" y="629" width="84.0449%" height="15" fill="rgb(209,194,42)" fg:x="141" fg:w="748"/><text x="16.0927%" y="639.50">_start</text></g><g><title>_dl_start (1 samples, 0.11%)</title><rect x="99.7753%" y="613" width="0.1124%" height="15" fill="rgb(247,200,46)" fg:x="888" fg:w="1"/><text x="100.0253%" y="623.50"></text></g><g><title>_dl_start_final (1 samples, 0.11%)</title><rect x="99.7753%" y="597" width="0.1124%" height="15" fill="rgb(218,76,16)" fg:x="888" fg:w="1"/><text x="100.0253%" y="607.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.11%)</title><rect x="99.7753%" y="581" width="0.1124%" height="15" fill="rgb(225,21,48)" fg:x="888" fg:w="1"/><text x="100.0253%" y="591.50"></text></g><g><title>dl_main (1 samples, 0.11%)</title><rect x="99.7753%" y="565" width="0.1124%" height="15" fill="rgb(239,223,50)" fg:x="888" fg:w="1"/><text x="100.0253%" y="575.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.11%)</title><rect x="99.7753%" y="549" width="0.1124%" height="15" fill="rgb(244,45,21)" fg:x="888" fg:w="1"/><text x="100.0253%" y="559.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.11%)</title><rect x="99.7753%" y="533" width="0.1124%" height="15" fill="rgb(232,33,43)" fg:x="888" fg:w="1"/><text x="100.0253%" y="543.50"></text></g><g><title>openaux (1 samples, 0.11%)</title><rect x="99.7753%" y="517" width="0.1124%" height="15" fill="rgb(209,8,3)" fg:x="888" fg:w="1"/><text x="100.0253%" y="527.50"></text></g><g><title>_dl_map_object (1 samples, 0.11%)</title><rect x="99.7753%" y="501" width="0.1124%" height="15" fill="rgb(214,25,53)" fg:x="888" fg:w="1"/><text x="100.0253%" y="511.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.11%)</title><rect x="99.7753%" y="485" width="0.1124%" height="15" fill="rgb(254,186,54)" fg:x="888" fg:w="1"/><text x="100.0253%" y="495.50"></text></g><g><title>_dl_map_segments (1 samples, 0.11%)</title><rect x="99.7753%" y="469" width="0.1124%" height="15" fill="rgb(208,174,49)" fg:x="888" fg:w="1"/><text x="100.0253%" y="479.50"></text></g><g><title>__mmap64 (1 samples, 0.11%)</title><rect x="99.7753%" y="453" width="0.1124%" height="15" fill="rgb(233,191,51)" fg:x="888" fg:w="1"/><text x="100.0253%" y="463.50"></text></g><g><title>__mmap64 (1 samples, 0.11%)</title><rect x="99.7753%" y="437" width="0.1124%" height="15" fill="rgb(222,134,10)" fg:x="888" fg:w="1"/><text x="100.0253%" y="447.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="99.7753%" y="421" width="0.1124%" height="15" fill="rgb(230,226,20)" fg:x="888" fg:w="1"/><text x="100.0253%" y="431.50"></text></g><g><title>all (890 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(251,111,25)" fg:x="0" fg:w="890"/><text x="0.2500%" y="671.50"></text></g><g><title>sender_send (885 samples, 99.44%)</title><rect x="0.5618%" y="645" width="99.4382%" height="15" fill="rgb(224,40,46)" fg:x="5" fg:w="885"/><text x="0.8118%" y="655.50">sender_send</text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="99.8876%" y="629" width="0.1124%" height="15" fill="rgb(236,108,47)" fg:x="889" fg:w="1"/><text x="100.1376%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="99.8876%" y="613" width="0.1124%" height="15" fill="rgb(234,93,0)" fg:x="889" fg:w="1"/><text x="100.1376%" y="623.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.11%)</title><rect x="99.8876%" y="597" width="0.1124%" height="15" fill="rgb(224,213,32)" fg:x="889" fg:w="1"/><text x="100.1376%" y="607.50"></text></g><g><title>__do_execve_file.isra.0 (1 samples, 0.11%)</title><rect x="99.8876%" y="581" width="0.1124%" height="15" fill="rgb(251,11,48)" fg:x="889" fg:w="1"/><text x="100.1376%" y="591.50"></text></g><g><title>search_binary_handler (1 samples, 0.11%)</title><rect x="99.8876%" y="565" width="0.1124%" height="15" fill="rgb(236,173,5)" fg:x="889" fg:w="1"/><text x="100.1376%" y="575.50"></text></g><g><title>load_elf_binary (1 samples, 0.11%)</title><rect x="99.8876%" y="549" width="0.1124%" height="15" fill="rgb(230,95,12)" fg:x="889" fg:w="1"/><text x="100.1376%" y="559.50"></text></g><g><title>setup_arg_pages (1 samples, 0.11%)</title><rect x="99.8876%" y="533" width="0.1124%" height="15" fill="rgb(232,209,1)" fg:x="889" fg:w="1"/><text x="100.1376%" y="543.50"></text></g><g><title>shift_arg_pages (1 samples, 0.11%)</title><rect x="99.8876%" y="517" width="0.1124%" height="15" fill="rgb(232,6,1)" fg:x="889" fg:w="1"/><text x="100.1376%" y="527.50"></text></g><g><title>__vma_adjust (1 samples, 0.11%)</title><rect x="99.8876%" y="501" width="0.1124%" height="15" fill="rgb(210,224,50)" fg:x="889" fg:w="1"/><text x="100.1376%" y="511.50"></text></g><g><title>vma_adjust_trans_huge (1 samples, 0.11%)</title><rect x="99.8876%" y="485" width="0.1124%" height="15" fill="rgb(228,127,35)" fg:x="889" fg:w="1"/><text x="100.1376%" y="495.50"></text></g></svg></svg>